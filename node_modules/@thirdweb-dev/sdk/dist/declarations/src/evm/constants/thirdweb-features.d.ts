export declare const fallbackAbi: {
    stateMutability: string;
    type: string;
}[];
export declare const getAllPluginsAbi: {
    inputs: never[];
    name: string;
    outputs: {
        components: {
            internalType: string;
            name: string;
            type: string;
        }[];
        internalType: string;
        name: string;
        type: string;
    }[];
    stateMutability: string;
    type: string;
}[];
export declare const getAllExtensionsAbi: {
    inputs: never[];
    name: string;
    outputs: {
        components: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        internalType: string;
        name: string;
        type: string;
    }[];
    stateMutability: string;
    type: string;
}[];
export declare const FEATURE_ROYALTY: {
    readonly name: "Royalty";
    readonly namespace: "royalty";
    readonly docLinks: {
        readonly sdk: "sdk.contractroyalty";
        readonly contracts: "royalty";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_PRIMARY_SALE: {
    readonly name: "PrimarySale";
    readonly namespace: "sales";
    readonly docLinks: {
        readonly sdk: "sdk.contractprimarysale";
        readonly contracts: "primarysale";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_PLATFORM_FEE: {
    readonly name: "PlatformFee";
    readonly namespace: "platformFees";
    readonly docLinks: {
        readonly sdk: "sdk.platformfee";
        readonly contracts: "platformfee";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_PERMISSIONS_ENUMERABLE: {
    readonly name: "PermissionsEnumerable";
    readonly namespace: "roles";
    readonly docLinks: {
        readonly sdk: "sdk.contractroles";
        readonly contracts: "permissionsenumerable";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_PERMISSIONS: {
    readonly name: "Permissions";
    readonly namespace: "roles";
    readonly docLinks: {
        readonly sdk: "sdk.contractroles";
        readonly contracts: "permissions";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {
        readonly PermissionsEnumerable: {
            readonly name: "PermissionsEnumerable";
            readonly namespace: "roles";
            readonly docLinks: {
                readonly sdk: "sdk.contractroles";
                readonly contracts: "permissionsenumerable";
            };
            readonly abis: readonly [({
                type: string;
                name: string;
                inputs: {
                    name: string;
                    type: string;
                    internalType: string;
                }[];
                outputs: {
                    name: string;
                    type: string;
                    internalType: string;
                }[];
                stateMutability: string;
                anonymous?: undefined;
            } | {
                type: string;
                name: string;
                inputs: {
                    name: string;
                    type: string;
                    indexed: boolean;
                    internalType: string;
                }[];
                anonymous: boolean;
                outputs?: undefined;
                stateMutability?: undefined;
            })[]];
            readonly features: {};
        };
    };
};
export declare const FEATURE_METADATA: {
    readonly name: "ContractMetadata";
    readonly namespace: "metadata";
    readonly docLinks: {
        readonly sdk: "sdk.contractmetadata";
        readonly contracts: "contractmetadata";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_APPURI: {
    readonly name: "AppURI";
    readonly namespace: "appURI";
    readonly docLinks: {
        readonly sdk: "sdk.appURI";
        readonly contracts: "";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_OWNER: {
    readonly name: "Ownable";
    readonly namespace: "owner";
    readonly docLinks: {
        readonly sdk: "sdk.owner";
        readonly contracts: "ownable";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        type: string;
        name: string;
        inputs: never[];
        outputs?: undefined;
        stateMutability?: undefined;
        anonymous?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_GASLESS: {
    readonly name: "Gasless";
    readonly namespace: "gasless";
    readonly docLinks: {
        readonly sdk: "sdk.gaslesstransaction";
        readonly contracts: "IERC2771Context";
    };
    readonly abis: readonly [{
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
    }[]];
    readonly features: {};
};
export declare const FEATURE_PACK_VRF: {
    readonly name: "PackVRF";
    readonly namespace: "pack.vrf";
    readonly docLinks: {
        readonly sdk: "sdk.packvrf";
        readonly contracts: "IPackVRF";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        } | {
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        })[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_PLUGIN_ROUTER: {
    readonly name: "PluginRouter";
    readonly namespace: "plugin.router";
    readonly docLinks: {
        readonly sdk: "sdk.pluginrouter";
        readonly contracts: "PluginRouter";
    };
    readonly abis: readonly [{
        inputs: never[];
        name: string;
        outputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[]];
    readonly features: {};
};
export declare const FEATURE_DYNAMIC_CONTRACT: {
    readonly name: "DynamicContract";
    readonly namespace: "dynamic.contract";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IExtensionsManager";
    };
    readonly abis: readonly [{
        inputs: never[];
        name: string;
        outputs: {
            components: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[]];
    readonly features: {};
};
export declare const FEATURE_DIRECT_LISTINGS: {
    readonly name: "DirectListings";
    readonly namespace: "direct.listings";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IDirectListings";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_ENGLISH_AUCTIONS: {
    readonly name: "EnglishAuctions";
    readonly namespace: "english.auctions";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IEnglishAuctions";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_OFFERS: {
    readonly name: "Offers";
    readonly namespace: "offers";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IOffers";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_ACCOUNT_FACTORY: {
    readonly name: "AccountFactory";
    readonly namespace: "accountFactory";
    readonly docLinks: {
        readonly sdk: "sdk.accountFactory";
        readonly contracts: "IAccountFactory";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_ACCOUNT_PERMISSIONS_V1: {
    readonly name: "AccountPermissionsV1";
    readonly namespace: "accountPermissions";
    readonly docLinks: {
        readonly sdk: "sdk.account";
        readonly contracts: "IAccountPermissions";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        } | {
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        })[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_ACCOUNT_PERMISSIONS: {
    readonly name: "AccountPermissions";
    readonly namespace: "accountPermissions";
    readonly docLinks: {
        readonly sdk: "sdk.account";
        readonly contracts: "IAccountPermissions";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        } | {
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        })[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_ACCOUNT: {
    readonly name: "Account";
    readonly namespace: "account";
    readonly docLinks: {
        readonly sdk: "sdk.account";
        readonly contracts: "IAccount";
    };
    readonly abis: readonly [{
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        } | {
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        })[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
    }[]];
    readonly features: {
        readonly AccountPermissions: {
            readonly name: "AccountPermissions";
            readonly namespace: "accountPermissions";
            readonly docLinks: {
                readonly sdk: "sdk.account";
                readonly contracts: "IAccountPermissions";
            };
            readonly abis: readonly [({
                type: string;
                name: string;
                inputs: {
                    name: string;
                    type: string;
                    internalType: string;
                }[];
                outputs: {
                    name: string;
                    type: string;
                    internalType: string;
                    components: {
                        name: string;
                        type: string;
                        internalType: string;
                    }[];
                }[];
                stateMutability: string;
                anonymous?: undefined;
            } | {
                type: string;
                name: string;
                inputs: ({
                    name: string;
                    type: string;
                    internalType: string;
                    components: {
                        name: string;
                        type: string;
                        internalType: string;
                    }[];
                } | {
                    name: string;
                    type: string;
                    internalType: string;
                    components?: undefined;
                })[];
                outputs: {
                    name: string;
                    type: string;
                    internalType: string;
                }[];
                stateMutability: string;
                anonymous?: undefined;
            } | {
                type: string;
                name: string;
                inputs: ({
                    name: string;
                    type: string;
                    indexed: boolean;
                    internalType: string;
                    components?: undefined;
                } | {
                    name: string;
                    type: string;
                    indexed: boolean;
                    internalType: string;
                    components: {
                        name: string;
                        type: string;
                        internalType: string;
                    }[];
                })[];
                anonymous: boolean;
                outputs?: undefined;
                stateMutability?: undefined;
            })[]];
            readonly features: {};
        };
        readonly AccountPermissionsV1: {
            readonly name: "AccountPermissionsV1";
            readonly namespace: "accountPermissions";
            readonly docLinks: {
                readonly sdk: "sdk.account";
                readonly contracts: "IAccountPermissions";
            };
            readonly abis: readonly [({
                type: string;
                name: string;
                inputs: {
                    name: string;
                    type: string;
                    internalType: string;
                }[];
                outputs: {
                    name: string;
                    type: string;
                    internalType: string;
                    components: {
                        name: string;
                        type: string;
                        internalType: string;
                    }[];
                }[];
                stateMutability: string;
                anonymous?: undefined;
            } | {
                type: string;
                name: string;
                inputs: ({
                    name: string;
                    type: string;
                    internalType: string;
                    components: {
                        name: string;
                        type: string;
                        internalType: string;
                    }[];
                } | {
                    name: string;
                    type: string;
                    internalType: string;
                    components?: undefined;
                })[];
                outputs: {
                    name: string;
                    type: string;
                    internalType: string;
                }[];
                stateMutability: string;
                anonymous?: undefined;
            } | {
                type: string;
                name: string;
                inputs: ({
                    name: string;
                    type: string;
                    indexed: boolean;
                    internalType: string;
                    components?: undefined;
                } | {
                    name: string;
                    type: string;
                    indexed: boolean;
                    internalType: string;
                    components: {
                        name: string;
                        type: string;
                        internalType: string;
                    }[];
                })[];
                anonymous: boolean;
                outputs?: undefined;
                stateMutability?: undefined;
            })[]];
            readonly features: {};
        };
    };
};
export declare const FEATURE_AIRDROP_ERC20: {
    readonly name: "AirdropERC20";
    readonly namespace: "airdrop20";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IAirdropERC20";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_AIRDROP_ERC721: {
    readonly name: "AirdropERC721";
    readonly namespace: "airdrop721";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IAirdropERC721";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_AIRDROP_ERC1155: {
    readonly name: "AirdropERC1155";
    readonly namespace: "airdrop1155";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "IAirdropERC1155";
    };
    readonly abis: readonly [({
        type: string;
        name: string;
        inputs: ({
            name: string;
            type: string;
            internalType: string;
            components?: undefined;
        } | {
            name: string;
            type: string;
            internalType: string;
            components: {
                name: string;
                type: string;
                internalType: string;
            }[];
        })[];
        outputs: never[];
        stateMutability: string;
        anonymous?: undefined;
    } | {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
        outputs?: undefined;
        stateMutability?: undefined;
    })[]];
    readonly features: {};
};
export declare const FEATURE_FALLBACK: {
    readonly name: "Fallback";
    readonly namespace: "fallback";
    readonly docLinks: {
        readonly sdk: "";
        readonly contracts: "";
    };
    readonly abis: readonly [{
        stateMutability: string;
        type: string;
    }[]];
    readonly features: {};
};
//# sourceMappingURL=thirdweb-features.d.ts.map