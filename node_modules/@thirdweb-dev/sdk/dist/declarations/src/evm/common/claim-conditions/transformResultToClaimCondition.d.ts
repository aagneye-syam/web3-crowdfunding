import { AbstractClaimConditionContractStruct } from "../../schema/contracts/common/claim-conditions";
import type { ClaimCondition } from "../../types/claim-conditions/claim-conditions";
import { ThirdwebStorage } from "@thirdweb-dev/storage";
import { providers } from "ethers";
/**
 * Transforms a contract model to local model
 * @param pm - The contract model to transform
 * @param tokenDecimals - The token decimals to use
 * @param provider - The provider to use
 * @param merkleMetadata - The merkle metadata to use
 * @param storage - The storage to use
 * @param shouldDownloadSnapshot - Whether to download the snapshot
 * @internal
 */
export declare function transformResultToClaimCondition(pm: AbstractClaimConditionContractStruct, tokenDecimals: number, provider: providers.Provider, merkleMetadata: Record<string, string> | undefined, storage: ThirdwebStorage, shouldDownloadSnapshot: boolean): Promise<ClaimCondition>;
//# sourceMappingURL=transformResultToClaimCondition.d.ts.map