import { type Signer, type providers } from "ethers";
import { ThirdwebStorage } from "@thirdweb-dev/storage";
import { AbiInput } from "../../schema/contracts/custom";
/**
 * Direct deploy a contract at a deterministic address, using Create2 method
 * Address depends on the Create2 factory address and salt (if provided).
 *
 * @deploy
 * @public
 *
 * @param bytecode - The bytecode to deploy
 * @param abi - The abi to use
 * @param signer - The signer to use
 * @param constructorArgs - The constructor args to use
 * @param saltForCreate2 - The salt to use
 */
export declare function directDeployDeterministic(bytecode: string, abi: AbiInput, signer: Signer, constructorArgs: any[], saltForCreate2?: string, gasLimit?: number): Promise<string>;
/**
 * Direct deploy a contract at a deterministic address, using Create2 method
 * Address depends on the Create2 factory address and salt (if provided).
 *
 * @public
 *
 * @param publishMetadataUri - The metadata uri to use
 * @param signer - The signer to use
 * @param storage - The storage to use
 * @param constructorArgs - The constructor args to use
 * @param saltForCreate2 - The salt to use
 */
export declare function directDeployDeterministicWithUri(publishMetadataUri: string, signer: Signer, storage: ThirdwebStorage, constructorArgs: any[], saltForCreate2?: string, gasLimit?: number): Promise<string>;
/**
 * Direct deploy a contract at a deterministic address, using Create2 method
 * Address depends on the Create2 factory address and salt (if provided).
 *
 * @public
 *
 * @param contractName - The name of the contract to deploy
 * @param publisherAddress - The publisher address to use
 * @param contractVersion - The contract version to use
 * @param constructorArgs - The constructor args to use
 * @param signer - The signer to use
 * @param storage - The storage to use
 * @param clientId - The client id to use
 * @param secretKey - The secret key to use
 * @param constructorArgs - The constructor args to use
 * @param saltForCreate2 - The salt to use
 */
export declare function directDeployDeterministicPublished(contractName: string, publisherAddress: string, contractVersion: string | undefined, constructorArgs: any[], signer: Signer, storage: ThirdwebStorage, clientId?: string, secretKey?: string, saltForCreate2?: string, gasLimit?: number): Promise<string>;
export declare function predictAddressDeterministic(bytecode: string, abi: AbiInput, provider: providers.Provider, constructorArgs: any[], saltForCreate2?: string): Promise<string>;
export declare function predictAddressDeterministicWithUri(publishMetadataUri: string, provider: providers.Provider, storage: ThirdwebStorage, constructorArgs: any[], saltForCreate2?: string): Promise<string>;
export declare function predictAddressDeterministicPublished(contractName: string, publisherAddress: string, contractVersion: string | undefined, constructorArgs: any[], provider: providers.Provider, storage: ThirdwebStorage, clientId?: string, secretKey?: string, saltForCreate2?: string): Promise<string>;
//# sourceMappingURL=deployDirectDeterministic.d.ts.map