import { Signer, providers } from "ethers";
import { z } from "zod";
import { ThirdwebStorage } from "@thirdweb-dev/storage";
import type { PrebuiltContractType, DeploySchemaForPrebuiltContractType } from "../contracts";
/**
 *
 * @param contractType - The contract type to get deploy arguments for
 * @param metadata - The metadata to get deploy arguments for
 * @param contractURI - The contract URI to get deploy arguments for
 * @returns
 * @internal
 */
export declare function getDeployArguments<TContractType extends PrebuiltContractType>(contractType: TContractType, metadata: z.input<DeploySchemaForPrebuiltContractType<TContractType>>, contractURI: string, signer: Signer): Promise<any[]>;
/**
 * Get the default trusted forwarders for gasless relaying
 * @deploy
 * @public
 */
export declare function getTrustedForwarders(provider: providers.Provider, storage: ThirdwebStorage, contractName?: string): Promise<string[]>;
//# sourceMappingURL=deploy.d.ts.map