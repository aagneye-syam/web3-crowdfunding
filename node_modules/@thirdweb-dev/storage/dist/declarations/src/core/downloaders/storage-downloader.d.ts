import { GatewayUrls, IStorageDownloader, IpfsDownloaderOptions, SingleDownloadOptions } from "../../types";
/**
 * Default downloader used - handles downloading from all schemes specified in the gateway URLs configuration.
 *
 * @example
 * ```jsx
 * // Can instantiate the downloader with the default gateway URLs
 * const downloader = new StorageDownloader();
 *
 * // client id if used in client-side applications
 * const clientId = "your-client-id";
 * const storage = new ThirdwebStorage({ clientId, downloader });
 *
 * // secret key if used in server-side applications
 * const secretKey = "your-secret-key";
 * const storage = new ThirdwebStorage({ secretKey, downloader });
 * ```
 *
 * @public
 */
export declare class StorageDownloader implements IStorageDownloader {
    DEFAULT_TIMEOUT_IN_SECONDS: number;
    DEFAULT_MAX_RETRIES: number;
    private secretKey?;
    private clientId?;
    private defaultTimeout;
    constructor(options: IpfsDownloaderOptions);
    download(uri: string, gatewayUrls: GatewayUrls, options?: SingleDownloadOptions, attempts?: number): Promise<Response>;
}
//# sourceMappingURL=storage-downloader.d.ts.map