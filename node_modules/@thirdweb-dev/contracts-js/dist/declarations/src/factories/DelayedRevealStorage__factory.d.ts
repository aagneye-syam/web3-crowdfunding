import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DelayedRevealStorage, DelayedRevealStorageInterface } from "../DelayedRevealStorage";
type DelayedRevealStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DelayedRevealStorage__factory extends ContractFactory {
    constructor(...args: DelayedRevealStorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<DelayedRevealStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): DelayedRevealStorage;
    connect(signer: Signer): DelayedRevealStorage__factory;
    static readonly bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80631c46bf9c146038575b600080fd5b605e7f29cbb6a3768b42f407b01945994a37861bf5a2179c5dea5be7e378415e75510081565b60405190815260200160405180910390f3fea2646970667358221220114a63a80cbccfd7cfa15774898732b03d3ba31e08704adfa398fab9babb5c0664736f6c63430008170033";
    static readonly abi: {
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
    }[];
    static createInterface(): DelayedRevealStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DelayedRevealStorage;
}
export {};
//# sourceMappingURL=DelayedRevealStorage__factory.d.ts.map