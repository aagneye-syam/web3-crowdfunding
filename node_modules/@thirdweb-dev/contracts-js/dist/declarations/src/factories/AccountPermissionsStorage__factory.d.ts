import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AccountPermissionsStorage, AccountPermissionsStorageInterface } from "../AccountPermissionsStorage";
type AccountPermissionsStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AccountPermissionsStorage__factory extends ContractFactory {
    constructor(...args: AccountPermissionsStorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<AccountPermissionsStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): AccountPermissionsStorage;
    connect(signer: Signer): AccountPermissionsStorage__factory;
    static readonly bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806376a00512146038575b600080fd5b605e7f3181e78fc1b109bc611fd2406150bf06e33faa75f71cba12c3e1fd670f2def0081565b60405190815260200160405180910390f3fea2646970667358221220361c63e2ad355d32b806c6fde121bca5af510512a8a1b90cfc45263ae84a37e564736f6c63430008170033";
    static readonly abi: {
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
    }[];
    static createInterface(): AccountPermissionsStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AccountPermissionsStorage;
}
export {};
//# sourceMappingURL=AccountPermissionsStorage__factory.d.ts.map