import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ReentrancyGuardStorage, ReentrancyGuardStorageInterface } from "../ReentrancyGuardStorage";
type ReentrancyGuardStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ReentrancyGuardStorage__factory extends ContractFactory {
    constructor(...args: ReentrancyGuardStorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ReentrancyGuardStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): ReentrancyGuardStorage;
    connect(signer: Signer): ReentrancyGuardStorage__factory;
    static readonly bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063984b83ff146038575b600080fd5b605e7f1d281c488dae143b6ea4122e80c65059929950b9c32f17fc57be22089d9c3b0081565b60405190815260200160405180910390f3fea264697066735822122092f49bf9a345082dc9ae28646ef886419e8f8a081ab5eabe223ea3137ad7e71664736f6c63430008170033";
    static readonly abi: {
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
    }[];
    static createInterface(): ReentrancyGuardStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ReentrancyGuardStorage;
}
export {};
//# sourceMappingURL=ReentrancyGuardStorage__factory.d.ts.map