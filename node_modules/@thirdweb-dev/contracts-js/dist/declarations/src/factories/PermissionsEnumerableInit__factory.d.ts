import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PermissionsEnumerableInit, PermissionsEnumerableInitInterface } from "../PermissionsEnumerableInit";
type PermissionsEnumerableInitConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class PermissionsEnumerableInit__factory extends ContractFactory {
    constructor(...args: PermissionsEnumerableInitConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<PermissionsEnumerableInit>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): PermissionsEnumerableInit;
    connect(signer: Signer): PermissionsEnumerableInit__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122074f6ae38436250ea47573e085d3b804e808a3a6da9b2f7cc6458ef662c88885b64736f6c63430008170033";
    static readonly abi: {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
    }[];
    static createInterface(): PermissionsEnumerableInitInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): PermissionsEnumerableInit;
}
export {};
//# sourceMappingURL=PermissionsEnumerableInit__factory.d.ts.map