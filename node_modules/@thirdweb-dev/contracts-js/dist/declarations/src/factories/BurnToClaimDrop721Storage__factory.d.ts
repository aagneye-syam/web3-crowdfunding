import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BurnToClaimDrop721Storage, BurnToClaimDrop721StorageInterface } from "../BurnToClaimDrop721Storage";
type BurnToClaimDrop721StorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BurnToClaimDrop721Storage__factory extends ContractFactory {
    constructor(...args: BurnToClaimDrop721StorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BurnToClaimDrop721Storage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BurnToClaimDrop721Storage;
    connect(signer: Signer): BurnToClaimDrop721Storage__factory;
    static readonly bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063506488a6146038575b600080fd5b605e7f3107fcf7768de14f3c3441e6960e7a1659b448f798b4e6665bf2dc61db3ea30081565b60405190815260200160405180910390f3fea2646970667358221220ebfd321e10d97fff54e8f513d0e273b54b290a43c65d19b84e30b71e4ebcb49364736f6c63430008170033";
    static readonly abi: {
        type: string;
        name: string;
        inputs: never[];
        outputs: {
            name: string;
            type: string;
            internalType: string;
        }[];
        stateMutability: string;
    }[];
    static createInterface(): BurnToClaimDrop721StorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BurnToClaimDrop721Storage;
}
export {};
//# sourceMappingURL=BurnToClaimDrop721Storage__factory.d.ts.map