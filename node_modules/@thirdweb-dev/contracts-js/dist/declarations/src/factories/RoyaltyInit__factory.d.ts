import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RoyaltyInit, RoyaltyInitInterface } from "../RoyaltyInit";
type RoyaltyInitConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RoyaltyInit__factory extends ContractFactory {
    constructor(...args: RoyaltyInitConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<RoyaltyInit>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): RoyaltyInit;
    connect(signer: Signer): RoyaltyInit__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212209ec0713a191bf91cc94a82da6eaccac8b61a55e598e1cd712e8039e10c91a5d064736f6c63430008170033";
    static readonly abi: {
        type: string;
        name: string;
        inputs: {
            name: string;
            type: string;
            indexed: boolean;
            internalType: string;
        }[];
        anonymous: boolean;
    }[];
    static createInterface(): RoyaltyInitInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RoyaltyInit;
}
export {};
//# sourceMappingURL=RoyaltyInit__factory.d.ts.map