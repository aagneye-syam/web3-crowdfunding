'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var ethers = require('ethers');

/* Autogenerated file. Do not edit manually. */
const _abi = [{
  type: "function",
  name: "MULTICHAIN_REGISTRY_STORAGE_POSITION",
  inputs: [],
  outputs: [{
    name: "",
    type: "bytes32",
    internalType: "bytes32"
  }],
  stateMutability: "view"
}];
const _bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063a53a5e53146038575b600080fd5b605e7f14e6df431852605a9ea88d8bd521d0d3fa06563ab37f65080e288e5afad4ac0081565b60405190815260200160405180910390f3fea264697066735822122076a0eb934be31836223d19c0fd26ce9b48e5785a183042611ba6a4fada0304d364736f6c63430008170033";
const isSuperArgs = xs => xs.length > 1;
class TWMultichainRegistryStorage__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static bytecode = _bytecode;
  static abi = _abi;
  static createInterface() {
    return new ethers.utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi, signerOrProvider);
  }
}

exports.TWMultichainRegistryStorage__factory = TWMultichainRegistryStorage__factory;
