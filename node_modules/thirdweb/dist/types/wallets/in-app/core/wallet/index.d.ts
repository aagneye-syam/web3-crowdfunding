import type { Chain } from "../../../../chains/types.js";
import type { Account, Wallet } from "../../../interfaces/wallet.js";
import type { WalletId } from "../../../wallet-types.js";
import type { CreateWalletArgs, WalletAutoConnectionOption, WalletConnectionOption } from "../../../wallet-types.js";
/**
 * Checks if the provided wallet is an in-app wallet.
 *
 * @param wallet - The wallet to check.
 * @returns True if the wallet is an in-app wallet, false otherwise.
 */
export declare function isInAppWallet(wallet: Wallet<WalletId>): wallet is Wallet<"inApp" | "embedded">;
/**
 * @internal
 */
export declare function connectInAppWallet(options: WalletConnectionOption<"inApp">, createOptions: CreateWalletArgs<"inApp">[1]): Promise<[Account, Chain]>;
/**
 * @internal
 */
export declare function autoConnectInAppWallet(options: WalletAutoConnectionOption<"inApp">, createOptions: CreateWalletArgs<"inApp">[1]): Promise<[Account, Chain]>;
//# sourceMappingURL=index.d.ts.map