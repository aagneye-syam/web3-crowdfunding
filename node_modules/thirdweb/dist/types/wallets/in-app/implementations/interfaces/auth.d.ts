import type { AuthDetails, InitializedUser, SetUpWalletRpcReturnType } from "./in-app-wallets/in-app-wallets.js";
export declare enum RecoveryShareManagement {
    USER_MANAGED = "USER_MANAGED",
    CLOUD_MANAGED = "AWS_MANAGED"
}
export declare enum AuthProvider {
    COGNITO = "Cognito",
    GOOGLE = "Google",
    EMAIL_OTP = "EmailOtp",
    CUSTOM_JWT = "CustomJWT",
    CUSTOM_AUTH_ENDPOINT = "CustomAuthEndpoint",
    FACEBOOK = "Facebook",
    APPLE = "Apple",
    PASSKEY = "Passkey"
}
/**
 * @internal
 */
export type GetHeadlessLoginLinkReturnType = {
    loginLink: string;
};
export type StoredTokenType = {
    jwtToken: string;
    authProvider: AuthProvider;
    authDetails: AuthDetails;
    developerClientId: string;
};
export type AuthStoredTokenWithCookieReturnType = {
    storedToken: StoredTokenType & {
        cookieString: string;
        shouldStoreCookieString: boolean;
        isNewUser: boolean;
    };
};
export type AuthAndWalletRpcReturnType = AuthStoredTokenWithCookieReturnType & {
    walletDetails: SetUpWalletRpcReturnType;
};
export type AuthLoginReturnType = {
    user: InitializedUser;
};
//# sourceMappingURL=auth.d.ts.map