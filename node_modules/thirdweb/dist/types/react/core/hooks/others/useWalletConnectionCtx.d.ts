/**
 * @internal
 */
export declare function useConnectUI(): {
    wallets: import("../../../../exports/wallets.js").Wallet[];
    client: import("../../../../client/client.js").ThirdwebClient;
    chain?: {
        readonly id: number;
        readonly name?: string | undefined;
        readonly rpc: string;
        readonly icon?: {
            url: string;
            width: number;
            height: number;
            format: string;
        } | undefined;
        readonly nativeCurrency?: {
            name?: string | undefined;
            symbol?: string | undefined;
            decimals?: number | undefined;
        } | undefined;
        readonly blockExplorers?: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        }[] | undefined;
        readonly testnet?: true | undefined;
        readonly experimental?: {
            increaseZeroByteCount?: boolean | undefined;
        } | undefined;
    } | undefined;
    chains?: {
        readonly id: number;
        readonly name?: string | undefined;
        readonly rpc: string;
        readonly icon?: {
            url: string;
            width: number;
            height: number;
            format: string;
        } | undefined;
        readonly nativeCurrency?: {
            name?: string | undefined;
            symbol?: string | undefined;
            decimals?: number | undefined;
        } | undefined;
        readonly blockExplorers?: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        }[] | undefined;
        readonly testnet?: true | undefined;
        readonly experimental?: {
            increaseZeroByteCount?: boolean | undefined;
        } | undefined;
    }[] | undefined;
    appMetadata?: import("../../../../wallets/types.js").AppMetadata | undefined;
    locale: import("../../../web/ui/types.js").LocaleId;
    connectLocale: import("../../../web/ui/ConnectWallet/locale/types.js").ConnectLocale;
    recommendedWallets?: import("../../../../exports/wallets.js").Wallet[] | undefined;
    walletConnect?: {
        projectId?: string | undefined;
    } | undefined;
    accountAbstraction?: import("../../../../exports/wallets.js").SmartWalletOptions | undefined;
    showAllWallets?: boolean | undefined;
    onConnect?: ((wallet: import("../../../../exports/wallets.js").Wallet) => void) | undefined;
    isEmbed: boolean;
    connectModal: Omit<import("../../../../exports/react.js").ConnectButton_connectModalOptions, "size"> & {
        size: "compact" | "wide";
    };
    auth?: import("../auth/useSiweAuth.js").SiweAuthOptions | undefined;
};
//# sourceMappingURL=useWalletConnectionCtx.d.ts.map