/// <reference types="react" />
import type { ThirdwebClient } from "../../../client/client.js";
import type { Wallet } from "../../../wallets/interfaces/wallet.js";
import type { SmartWalletOptions } from "../../../wallets/smart/types.js";
import type { AppMetadata } from "../../../wallets/types.js";
import type { ConnectButton_connectModalOptions } from "../../web/ui/ConnectWallet/ConnectButtonProps.js";
import type { ConnectLocale } from "../../web/ui/ConnectWallet/locale/types.js";
import type { LocaleId } from "../../web/ui/types.js";
import type { SiweAuthOptions } from "../hooks/auth/useSiweAuth.js";
export declare const ConnectUIContext: import("react").Context<{
    wallets: Wallet[];
    client: ThirdwebClient;
    chain?: {
        readonly id: number;
        readonly name?: string | undefined;
        readonly rpc: string;
        readonly icon?: {
            url: string;
            width: number;
            height: number;
            format: string;
        } | undefined;
        readonly nativeCurrency?: {
            name?: string | undefined;
            symbol?: string | undefined;
            decimals?: number | undefined;
        } | undefined;
        readonly blockExplorers?: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        }[] | undefined;
        readonly testnet?: true | undefined;
        readonly experimental?: {
            increaseZeroByteCount?: boolean | undefined;
        } | undefined;
    } | undefined;
    chains?: {
        readonly id: number;
        readonly name?: string | undefined;
        readonly rpc: string;
        readonly icon?: {
            url: string;
            width: number;
            height: number;
            format: string;
        } | undefined;
        readonly nativeCurrency?: {
            name?: string | undefined;
            symbol?: string | undefined;
            decimals?: number | undefined;
        } | undefined;
        readonly blockExplorers?: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        }[] | undefined;
        readonly testnet?: true | undefined;
        readonly experimental?: {
            increaseZeroByteCount?: boolean | undefined;
        } | undefined;
    }[] | undefined;
    appMetadata?: AppMetadata | undefined;
    locale: LocaleId;
    connectLocale: ConnectLocale;
    recommendedWallets?: Wallet[] | undefined;
    walletConnect?: {
        projectId?: string | undefined;
    } | undefined;
    accountAbstraction?: SmartWalletOptions | undefined;
    showAllWallets?: boolean | undefined;
    onConnect?: ((wallet: Wallet) => void) | undefined;
    isEmbed: boolean;
    connectModal: Omit<ConnectButton_connectModalOptions, "size"> & {
        size: "compact" | "wide";
    };
    auth?: SiweAuthOptions | undefined;
} | null>;
//# sourceMappingURL=wallet-connection.d.ts.map