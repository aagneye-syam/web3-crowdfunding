import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions, WithOverrides } from "../../../../../transaction/types.js";
import type { ThirdwebContract } from "../../../../../contract/contract.js";
/**
 * Represents the parameters for the "cancelDirectListing" function.
 */
export type CancelDirectListingParams = WithOverrides<{
    listingId: AbiParameterToPrimitiveType<{
        type: "uint256";
        name: "_listingId";
    }>;
}>;
export declare const FN_SELECTOR: "0x7506c84a";
/**
 * Checks if the `cancelDirectListing` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `cancelDirectListing` method is supported.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { isCancelDirectListingSupported } from "thirdweb/extensions/marketplace";
 *
 * const supported = await isCancelDirectListingSupported(contract);
 * ```
 */
export declare function isCancelDirectListingSupported(contract: ThirdwebContract<any>): Promise<boolean>;
/**
 * Encodes the parameters for the "cancelDirectListing" function.
 * @param options - The options for the cancelDirectListing function.
 * @returns The encoded ABI parameters.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { encodeCancelDirectListingParams } "thirdweb/extensions/marketplace";
 * const result = encodeCancelDirectListingParams({
 *  listingId: ...,
 * });
 * ```
 */
export declare function encodeCancelDirectListingParams(options: CancelDirectListingParams): `0x${string}`;
/**
 * Encodes the "cancelDirectListing" function into a Hex string with its parameters.
 * @param options - The options for the cancelDirectListing function.
 * @returns The encoded hexadecimal string.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { encodeCancelDirectListing } "thirdweb/extensions/marketplace";
 * const result = encodeCancelDirectListing({
 *  listingId: ...,
 * });
 * ```
 */
export declare function encodeCancelDirectListing(options: CancelDirectListingParams): `0x7506c84a${string}`;
/**
 * Prepares a transaction to call the "cancelDirectListing" function on the contract.
 * @param options - The options for the "cancelDirectListing" function.
 * @returns A prepared transaction object.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { cancelDirectListing } from "thirdweb/extensions/marketplace";
 *
 * const transaction = cancelDirectListing({
 *  contract,
 *  listingId: ...,
 *  overrides: {
 *    ...
 *  }
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function cancelDirectListing(options: BaseTransactionOptions<CancelDirectListingParams | {
    asyncParams: () => Promise<CancelDirectListingParams>;
}>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
//# sourceMappingURL=cancelDirectListing.d.ts.map