import type { BaseTransactionOptions } from "../../../transaction/types.js";
import type { Account } from "../../../wallets/interfaces/wallet.js";
export type RemoveSessionKeyOptions = {
    /**
     * The account that will perform the operation.
     */
    account: Account;
    /**
     * The address to remove as a session key.
     */
    sessionKeyAddress: string;
};
/**
 * Removes session key permissions for a specified address.
 * @param options - The options for the removeSessionKey function.
 * @returns The transaction object to be sent.
 * @example
 * ```ts
 * import { removeSessionKey } from 'thirdweb/extensions/erc4337';
 *
 * const transaction = removeSessionKey({
 * contract,
 * account,
 * sessionKeyAddress
 * });
 * await sendTransaction({ transaction, account });
 * ```
 * @extension ERC4337
 */
export declare function removeSessionKey(options: BaseTransactionOptions<RemoveSessionKeyOptions>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
//# sourceMappingURL=removeSessionKey.d.ts.map