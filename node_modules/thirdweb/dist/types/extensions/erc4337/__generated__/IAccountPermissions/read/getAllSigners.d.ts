import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
import type { ThirdwebContract } from "../../../../../contract/contract.js";
export declare const FN_SELECTOR: "0xd42f2f35";
/**
 * Checks if the `getAllSigners` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `getAllSigners` method is supported.
 * @extension ERC4337
 * @example
 * ```ts
 * import { isGetAllSignersSupported } from "thirdweb/extensions/erc4337";
 *
 * const supported = await isGetAllSignersSupported(contract);
 * ```
 */
export declare function isGetAllSignersSupported(contract: ThirdwebContract<any>): Promise<boolean>;
/**
 * Decodes the result of the getAllSigners function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4337
 * @example
 * ```ts
 * import { decodeGetAllSignersResult } from "thirdweb/extensions/erc4337";
 * const result = decodeGetAllSignersResult("...");
 * ```
 */
export declare function decodeGetAllSignersResult(result: Hex): readonly {
    signer: string;
    approvedTargets: readonly string[];
    nativeTokenLimitPerTransaction: bigint;
    startTimestamp: bigint;
    endTimestamp: bigint;
}[];
/**
 * Calls the "getAllSigners" function on the contract.
 * @param options - The options for the getAllSigners function.
 * @returns The parsed result of the function call.
 * @extension ERC4337
 * @example
 * ```ts
 * import { getAllSigners } from "thirdweb/extensions/erc4337";
 *
 * const result = await getAllSigners({
 *  contract,
 * });
 *
 * ```
 */
export declare function getAllSigners(options: BaseTransactionOptions): Promise<readonly {
    signer: string;
    approvedTargets: readonly string[];
    nativeTokenLimitPerTransaction: bigint;
    startTimestamp: bigint;
    endTimestamp: bigint;
}[]>;
//# sourceMappingURL=getAllSigners.d.ts.map