import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
import type { ThirdwebContract } from "../../../../../contract/contract.js";
export declare const FN_SELECTOR: "0xe9523c97";
/**
 * Checks if the `getAllAdmins` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `getAllAdmins` method is supported.
 * @extension ERC4337
 * @example
 * ```ts
 * import { isGetAllAdminsSupported } from "thirdweb/extensions/erc4337";
 *
 * const supported = await isGetAllAdminsSupported(contract);
 * ```
 */
export declare function isGetAllAdminsSupported(contract: ThirdwebContract<any>): Promise<boolean>;
/**
 * Decodes the result of the getAllAdmins function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4337
 * @example
 * ```ts
 * import { decodeGetAllAdminsResult } from "thirdweb/extensions/erc4337";
 * const result = decodeGetAllAdminsResult("...");
 * ```
 */
export declare function decodeGetAllAdminsResult(result: Hex): readonly string[];
/**
 * Calls the "getAllAdmins" function on the contract.
 * @param options - The options for the getAllAdmins function.
 * @returns The parsed result of the function call.
 * @extension ERC4337
 * @example
 * ```ts
 * import { getAllAdmins } from "thirdweb/extensions/erc4337";
 *
 * const result = await getAllAdmins({
 *  contract,
 * });
 *
 * ```
 */
export declare function getAllAdmins(options: BaseTransactionOptions): Promise<readonly string[]>;
//# sourceMappingURL=getAllAdmins.d.ts.map