import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
import type { ThirdwebContract } from "../../../../../contract/contract.js";
/**
 * Represents the parameters for the "getEthBalance" function.
 */
export type GetEthBalanceParams = {
    addr: AbiParameterToPrimitiveType<{
        internalType: "address";
        name: "addr";
        type: "address";
    }>;
};
export declare const FN_SELECTOR: "0x4d2301cc";
/**
 * Checks if the `getEthBalance` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `getEthBalance` method is supported.
 * @extension MULTICALL3
 * @example
 * ```ts
 * import { isGetEthBalanceSupported } from "thirdweb/extensions/multicall3";
 *
 * const supported = await isGetEthBalanceSupported(contract);
 * ```
 */
export declare function isGetEthBalanceSupported(contract: ThirdwebContract<any>): Promise<boolean>;
/**
 * Encodes the parameters for the "getEthBalance" function.
 * @param options - The options for the getEthBalance function.
 * @returns The encoded ABI parameters.
 * @extension MULTICALL3
 * @example
 * ```ts
 * import { encodeGetEthBalanceParams } "thirdweb/extensions/multicall3";
 * const result = encodeGetEthBalanceParams({
 *  addr: ...,
 * });
 * ```
 */
export declare function encodeGetEthBalanceParams(options: GetEthBalanceParams): `0x${string}`;
/**
 * Encodes the "getEthBalance" function into a Hex string with its parameters.
 * @param options - The options for the getEthBalance function.
 * @returns The encoded hexadecimal string.
 * @extension MULTICALL3
 * @example
 * ```ts
 * import { encodeGetEthBalance } "thirdweb/extensions/multicall3";
 * const result = encodeGetEthBalance({
 *  addr: ...,
 * });
 * ```
 */
export declare function encodeGetEthBalance(options: GetEthBalanceParams): `0x4d2301cc${string}`;
/**
 * Decodes the result of the getEthBalance function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension MULTICALL3
 * @example
 * ```ts
 * import { decodeGetEthBalanceResult } from "thirdweb/extensions/multicall3";
 * const result = decodeGetEthBalanceResult("...");
 * ```
 */
export declare function decodeGetEthBalanceResult(result: Hex): bigint;
/**
 * Calls the "getEthBalance" function on the contract.
 * @param options - The options for the getEthBalance function.
 * @returns The parsed result of the function call.
 * @extension MULTICALL3
 * @example
 * ```ts
 * import { getEthBalance } from "thirdweb/extensions/multicall3";
 *
 * const result = await getEthBalance({
 *  contract,
 *  addr: ...,
 * });
 *
 * ```
 */
export declare function getEthBalance(options: BaseTransactionOptions<GetEthBalanceParams>): Promise<bigint>;
//# sourceMappingURL=getEthBalance.d.ts.map