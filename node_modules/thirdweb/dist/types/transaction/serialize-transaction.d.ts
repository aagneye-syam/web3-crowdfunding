import { type ExactPartial, type SerializedTransactionReturnType, type Signature, type TransactionSerializable } from "viem";
import { type Hex } from "../utils/encoding/hex.js";
export type SerializeTransactionOptions<_transaction extends TransactionSerializable> = {
    transaction: _transaction;
};
/**
 * Serializes a legacy, EIP-1559, EIP-2930, or EIP-4844 transaction object.
 *
 * @param options - The serialization options.
 * @param options.transaction - The transaction object to be serialized, including the signature parameters if necessary.
 * @returns The serialized transaction.
 * @throws An error if the provided transaction object is invalid.
 * @transaction
 * @example
 * ```ts
 * import { serializeTransaction } from "thirdweb";
 *
 * const serializedTransaction = serializeTransaction({ transaction: {
 *    to: "0x",
 *    value: 0n,
 *  }
 * });
 * ```
 */
export declare function serializeTransaction<_transaction extends TransactionSerializable>(options: SerializeTransactionOptions<_transaction>): SerializedTransactionReturnType<_transaction>;
export declare function toYParitySignatureArray(signature: ExactPartial<Signature>): Hex[];
//# sourceMappingURL=serialize-transaction.d.ts.map