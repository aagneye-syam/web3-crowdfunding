"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOwnedNFTs = void 0;
const getNFT_js_1 = require("./getNFT.js");
const getOwnedTokenIds_js_1 = require("./getOwnedTokenIds.js");
/**
 * Retrieves the owned NFTs for a given owner.
 * @param options - The options for retrieving the owned NFTs.
 * @returns A promise that resolves to an array of NFTs owned by the specified owner.
 * @extension ERC721
 * @example
 * ```ts
 * import { getOwnedNFTs } from "thirdweb/extensions/erc721";
 *
 * const ownedNFTs = await getOwnedNFTs({
 *  contract,
 *  owner: "0x1234...",
 * });
 * ```
 */
async function getOwnedNFTs(options) {
    const tokenIds = await (0, getOwnedTokenIds_js_1.getOwnedTokenIds)(options);
    return Promise.all(tokenIds.map((tokenId) => (0, getNFT_js_1.getNFT)({
        contract: options.contract,
        tokenId,
    }).then((nft) => ({
        ...nft,
        // add the owner to the NFT since we know it
        owner: options.owner,
    }))));
}
exports.getOwnedNFTs = getOwnedNFTs;
//# sourceMappingURL=getOwnedNFTs.js.map