"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSessionKey = void 0;
const setPermissionsForSigner_js_1 = require("../__generated__/IAccountPermissions/write/setPermissionsForSigner.js");
const common_js_1 = require("./common.js");
/**
 * Adds session key permissions for a specified address.
 * @param options - The options for the removeSessionKey function.
 * @returns The transaction object to be sent.
 * @example
 * ```ts
 * import { addSessionKey } from 'thirdweb/extensions/erc4337';
 *
 * const transaction = addSessionKey({
 * contract,
 * account,
 * sessionKeyAddress,
 * permissions: {
 *  approvedTargets: ['0x...'],
 *  nativeTokenLimitPerTransaction: 0.1, // in ETH
 *  permissionStartTimestamp: new Date(),
 *  permissionEndTimestamp: new Date(Date.now() + 1000 * 60 * 60 * 24 * 365), // 1 year from now
 * }
 * });
 * await sendTransaction({ transaction, account });
 * ```
 * @extension ERC4337
 */
function addSessionKey(options) {
    const { contract, sessionKeyAddress, account, permissions } = options;
    return (0, setPermissionsForSigner_js_1.setPermissionsForSigner)({
        contract,
        async asyncParams() {
            const { req, signature } = await (0, common_js_1.signPermissionRequest)({
                account,
                contract,
                req: await (0, common_js_1.toContractPermissions)({
                    target: sessionKeyAddress,
                    permissions,
                }),
            });
            return { signature, req };
        },
    });
}
exports.addSessionKey = addSessionKey;
//# sourceMappingURL=addSessionKey.js.map