"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllAdmins = exports.decodeGetAllAdminsResult = exports.isGetAllAdminsSupported = exports.FN_SELECTOR = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const viem_1 = require("viem");
const detectExtension_js_1 = require("../../../../../utils/bytecode/detectExtension.js");
exports.FN_SELECTOR = "0xe9523c97";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "address[]",
        name: "admins",
    },
];
/**
 * Checks if the `getAllAdmins` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `getAllAdmins` method is supported.
 * @extension ERC4337
 * @example
 * ```ts
 * import { isGetAllAdminsSupported } from "thirdweb/extensions/erc4337";
 *
 * const supported = await isGetAllAdminsSupported(contract);
 * ```
 */
async function isGetAllAdminsSupported(contract) {
    return (0, detectExtension_js_1.detectMethod)({
        contract,
        method: [exports.FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
    });
}
exports.isGetAllAdminsSupported = isGetAllAdminsSupported;
/**
 * Decodes the result of the getAllAdmins function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4337
 * @example
 * ```ts
 * import { decodeGetAllAdminsResult } from "thirdweb/extensions/erc4337";
 * const result = decodeGetAllAdminsResult("...");
 * ```
 */
function decodeGetAllAdminsResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeGetAllAdminsResult = decodeGetAllAdminsResult;
/**
 * Calls the "getAllAdmins" function on the contract.
 * @param options - The options for the getAllAdmins function.
 * @returns The parsed result of the function call.
 * @extension ERC4337
 * @example
 * ```ts
 * import { getAllAdmins } from "thirdweb/extensions/erc4337";
 *
 * const result = await getAllAdmins({
 *  contract,
 * });
 *
 * ```
 */
async function getAllAdmins(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [exports.FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
exports.getAllAdmins = getAllAdmins;
//# sourceMappingURL=getAllAdmins.js.map