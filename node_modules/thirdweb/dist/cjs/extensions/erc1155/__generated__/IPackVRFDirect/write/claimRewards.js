"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.claimRewards = exports.isClaimRewardsSupported = exports.FN_SELECTOR = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const detectExtension_js_1 = require("../../../../../utils/bytecode/detectExtension.js");
exports.FN_SELECTOR = "0x372500ab";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "tuple[]",
        name: "rewardUnits",
        components: [
            {
                type: "address",
                name: "assetContract",
            },
            {
                type: "uint8",
                name: "tokenType",
            },
            {
                type: "uint256",
                name: "tokenId",
            },
            {
                type: "uint256",
                name: "totalAmount",
            },
        ],
    },
];
/**
 * Checks if the `claimRewards` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `claimRewards` method is supported.
 * @extension ERC1155
 * @example
 * ```ts
 * import { isClaimRewardsSupported } from "thirdweb/extensions/erc1155";
 *
 * const supported = await isClaimRewardsSupported(contract);
 * ```
 */
async function isClaimRewardsSupported(contract) {
    return (0, detectExtension_js_1.detectMethod)({
        contract,
        method: [exports.FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
    });
}
exports.isClaimRewardsSupported = isClaimRewardsSupported;
/**
 * Prepares a transaction to call the "claimRewards" function on the contract.
 * @param options - The options for the "claimRewards" function.
 * @returns A prepared transaction object.
 * @extension ERC1155
 * @example
 * ```ts
 * import { claimRewards } from "thirdweb/extensions/erc1155";
 *
 * const transaction = claimRewards();
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function claimRewards(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [exports.FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
    });
}
exports.claimRewards = claimRewards;
//# sourceMappingURL=claimRewards.js.map