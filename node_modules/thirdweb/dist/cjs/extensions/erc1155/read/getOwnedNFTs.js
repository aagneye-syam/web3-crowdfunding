"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOwnedNFTs = void 0;
const balanceOfBatch_js_1 = require("../__generated__/IERC1155/read/balanceOfBatch.js");
const nextTokenIdToMint_js_1 = require("../__generated__/IERC1155Enumerable/read/nextTokenIdToMint.js");
const getNFT_js_1 = require("./getNFT.js");
const DEFAULT_QUERY_ALL_COUNT = 100;
/**
 * Retrieves the owned ERC1155 NFTs for a given wallet address.
 * @param options - The transaction options and parameters.
 * @returns A promise that resolves to an array of ERC1155 NFTs owned by the wallet address, along with the quantity owned.
 * @extension ERC1155
 * @example
 * ```ts
 * import { getOwnedNFTs } from "thirdweb/extensions/erc1155";
 * const nfts = await getOwnedNFTs({
 *  contract,
 *  start: 0,
 *  count: 10,
 *  address: "0x123...",
 * });
 * ```
 */
async function getOwnedNFTs(options) {
    const maxId = await (0, nextTokenIdToMint_js_1.nextTokenIdToMint)(options);
    // approach is naieve, likely can be improved
    const owners = [];
    const tokenIds = [];
    for (let i = 0n; i < maxId; i++) {
        owners.push(options.address);
        tokenIds.push(i);
    }
    const balances = await (0, balanceOfBatch_js_1.balanceOfBatch)({
        ...options,
        owners,
        tokenIds,
    });
    let ownedBalances = balances
        .map((b, i) => {
        return {
            tokenId: i,
            balance: b,
        };
    })
        .filter((b) => b.balance > 0);
    if (options.start || options.count) {
        const start = options?.start || 0;
        const count = options?.count || DEFAULT_QUERY_ALL_COUNT;
        ownedBalances = ownedBalances.slice(start, start + count);
    }
    const nfts = await Promise.all(ownedBalances.map((ob) => (0, getNFT_js_1.getNFT)({ ...options, tokenId: BigInt(ob.tokenId) })));
    return nfts.map((nft, index) => ({
        ...nft,
        owner: options.address,
        quantityOwned: ownedBalances[index]?.balance || 0n,
    }));
}
exports.getOwnedNFTs = getOwnedNFTs;
//# sourceMappingURL=getOwnedNFTs.js.map