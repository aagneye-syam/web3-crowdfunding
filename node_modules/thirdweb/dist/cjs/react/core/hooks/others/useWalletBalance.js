"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useWalletBalance = void 0;
const react_query_1 = require("@tanstack/react-query");
const getWalletBalance_js_1 = require("../../../../wallets/utils/getWalletBalance.js");
// NOTE: Do not use useConnectUI here - because this hook is also used outside of Connect UI context
/**
 * Custom hook to fetch the balance of a wallet for a specific token.
 * @param options - The options for fetching the wallet balance.
 * @returns The result of the query.
 * @internal
 */
function useWalletBalance(options) {
    const { chain, address, tokenAddress, client } = options;
    const query = (0, react_query_1.queryOptions)({
        queryKey: [
            "walletBalance",
            chain?.id || -1,
            address || "0x0",
            { tokenAddress },
        ],
        queryFn: async () => {
            if (!chain) {
                throw new Error("chain is required");
            }
            if (!client) {
                throw new Error("client is required");
            }
            if (!address) {
                throw new Error("address is required");
            }
            return (0, getWalletBalance_js_1.getWalletBalance)({ chain, client, address, tokenAddress });
        },
        enabled: !!chain && !!client && !!address,
    });
    return (0, react_query_1.useQuery)(query);
}
exports.useWalletBalance = useWalletBalance;
//# sourceMappingURL=useWalletBalance.js.map