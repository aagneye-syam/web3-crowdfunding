"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentSelection = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const styled_1 = require("@emotion/styled");
const Spacer_js_1 = require("../../../components/Spacer.js");
const basic_js_1 = require("../../../components/basic.js");
const buttons_js_1 = require("../../../components/buttons.js");
const text_js_1 = require("../../../components/text.js");
const CustomThemeProvider_js_1 = require("../../../design-system/CustomThemeProvider.js");
const index_js_1 = require("../../../design-system/index.js");
/**
 * @internal
 */
function PaymentSelection(props) {
    return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "sm", children: "Pay with " }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "xs" }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { style: {
                    display: "grid",
                    gridTemplateColumns: "1fr 1fr",
                    gridGap: index_js_1.spacing.sm,
                }, children: [(0, jsx_runtime_1.jsx)(CheckButton, { isChecked: props.selected === "creditCard", variant: "outline", onClick: () => {
                            props.onSelect("creditCard");
                        }, children: "Credit Card" }), (0, jsx_runtime_1.jsx)(CheckButton, { isChecked: props.selected === "crypto", variant: "outline", onClick: () => {
                            props.onSelect("crypto");
                        }, children: "Crypto" })] })] }));
}
exports.PaymentSelection = PaymentSelection;
const CheckButton = /* @__PURE__ */ (0, styled_1.default)(buttons_js_1.Button)((props) => {
    const theme = (0, CustomThemeProvider_js_1.useCustomTheme)();
    return {
        fontSize: index_js_1.fontSize.sm,
        borderColor: props.isChecked
            ? theme.colors.accentText
            : theme.colors.borderColor,
        "&:hover": {
            borderColor: props.isChecked
                ? theme.colors.accentText
                : theme.colors.secondaryText,
        },
        gap: index_js_1.spacing.xs,
        paddingInline: index_js_1.spacing.xxs,
        paddingBlock: index_js_1.spacing.sm,
        width: "100%",
    };
});
//# sourceMappingURL=PaymentSelection.js.map