"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanScreen = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const useWalletConnectionCtx_js_1 = require("../../../core/hooks/others/useWalletConnectionCtx.js");
const QRCode_js_1 = require("../../ui/components/QRCode.js");
const Spacer_js_1 = require("../../ui/components/Spacer.js");
const WalletImage_js_1 = require("../../ui/components/WalletImage.js");
const basic_js_1 = require("../../ui/components/basic.js");
const buttons_js_1 = require("../../ui/components/buttons.js");
const text_js_1 = require("../../ui/components/text.js");
const index_js_1 = require("../../ui/design-system/index.js");
/**
 * @internal
 */
const ScanScreen = (props) => {
    const { connectModal, client } = (0, useWalletConnectionCtx_js_1.useConnectUI)();
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { fullHeight: true, flex: "column", animate: "fadein", children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { p: "lg", children: (0, jsx_runtime_1.jsx)(basic_js_1.ModalHeader, { onBack: props.onBack, title: props.walletName }) }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "sm" }), (0, jsx_runtime_1.jsx)(basic_js_1.Container, { expand: true, flex: "column", px: "lg", center: "both", children: (0, jsx_runtime_1.jsxs)("div", { style: {
                        textAlign: "center",
                    }, children: [(0, jsx_runtime_1.jsx)(QRCode_js_1.QRCode, { qrCodeUri: props.qrCodeUri, QRIcon: (0, jsx_runtime_1.jsx)(WalletImage_js_1.WalletImage, { size: index_js_1.iconSize.xxl, id: props.walletId, client: client }) }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "lg" }), (0, jsx_runtime_1.jsx)(text_js_1.Text, { center: true, multiline: true, balance: true, style: {
                                paddingInline: index_js_1.spacing.lg,
                            }, children: props.qrScanInstruction })] }) }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "lg" }), props.onGetStarted && ((0, jsx_runtime_1.jsx)(basic_js_1.ScreenBottomContainer, { style: {
                    border: connectModal.size === "compact" ? undefined : "none",
                }, children: (0, jsx_runtime_1.jsx)(buttons_js_1.Button, { variant: "link", onClick: props.onGetStarted, style: {
                        fontSize: index_js_1.fontSize.sm,
                        textAlign: "center",
                    }, children: props.getStartedLink }) }))] }));
};
exports.ScanScreen = ScanScreen;
//# sourceMappingURL=ScanScreen.js.map