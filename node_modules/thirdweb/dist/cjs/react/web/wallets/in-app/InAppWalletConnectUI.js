"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const useWalletConnectionCtx_js_1 = require("../../../core/hooks/others/useWalletConnectionCtx.js");
const wallet_ui_states_provider_js_1 = require("../../providers/wallet-ui-states-provider.js");
const LoadingScreen_js_1 = require("../shared/LoadingScreen.js");
const InAppWalletFormUI_js_1 = require("./InAppWalletFormUI.js");
const InAppWalletOTPLoginUI_js_1 = require("./InAppWalletOTPLoginUI.js");
const InAppWalletPassKeyLogin_js_1 = require("./InAppWalletPassKeyLogin.js");
const InAppWalletSocialLogin_js_1 = require("./InAppWalletSocialLogin.js");
const useInAppWalletLocale_js_1 = require("./useInAppWalletLocale.js");
/**
 *
 * @internal
 */
function InAppWalletConnectUI(props) {
    const data = (0, wallet_ui_states_provider_js_1.useSelectionData)();
    const setSelectionData = (0, wallet_ui_states_provider_js_1.useSetSelectionData)();
    const state = data;
    const locale = (0, useInAppWalletLocale_js_1.useInAppWalletLocale)();
    const { connectModal } = (0, useWalletConnectionCtx_js_1.useConnectUI)();
    if (!locale) {
        return (0, jsx_runtime_1.jsx)(LoadingScreen_js_1.LoadingScreen, {});
    }
    const goBackToMain = connectModal.size === "compact"
        ? props.goBack
        : () => {
            setSelectionData({});
        };
    const otpUserInfo = state?.emailLogin
        ? { email: state.emailLogin }
        : state?.phoneLogin
            ? { phone: state.phoneLogin }
            : undefined;
    if (otpUserInfo) {
        return ((0, jsx_runtime_1.jsx)(InAppWalletOTPLoginUI_js_1.InAppWalletOTPLoginUI, { userInfo: otpUserInfo, locale: locale, done: props.done, goBack: goBackToMain, wallet: props.wallet }));
    }
    if (state?.passkeyLogin) {
        return ((0, jsx_runtime_1.jsx)(InAppWalletPassKeyLogin_js_1.InAppWalletPassKeyLogin, { wallet: props.wallet, done: props.done, onBack: goBackToMain }));
    }
    if (state?.socialLogin) {
        return ((0, jsx_runtime_1.jsx)(InAppWalletSocialLogin_js_1.InAppWalletSocialLogin, { socialAuth: state.socialLogin.type, locale: locale, done: props.done, goBack: goBackToMain, wallet: props.wallet, state: state }));
    }
    return ((0, jsx_runtime_1.jsx)(InAppWalletFormUI_js_1.InAppWalletFormUIScreen, { select: () => { }, locale: locale, done: props.done, goBack: props.goBack, wallet: props.wallet }));
}
exports.default = InAppWalletConnectUI;
//# sourceMappingURL=InAppWalletConnectUI.js.map