"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatWalletConnectUrl = exports.isHttpUrl = void 0;
/**
 * @internal
 */
function isHttpUrl(url) {
    return url.startsWith("http://") || url.startsWith("https://");
}
exports.isHttpUrl = isHttpUrl;
/**
 * @internal
 */
function formatUniversalUrl(appUrl, wcUri) {
    if (!isHttpUrl(appUrl)) {
        return formatNativeUrl(appUrl, wcUri);
    }
    let safeAppUrl = appUrl;
    if (!safeAppUrl.endsWith("/")) {
        safeAppUrl = `${safeAppUrl}/`;
    }
    const encodedWcUrl = encodeURIComponent(wcUri);
    return {
        redirect: `${safeAppUrl}wc?uri=${encodedWcUrl}`,
        href: safeAppUrl,
    };
}
/**
 * @internal
 */
function formatNativeUrl(appUrl, wcUri) {
    if (isHttpUrl(appUrl)) {
        return formatUniversalUrl(appUrl, wcUri);
    }
    let safeAppUrl = appUrl;
    if (!safeAppUrl.includes("://")) {
        safeAppUrl = appUrl.replaceAll("/", "").replaceAll(":", "");
        safeAppUrl = `${safeAppUrl}://`;
    }
    if (!safeAppUrl.endsWith("/")) {
        safeAppUrl = `${safeAppUrl}/`;
    }
    const encodedWcUrl = encodeURIComponent(wcUri);
    return {
        redirect: `${safeAppUrl}wc?uri=${encodedWcUrl}`,
        href: safeAppUrl,
    };
}
/**
 * @internal
 */
function formatWalletConnectUrl(appUrl, wcUri) {
    return isHttpUrl(appUrl)
        ? formatUniversalUrl(appUrl, wcUri)
        : formatNativeUrl(appUrl, wcUri);
}
exports.formatWalletConnectUrl = formatWalletConnectUrl;
//# sourceMappingURL=url.js.map