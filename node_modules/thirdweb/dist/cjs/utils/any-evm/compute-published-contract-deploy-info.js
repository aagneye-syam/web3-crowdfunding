"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computeDeploymentInfoFromMetadata = exports.computeDeploymentInfoFromContractId = void 0;
const publisher_js_1 = require("../../contract/deployment/publisher.js");
const create_2_factory_js_1 = require("../../contract/deployment/utils/create-2-factory.js");
const encodeAbiParameters_js_1 = require("../abi/encodeAbiParameters.js");
const get_init_bytecode_with_salt_js_1 = require("./get-init-bytecode-with-salt.js");
/**
 * @internal
 */
async function computeDeploymentInfoFromContractId(args) {
    const { client, chain, contractId, constructorParams, salt } = args;
    const contractMetadata = await (0, publisher_js_1.fetchPublishedContractMetadata)({
        client,
        contractId,
        publisher: args.publisher,
    });
    return computeDeploymentInfoFromMetadata({
        client,
        chain,
        contractMetadata,
        constructorParams,
        salt,
    });
}
exports.computeDeploymentInfoFromContractId = computeDeploymentInfoFromContractId;
/**
 * @internal
 */
async function computeDeploymentInfoFromMetadata(args) {
    const { client, chain, contractMetadata, constructorParams, salt } = args;
    const { compilerMetadata } = contractMetadata;
    const create2FactoryAddress = await (0, create_2_factory_js_1.computeCreate2FactoryAddress)({
        client,
        chain,
    });
    const bytecode = compilerMetadata.bytecode;
    const constructorAbi = compilerMetadata.abi.find((abi) => abi.type === "constructor") || [];
    const encodedArgs = (0, encodeAbiParameters_js_1.encodeAbiParameters)(constructorAbi.inputs ?? [], constructorParams);
    const initBytecodeWithsalt = (0, get_init_bytecode_with_salt_js_1.getInitBytecodeWithSalt)({
        bytecode,
        encodedArgs,
        salt,
    });
    return {
        bytecode,
        initBytecodeWithsalt,
        encodedArgs,
        create2FactoryAddress,
    };
}
exports.computeDeploymentInfoFromMetadata = computeDeploymentInfoFromMetadata;
//# sourceMappingURL=compute-published-contract-deploy-info.js.map