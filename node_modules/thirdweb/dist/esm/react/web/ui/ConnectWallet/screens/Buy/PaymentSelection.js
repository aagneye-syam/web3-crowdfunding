import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from "@emotion/styled";
import { Spacer } from "../../../components/Spacer.js";
import { Container } from "../../../components/basic.js";
import { Button } from "../../../components/buttons.js";
import { Text } from "../../../components/text.js";
import { useCustomTheme } from "../../../design-system/CustomThemeProvider.js";
import { fontSize, spacing } from "../../../design-system/index.js";
/**
 * @internal
 */
export function PaymentSelection(props) {
    return (_jsxs("div", { children: [_jsx(Text, { size: "sm", children: "Pay with " }), _jsx(Spacer, { y: "xs" }), _jsxs(Container, { style: {
                    display: "grid",
                    gridTemplateColumns: "1fr 1fr",
                    gridGap: spacing.sm,
                }, children: [_jsx(CheckButton, { isChecked: props.selected === "creditCard", variant: "outline", onClick: () => {
                            props.onSelect("creditCard");
                        }, children: "Credit Card" }), _jsx(CheckButton, { isChecked: props.selected === "crypto", variant: "outline", onClick: () => {
                            props.onSelect("crypto");
                        }, children: "Crypto" })] })] }));
}
const CheckButton = /* @__PURE__ */ styled(Button)((props) => {
    const theme = useCustomTheme();
    return {
        fontSize: fontSize.sm,
        borderColor: props.isChecked
            ? theme.colors.accentText
            : theme.colors.borderColor,
        "&:hover": {
            borderColor: props.isChecked
                ? theme.colors.accentText
                : theme.colors.secondaryText,
        },
        gap: spacing.xs,
        paddingInline: spacing.xxs,
        paddingBlock: spacing.sm,
        width: "100%",
    };
});
//# sourceMappingURL=PaymentSelection.js.map