"use client";
import { jsx as _jsx } from "react/jsx-runtime";
import { useChainQuery } from "../../../../core/hooks/others/useChainQuery.js";
import { isNativeToken, } from "../../ConnectWallet/screens/nativeToken.js";
import { fontSize } from "../../design-system/index.js";
import { Skeleton } from "../Skeleton.js";
import { Text } from "../text.js";
/**
 * @internal
 */
export function TokenSymbol(props) {
    if (!isNativeToken(props.token)) {
        return (_jsx(Text, { size: props.size, color: props.color || "primaryText", inline: props.inline, children: props.token.symbol }));
    }
    return (_jsx(NativeTokenSymbol, { chain: props.chain, size: props.size, color: props.color, inline: props.inline }));
}
function NativeTokenSymbol(props) {
    const chainQuery = useChainQuery(props.chain);
    if (!chainQuery.isFetched) {
        return _jsx(Skeleton, { width: "70px", height: fontSize[props.size] });
    }
    return (_jsx(Text, { size: props.size, color: props.color || "primaryText", inline: props.inline, children: chainQuery.data?.nativeCurrency.symbol ?? "ETH" }));
}
//# sourceMappingURL=TokenSymbol.js.map