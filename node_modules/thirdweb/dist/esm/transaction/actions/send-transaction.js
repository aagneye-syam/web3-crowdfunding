import { toSerializableTransaction } from "./to-serializable-transaction.js";
/**
 * Sends a transaction using the provided wallet.
 * @param options - The options for sending the transaction.
 * @returns A promise that resolves to the transaction hash.
 * @throws An error if the wallet is not connected.
 * @transaction
 * @example
 * ```ts
 * import { sendTransaction } from "thirdweb";
 *
 * const { transactionHash } = await sendTransaction({
 *  account,
 *  transaction
 * });
 * ```
 */
export async function sendTransaction(options) {
    const { account, transaction, gasless } = options;
    const serializableTransaction = await toSerializableTransaction({
        transaction: transaction,
        from: account.address,
    });
    // branch for gasless transactions
    if (gasless) {
        // lazy load the gasless tx function because it's only needed for gasless transactions
        const { sendGaslessTransaction } = await import("./gasless/send-gasless-transaction.js");
        return sendGaslessTransaction({
            account,
            transaction,
            serializableTransaction,
            gasless,
        });
    }
    const result = await account.sendTransaction(serializableTransaction);
    return { ...result, chain: transaction.chain, client: transaction.client };
}
//# sourceMappingURL=send-transaction.js.map