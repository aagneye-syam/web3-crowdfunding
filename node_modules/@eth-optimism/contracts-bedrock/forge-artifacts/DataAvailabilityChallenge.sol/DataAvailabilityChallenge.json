{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"balances","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"bondSize","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"challenge","inputs":[{"name":"challengedBlockNumber","type":"uint256","internalType":"uint256"},{"name":"challengedCommitment","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"challengeWindow","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"deposit","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"fixedResolutionCost","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getChallenge","inputs":[{"name":"challengedBlockNumber","type":"uint256","internalType":"uint256"},{"name":"challengedCommitment","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Challenge","components":[{"name":"challenger","type":"address","internalType":"address"},{"name":"lockedBond","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint256","internalType":"uint256"},{"name":"resolvedBlock","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getChallengeStatus","inputs":[{"name":"challengedBlockNumber","type":"uint256","internalType":"uint256"},{"name":"challengedCommitment","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint8","internalType":"enum ChallengeStatus"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_owner","type":"address","internalType":"address"},{"name":"_challengeWindow","type":"uint256","internalType":"uint256"},{"name":"_resolveWindow","type":"uint256","internalType":"uint256"},{"name":"_bondSize","type":"uint256","internalType":"uint256"},{"name":"_resolverRefundPercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolve","inputs":[{"name":"challengedBlockNumber","type":"uint256","internalType":"uint256"},{"name":"challengedCommitment","type":"bytes","internalType":"bytes"},{"name":"resolveData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolveWindow","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"resolverRefundPercentage","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setBondSize","inputs":[{"name":"_bondSize","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setResolverRefundPercentage","inputs":[{"name":"_resolverRefundPercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockBond","inputs":[{"name":"challengedBlockNumber","type":"uint256","internalType":"uint256"},{"name":"challengedCommitment","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validateCommitment","inputs":[{"name":"commitment","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"variableResolutionCost","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"variableResolutionCostPrecision","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"withdraw","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BalanceChanged","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"},{"name":"balance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ChallengeStatusChanged","inputs":[{"name":"challengedBlockNumber","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"challengedCommitment","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"status","type":"uint8","indexed":false,"internalType":"enum ChallengeStatus"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RequiredBondSizeChanged","inputs":[{"name":"challengeWindow","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ResolverRefundPercentageChanged","inputs":[{"name":"resolverRefundPercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"BondTooLow","inputs":[{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"required","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ChallengeExists","inputs":[]},{"type":"error","name":"ChallengeNotActive","inputs":[]},{"type":"error","name":"ChallengeNotExpired","inputs":[]},{"type":"error","name":"ChallengeWindowNotOpen","inputs":[]},{"type":"error","name":"InvalidCommitmentLength","inputs":[{"name":"commitmentType","type":"uint8","internalType":"uint8"},{"name":"expectedLength","type":"uint256","internalType":"uint256"},{"name":"actualLength","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidInputData","inputs":[{"name":"providedDataCommitment","type":"bytes","internalType":"bytes"},{"name":"expectedCommitment","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"InvalidResolverRefundPercentage","inputs":[{"name":"invalidResolverRefundPercentage","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"UnknownCommitmentType","inputs":[{"name":"commitmentType","type":"uint8","internalType":"uint8"}]},{"type":"error","name":"WithdrawalFailed","inputs":[]}],"bytecode":{"object":"0x60806040523480156200001157600080fd5b506200002461dead60008080806200002a565b62000392565b600054610100900460ff16158080156200004b5750600054600160ff909116105b806200007b575062000068306200018c60201b6200100e1760201c565b1580156200007b575060005460ff166001145b620000e45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000108576000805461ff0019166101001790555b620001126200019b565b60658590556066849055620001278362000203565b620001328262000248565b6200013d866200027d565b801562000184576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03163b151590565b600054610100900460ff16620001f75760405162461bcd60e51b815260206004820152602b602482015260008051602062001d7783398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000db565b62000201620002cf565b565b6200020d62000336565b60678190556040518181527f4468d695a0389e5f9e8ef0c9aee6d84e74cc0d0e0a28c8413badb54697d1bbae9060200160405180910390a150565b6200025262000336565b60648111156200027857604051622d549d60e71b815260048101829052602401620000db565b606855565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166200032b5760405162461bcd60e51b815260206004820152602b602482015260008051602062001d7783398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000db565b62000201336200027d565b6033546001600160a01b03163314620002015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620000db565b6119d580620003a26000396000f3fe6080604052600436106101845760003560e01c8063848afb3d116100d6578063956118521161007f578063d7d04e5411610059578063d7d04e5414610459578063f2fde38b14610479578063f92ad2191461049957600080fd5b80639561185214610427578063a03aafbf1461043e578063d0e30db01461045157600080fd5b80638ecb85e1116100b05780638ecb85e1146103d157806393988233146103e757806393fb19441461040757600080fd5b8063848afb3d1461031d578063861a1412146103865780638da5cb5b1461039c57600080fd5b80634ebaf3ce11610138578063715018a611610112578063715018a6146102bb57806379e8a8b3146102d05780637ae929d9146102fd57600080fd5b80634ebaf3ce1461023957806354fd4d501461024f5780637099c581146102a557600080fd5b806327e235e31161016957806327e235e3146101d7578063336409fd146102045780633ccfd60b1461022457600080fd5b806321cf39ee1461019857806323c30f59146101c157600080fd5b36610193576101916104b9565b005b600080fd5b3480156101a457600080fd5b506101ae60665481565b6040519081526020015b60405180910390f35b3480156101cd57600080fd5b506101ae61410081565b3480156101e357600080fd5b506101ae6101f2366004611539565b60696020526000908152604090205481565b34801561021057600080fd5b5061019161021f366004611554565b610527565b34801561023057600080fd5b50610191610577565b34801561024557600080fd5b506101ae6103e881565b34801561025b57600080fd5b506102986040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516101b891906115d8565b3480156102b157600080fd5b506101ae60675481565b3480156102c757600080fd5b50610191610611565b3480156102dc57600080fd5b506102f06102eb366004611634565b610625565b6040516101b891906116ea565b34801561030957600080fd5b506101916103183660046116f8565b6106e8565b34801561032957600080fd5b5061033d610338366004611634565b610884565b6040516101b89190815173ffffffffffffffffffffffffffffffffffffffff16815260208083015190820152604080830151908201526060918201519181019190915260800190565b34801561039257600080fd5b506101ae60655481565b3480156103a857600080fd5b5060335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b8565b3480156103dd57600080fd5b506101ae60685481565b3480156103f357600080fd5b50610191610402366004611634565b610940565b34801561041357600080fd5b50610191610422366004611772565b610a72565b34801561043357600080fd5b506101ae62011cdd81565b61019161044c366004611634565b610b0f565b6101916104b9565b34801561046557600080fd5b50610191610474366004611554565b610d58565b34801561048557600080fd5b50610191610494366004611539565b610d9b565b3480156104a557600080fd5b506101916104b43660046117b4565b610e52565b33600090815260696020526040812080543492906104d8908490611825565b909155505033600081815260696020908152604091829020548251938452908301527fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a1565b61052f61102a565b6064811115610572576040517f16aa4e80000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b606855565b336000818152606960209081526040808320805490849055815194855291840192909252917fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a160006105d4335a846110ab565b90508061060d576040517f27fcd9d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61061961102a565b61062360006110c1565b565b6000838152606a60205260408082209051829190610646908690869061183d565b9081526040805160209281900383018120608082018352805473ffffffffffffffffffffffffffffffffffffffff16808352600182015494830194909452600281015492820192909252600390910154606082015291506106ab5760009150506106e1565b6060810151156106bf5760029150506106e1565b6106cc8160400151611138565b156106db5760019150506106e1565b60039150505b9392505050565b6106f28484610a72565b60016106ff868686610625565b600381111561071057610710611680565b14610747576040517fbeb11d3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107538585611151565b9050606060ff82166107a15761079e84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061116992505050565b90505b85856040516107b192919061183d565b60405180910390208180519060200120146107fe578086866040517f1a0bbf9f00000000000000000000000000000000000000000000000000000000815260040161056993929190611896565b6000878152606a6020526040808220905161081c908990899061183d565b908152604051908190036020018120436003820155915088907fc5d8c630ba2fdacb1db24c4599df78c7fb8cf97b5aecde34939597f6697bb1ad90610867908a908a906002906118c6565b60405180910390a261087a81853361119c565b5050505050505050565b6108c56040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6000848152606a60205260409081902090516108e4908590859061183d565b908152604080519182900360209081018320608084018352805473ffffffffffffffffffffffffffffffffffffffff16845260018101549184019190915260028101549183019190915260030154606082015290509392505050565b600361094d848484610625565b600381111561095e5761095e611680565b14610995576040517f151f07fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838152606a602052604080822090516109b3908590859061183d565b90815260408051602092819003830190206001810154815473ffffffffffffffffffffffffffffffffffffffff16600090815260699094529183208054919450919290610a01908490611825565b9091555050600060018201819055815473ffffffffffffffffffffffffffffffffffffffff1680825260696020908152604092839020548351928352908201527fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a150505050565b6000610a7e8383611151565b905060ff8116610ad85760218214610ad3576040517ffd9a7e5b000000000000000000000000000000000000000000000000000000008152600060048201526021602482015260448101839052606401610569565b505050565b6040517f81ff071300000000000000000000000000000000000000000000000000000000815260ff82166004820152602401610569565b610b198282610a72565b610b216104b9565b606754336000908152606960205260409020541015610b895733600090815260696020526040908190205460675491517e0155b50000000000000000000000000000000000000000000000000000000081526105699290600401918252602082015260400190565b6000610b96848484610625565b6003811115610ba757610ba7611680565b14610bde576040517f9bb6c64e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610be7836113bc565b610c1d576040517ff9e0d1f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6067543360009081526069602052604081208054909190610c3f9084906118f1565b9250508190555060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160675481526020014381526020016000815250606a60008581526020019081526020016000208383604051610ca392919061183d565b9081526040805160209281900383018120845181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161781559284015160018085019190915591840151600284015560609093015160039092019190915584917fc5d8c630ba2fdacb1db24c4599df78c7fb8cf97b5aecde34939597f6697bb1ad91610d4b91869186916118c6565b60405180910390a2505050565b610d6061102a565b60678190556040518181527f4468d695a0389e5f9e8ef0c9aee6d84e74cc0d0e0a28c8413badb54697d1bbae9060200160405180910390a150565b610da361102a565b73ffffffffffffffffffffffffffffffffffffffff8116610e46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610569565b610e4f816110c1565b50565b600054610100900460ff1615808015610e725750600054600160ff909116105b80610e8c5750303b158015610e8c575060005460ff166001145b610f18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610569565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610f7657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610f7e6113d6565b60658590556066849055610f9183610d58565b610f9a82610527565b610fa3866110c1565b801561100657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60335473ffffffffffffffffffffffffffffffffffffffff163314610623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610569565b600080600080600080868989f195945050505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000606654826111489190611825565b43111592915050565b600061115d8284611908565b60f81c90505b92915050565b80516020918201206040805160009381019390935260218084019290925280518084039092018252604190920190915290565b6001830154835473ffffffffffffffffffffffffffffffffffffffff166000486103e86111cb61410088611950565b6111d5919061198d565b6111e29062011cdd611825565b6111ec9190611950565b90508083111561129e5761120081846118f1565b73ffffffffffffffffffffffffffffffffffffffff831660009081526069602052604081208054909190611235908490611825565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152606960209081526040918290205482519384529083015291935083917fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a15b60006064606854836112b09190611950565b6112ba919061198d565b9050838111156112c75750825b80156113745773ffffffffffffffffffffffffffffffffffffffff851660009081526069602052604081208054839290611302908490611825565b90915550611312905081856118f1565b73ffffffffffffffffffffffffffffffffffffffff8616600081815260696020908152604091829020548251938452908301529195507fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a15b83156113a95760405160009085156108fc0290869083818181858288f193505050501580156113a7573d6000803e3d6000fd5b505b6000876001018190555050505050505050565b600081431015801561116357506065546111489083611825565b600054610100900460ff1661146d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610569565b610623600054610100900460ff16611507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610569565b610623336110c1565b803573ffffffffffffffffffffffffffffffffffffffff8116811461153457600080fd5b919050565b60006020828403121561154b57600080fd5b6106e182611510565b60006020828403121561156657600080fd5b5035919050565b6000815180845260005b8181101561159357602081850181015186830182015201611577565b818111156115a5576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106e1602083018461156d565b60008083601f8401126115fd57600080fd5b50813567ffffffffffffffff81111561161557600080fd5b60208301915083602082850101111561162d57600080fd5b9250929050565b60008060006040848603121561164957600080fd5b83359250602084013567ffffffffffffffff81111561166757600080fd5b611673868287016115eb565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106116e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6020810161116382846116af565b60008060008060006060868803121561171057600080fd5b85359450602086013567ffffffffffffffff8082111561172f57600080fd5b61173b89838a016115eb565b9096509450604088013591508082111561175457600080fd5b50611761888289016115eb565b969995985093965092949392505050565b6000806020838503121561178557600080fd5b823567ffffffffffffffff81111561179c57600080fd5b6117a8858286016115eb565b90969095509350505050565b600080600080600060a086880312156117cc57600080fd5b6117d586611510565b97602087013597506040870135966060810135965060800135945092505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611838576118386117f6565b500190565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006118a9604083018661156d565b82810360208401526118bc81858761184d565b9695505050505050565b6040815260006118da60408301858761184d565b90506118e960208301846116af565b949350505050565b600082821015611903576119036117f6565b500390565b7fff0000000000000000000000000000000000000000000000000000000000000081358181169160018510156119485780818660010360031b1b83161692505b505092915050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611988576119886117f6565b500290565b6000826119c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea164736f6c634300080f000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","sourceMap":"1574:19136:124:-:0;;;5796:243;;;;;;;;;-1:-1:-1;5841:191:124::1;5882:6;5921:1;::::0;;;5841:10:::1;:191::i;:::-;1574:19136:::0;;6389:474;3111:19:25;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:25;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:25;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:25;;216:2:350;3157:201:25;;;198:21:350;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:350;;;338:44;399:19;;3157:201:25;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:25;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:25;;;;;3394:65;6624:16:124::1;:14;:16::i;:::-;6650:15;:34:::0;;;6694:13:::1;:30:::0;;;6734:22:::1;6746:9:::0;6734:11:::1;:22::i;:::-;6766:54;6794:25:::0;6766:27:::1;:54::i;:::-;6830:26;6849:6:::0;6830:18:::1;:26::i;:::-;3483:14:25::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:25;;;3553:14;;-1:-1:-1;581:36:350;;3553:14:25;;569:2:350;554:18;3553:14:25;;;;;;;3479:99;3101:483;6389:474:124;;;;;:::o;1186:320:31:-;-1:-1:-1;;;;;1476:19:31;;:23;;;1186:320::o;1003:95:24:-;4910:13:25;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:25;;830:2:350;4902:69:25;;;812:21:350;869:2;849:18;;;842:30;-1:-1:-1;;;;;;;;;;;888:18:350;;;881:62;-1:-1:-1;;;959:18:350;;;952:41;1010:19;;4902:69:25;628:407:350;4902:69:25;1065:26:24::1;:24;:26::i;:::-;1003:95::o:0;6971:143:124:-;1334:13:24;:11;:13::i;:::-;7038:8:124::1;:20:::0;;;7073:34:::1;::::0;1186:25:350;;;7073:34:124::1;::::0;1174:2:350;1159:18;7073:34:124::1;;;;;;;6971:143:::0;:::o;7468:294::-;1334:13:24;:11;:13::i;:::-;7599:3:124::1;7571:25;:31;7567:127;;;7625:58;::::0;-1:-1:-1;;;7625:58:124;;::::1;::::0;::::1;1186:25:350::0;;;1159:18;;7625:58:124::1;1040:177:350::0;7567:127:124::1;7703:24;:52:::0;7468:294::o;2673:187:24:-;2765:6;;;-1:-1:-1;;;;;2781:17:24;;;-1:-1:-1;;;;;;2781:17:24;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1104:111::-;4910:13:25;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:25;;830:2:350;4902:69:25;;;812:21:350;869:2;849:18;;;842:30;-1:-1:-1;;;;;;;;;;;888:18:350;;;881:62;-1:-1:-1;;;959:18:350;;;952:41;1010:19;;4902:69:25;628:407:350;4902:69:25;1176:32:24::1;929:10:32::0;1176:18:24::1;:32::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:32;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;1424:2:350;1654:68:24;;;1406:21:350;;;1443:18;;;1436:30;1502:34;1482:18;;;1475:62;1554:18;;1654:68:24;1222:356:350;;1574:19136:124;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106101845760003560e01c8063848afb3d116100d6578063956118521161007f578063d7d04e5411610059578063d7d04e5414610459578063f2fde38b14610479578063f92ad2191461049957600080fd5b80639561185214610427578063a03aafbf1461043e578063d0e30db01461045157600080fd5b80638ecb85e1116100b05780638ecb85e1146103d157806393988233146103e757806393fb19441461040757600080fd5b8063848afb3d1461031d578063861a1412146103865780638da5cb5b1461039c57600080fd5b80634ebaf3ce11610138578063715018a611610112578063715018a6146102bb57806379e8a8b3146102d05780637ae929d9146102fd57600080fd5b80634ebaf3ce1461023957806354fd4d501461024f5780637099c581146102a557600080fd5b806327e235e31161016957806327e235e3146101d7578063336409fd146102045780633ccfd60b1461022457600080fd5b806321cf39ee1461019857806323c30f59146101c157600080fd5b36610193576101916104b9565b005b600080fd5b3480156101a457600080fd5b506101ae60665481565b6040519081526020015b60405180910390f35b3480156101cd57600080fd5b506101ae61410081565b3480156101e357600080fd5b506101ae6101f2366004611539565b60696020526000908152604090205481565b34801561021057600080fd5b5061019161021f366004611554565b610527565b34801561023057600080fd5b50610191610577565b34801561024557600080fd5b506101ae6103e881565b34801561025b57600080fd5b506102986040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516101b891906115d8565b3480156102b157600080fd5b506101ae60675481565b3480156102c757600080fd5b50610191610611565b3480156102dc57600080fd5b506102f06102eb366004611634565b610625565b6040516101b891906116ea565b34801561030957600080fd5b506101916103183660046116f8565b6106e8565b34801561032957600080fd5b5061033d610338366004611634565b610884565b6040516101b89190815173ffffffffffffffffffffffffffffffffffffffff16815260208083015190820152604080830151908201526060918201519181019190915260800190565b34801561039257600080fd5b506101ae60655481565b3480156103a857600080fd5b5060335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b8565b3480156103dd57600080fd5b506101ae60685481565b3480156103f357600080fd5b50610191610402366004611634565b610940565b34801561041357600080fd5b50610191610422366004611772565b610a72565b34801561043357600080fd5b506101ae62011cdd81565b61019161044c366004611634565b610b0f565b6101916104b9565b34801561046557600080fd5b50610191610474366004611554565b610d58565b34801561048557600080fd5b50610191610494366004611539565b610d9b565b3480156104a557600080fd5b506101916104b43660046117b4565b610e52565b33600090815260696020526040812080543492906104d8908490611825565b909155505033600081815260696020908152604091829020548251938452908301527fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a1565b61052f61102a565b6064811115610572576040517f16aa4e80000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b606855565b336000818152606960209081526040808320805490849055815194855291840192909252917fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a160006105d4335a846110ab565b90508061060d576040517f27fcd9d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61061961102a565b61062360006110c1565b565b6000838152606a60205260408082209051829190610646908690869061183d565b9081526040805160209281900383018120608082018352805473ffffffffffffffffffffffffffffffffffffffff16808352600182015494830194909452600281015492820192909252600390910154606082015291506106ab5760009150506106e1565b6060810151156106bf5760029150506106e1565b6106cc8160400151611138565b156106db5760019150506106e1565b60039150505b9392505050565b6106f28484610a72565b60016106ff868686610625565b600381111561071057610710611680565b14610747576040517fbeb11d3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107538585611151565b9050606060ff82166107a15761079e84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061116992505050565b90505b85856040516107b192919061183d565b60405180910390208180519060200120146107fe578086866040517f1a0bbf9f00000000000000000000000000000000000000000000000000000000815260040161056993929190611896565b6000878152606a6020526040808220905161081c908990899061183d565b908152604051908190036020018120436003820155915088907fc5d8c630ba2fdacb1db24c4599df78c7fb8cf97b5aecde34939597f6697bb1ad90610867908a908a906002906118c6565b60405180910390a261087a81853361119c565b5050505050505050565b6108c56040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6000848152606a60205260409081902090516108e4908590859061183d565b908152604080519182900360209081018320608084018352805473ffffffffffffffffffffffffffffffffffffffff16845260018101549184019190915260028101549183019190915260030154606082015290509392505050565b600361094d848484610625565b600381111561095e5761095e611680565b14610995576040517f151f07fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838152606a602052604080822090516109b3908590859061183d565b90815260408051602092819003830190206001810154815473ffffffffffffffffffffffffffffffffffffffff16600090815260699094529183208054919450919290610a01908490611825565b9091555050600060018201819055815473ffffffffffffffffffffffffffffffffffffffff1680825260696020908152604092839020548351928352908201527fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a150505050565b6000610a7e8383611151565b905060ff8116610ad85760218214610ad3576040517ffd9a7e5b000000000000000000000000000000000000000000000000000000008152600060048201526021602482015260448101839052606401610569565b505050565b6040517f81ff071300000000000000000000000000000000000000000000000000000000815260ff82166004820152602401610569565b610b198282610a72565b610b216104b9565b606754336000908152606960205260409020541015610b895733600090815260696020526040908190205460675491517e0155b50000000000000000000000000000000000000000000000000000000081526105699290600401918252602082015260400190565b6000610b96848484610625565b6003811115610ba757610ba7611680565b14610bde576040517f9bb6c64e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610be7836113bc565b610c1d576040517ff9e0d1f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6067543360009081526069602052604081208054909190610c3f9084906118f1565b9250508190555060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160675481526020014381526020016000815250606a60008581526020019081526020016000208383604051610ca392919061183d565b9081526040805160209281900383018120845181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161781559284015160018085019190915591840151600284015560609093015160039092019190915584917fc5d8c630ba2fdacb1db24c4599df78c7fb8cf97b5aecde34939597f6697bb1ad91610d4b91869186916118c6565b60405180910390a2505050565b610d6061102a565b60678190556040518181527f4468d695a0389e5f9e8ef0c9aee6d84e74cc0d0e0a28c8413badb54697d1bbae9060200160405180910390a150565b610da361102a565b73ffffffffffffffffffffffffffffffffffffffff8116610e46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610569565b610e4f816110c1565b50565b600054610100900460ff1615808015610e725750600054600160ff909116105b80610e8c5750303b158015610e8c575060005460ff166001145b610f18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610569565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610f7657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610f7e6113d6565b60658590556066849055610f9183610d58565b610f9a82610527565b610fa3866110c1565b801561100657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60335473ffffffffffffffffffffffffffffffffffffffff163314610623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610569565b600080600080600080868989f195945050505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000606654826111489190611825565b43111592915050565b600061115d8284611908565b60f81c90505b92915050565b80516020918201206040805160009381019390935260218084019290925280518084039092018252604190920190915290565b6001830154835473ffffffffffffffffffffffffffffffffffffffff166000486103e86111cb61410088611950565b6111d5919061198d565b6111e29062011cdd611825565b6111ec9190611950565b90508083111561129e5761120081846118f1565b73ffffffffffffffffffffffffffffffffffffffff831660009081526069602052604081208054909190611235908490611825565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152606960209081526040918290205482519384529083015291935083917fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a15b60006064606854836112b09190611950565b6112ba919061198d565b9050838111156112c75750825b80156113745773ffffffffffffffffffffffffffffffffffffffff851660009081526069602052604081208054839290611302908490611825565b90915550611312905081856118f1565b73ffffffffffffffffffffffffffffffffffffffff8616600081815260696020908152604091829020548251938452908301529195507fa448afda7ea1e3a7a10fcab0c29fe9a9dd85791503bf0171f281521551c7ec05910160405180910390a15b83156113a95760405160009085156108fc0290869083818181858288f193505050501580156113a7573d6000803e3d6000fd5b505b6000876001018190555050505050505050565b600081431015801561116357506065546111489083611825565b600054610100900460ff1661146d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610569565b610623600054610100900460ff16611507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610569565b610623336110c1565b803573ffffffffffffffffffffffffffffffffffffffff8116811461153457600080fd5b919050565b60006020828403121561154b57600080fd5b6106e182611510565b60006020828403121561156657600080fd5b5035919050565b6000815180845260005b8181101561159357602081850181015186830182015201611577565b818111156115a5576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106e1602083018461156d565b60008083601f8401126115fd57600080fd5b50813567ffffffffffffffff81111561161557600080fd5b60208301915083602082850101111561162d57600080fd5b9250929050565b60008060006040848603121561164957600080fd5b83359250602084013567ffffffffffffffff81111561166757600080fd5b611673868287016115eb565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106116e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6020810161116382846116af565b60008060008060006060868803121561171057600080fd5b85359450602086013567ffffffffffffffff8082111561172f57600080fd5b61173b89838a016115eb565b9096509450604088013591508082111561175457600080fd5b50611761888289016115eb565b969995985093965092949392505050565b6000806020838503121561178557600080fd5b823567ffffffffffffffff81111561179c57600080fd5b6117a8858286016115eb565b90969095509350505050565b600080600080600060a086880312156117cc57600080fd5b6117d586611510565b97602087013597506040870135966060810135965060800135945092505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611838576118386117f6565b500190565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006118a9604083018661156d565b82810360208401526118bc81858761184d565b9695505050505050565b6040815260006118da60408301858761184d565b90506118e960208301846116af565b949350505050565b600082821015611903576119036117f6565b500390565b7fff0000000000000000000000000000000000000000000000000000000000000081358181169160018510156119485780818660010360031b1b83161692505b505092915050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611988576119886117f6565b500290565b6000826119c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea164736f6c634300080f000a","sourceMap":"1574:19136:124:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7879:9;:7;:9::i;:::-;1574:19136;;;;;4955:28;;;;;;;;;;;;;;;;;;;160:25:350;;;148:2;133:18;4955:28:124;;;;;;;;4571:54;;;;;;;;;;;;4620:5;4571:54;;5361:43;;;;;;;;;;-1:-1:-1;5361:43:124;;;;;:::i;:::-;;;;;;;;;;;;;;7468:294;;;;;;;;;;-1:-1:-1;7468:294:124;;;;;:::i;:::-;;:::i;8177:419::-;;;;;;;;;;;;;:::i;4692:62::-;;;;;;;;;;;;4750:4;4692:62;;4063:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5047:23::-;;;;;;;;;;;;;;;;2071:101:24;;;;;;;;;;;;;:::i;10566:873:124:-;;;;;;;;;;-1:-1:-1;10566:873:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15428:1683::-;;;;;;;;;;-1:-1:-1;15428:1683:124;;;;;:::i;:::-;;:::i;9979:258::-;;;;;;;;;;-1:-1:-1;9979:258:124;;;;;:::i;:::-;;:::i;:::-;;;;;;4103:13:350;;4118:42;4099:62;4081:81;;4218:4;4206:17;;;4200:24;4178:20;;;4171:54;4281:4;4269:17;;;4263:24;4241:20;;;4234:54;4344:4;4332:17;;;4326:24;4304:20;;;4297:54;;;;4068:3;4053:19;;3878:479;4841:30:124;;;;;;;;;;;;;;;;1441:85:24;;;;;;;;;;-1:-1:-1;1513:6:24;;1441:85;;1513:6;;;;4508:74:350;;4496:2;4481:18;1441:85:24;4362:226:350;5235:39:124;;;;;;;;;;;;;;;;19935:773;;;;;;;;;;-1:-1:-1;19935:773:124;;;;;:::i;:::-;;:::i;12302:448::-;;;;;;;;;;-1:-1:-1;12302:448:124;;;;;:::i;:::-;;:::i;4254:51::-;;;;;;;;;;;;4300:5;4254:51;;13335:1396;;;;;;:::i;:::-;;:::i;7975:147::-;;;:::i;6971:143::-;;;;;;;;;;-1:-1:-1;6971:143:124;;;;;:::i;:::-;;:::i;2321:198:24:-;;;;;;;;;;-1:-1:-1;2321:198:24;;;;;:::i;:::-;;:::i;6389:474:124:-;;;;;;;;;;-1:-1:-1;6389:474:124;;;;;:::i;:::-;;:::i;7975:147::-;8028:10;8019:20;;;;:8;:20;;;;;:33;;8043:9;;8019:20;:33;;8043:9;;8019:33;:::i;:::-;;;;-1:-1:-1;;8082:10:124;8094:20;;;;:8;:20;;;;;;;;;;8067:48;;5968:74:350;;;6058:18;;;6051:34;8067:48:124;;5941:18:350;8067:48:124;;;;;;;7975:147::o;7468:294::-;1334:13:24;:11;:13::i;:::-;7599:3:124::1;7571:25;:31;7567:127;;;7625:58;::::0;::::1;::::0;;::::1;::::0;::::1;160:25:350::0;;;133:18;;7625:58:124::1;;;;;;;;7567:127;7703:24;:52:::0;7468:294::o;8177:419::-;8275:10;8248:15;8266:20;;;:8;:20;;;;;;;;;;8334:24;;;;8373:29;;5968:74:350;;;6058:18;;;6051:34;;;;8266:20:124;8373:29;;5941:18:350;8373:29:124;;;;;;;8456:12;8471:45;8485:10;8497:9;8508:7;8471:13;:45::i;:::-;8456:60;;8531:7;8526:64;;8561:18;;;;;;;;;;;;;;8526:64;8206:390;;8177:419::o;2071:101:24:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;10566:873:124:-;10729:15;10790:33;;;:10;:33;;;;;;:55;;10729:15;;10790:33;:55;;10824:20;;;;10790:55;:::i;:::-;;;;;;;;;;;;;;;;10760:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10790:55;-1:-1:-1;10918:77:124;;10966:29;10959:36;;;;;10918:77;11075:24;;;;:29;11071:66;;11113:24;11106:31;;;;;11071:66;11233:41;11252:10;:21;;;11233:18;:41::i;:::-;11229:76;;;11283:22;11276:29;;;;;11229:76;11409:23;11402:30;;;10566:873;;;;;;:::o;15428:1683::-;15653:40;15672:20;;15653:18;:40::i;:::-;15876:22;15809:63;15828:21;15851:20;;15809:18;:63::i;:::-;:89;;;;;;;;:::i;:::-;;15805:147;;15921:20;;;;;;;;;;;;;;15805:147;16035:20;16058:40;16077:20;;16058:18;:40::i;:::-;16035:63;-1:-1:-1;16108:31:124;16153:49;;;16149:140;;16239:39;16266:11;;16239:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16239:26:124;;-1:-1:-1;;;16239:39:124:i;:::-;16218:60;;16149:140;16432:20;;16422:31;;;;;;;:::i;:::-;;;;;;;;16399:18;16389:29;;;;;;:64;16385:160;;16493:18;16513:20;;16476:58;;;;;;;;;;;;;:::i;16385:160::-;16625:33;16661;;;:10;:33;;;;;;:55;;;;16695:20;;;;16661:55;:::i;:::-;;;;;;;;;;;;;;16758:12;16726:29;;;:44;16661:55;-1:-1:-1;16886:21:124;;16863:93;;;;16909:20;;;;16931:24;;16863:93;:::i;:::-;;;;;;;;17040:64;17056:15;17073:11;17093:10;17040:15;:64::i;:::-;15592:1519;;;15428:1683;;;;;:::o;9979:258::-;10136:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10136:16:124;10175:33;;;;:10;:33;;;;;;;:55;;;;10209:20;;;;10175:55;:::i;:::-;;;;;;;;;;;;;;;;;10168:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10175:55;-1:-1:-1;9979:258:124;;;;;:::o;19935:773::-;20210:23;20143:63;20162:21;20185:20;;20143:18;:63::i;:::-;:90;;;;;;;;:::i;:::-;;20139:149;;20256:21;;;;;;;;;;;;;;20139:149;20355:34;20392:33;;;:10;:33;;;;;;:55;;;;20426:20;;;;20392:55;:::i;:::-;;;;;;;;;;;;;;;;20498:27;;;;20466;;;;20457:37;;;;:8;:37;;;;;;:68;;20392:55;;-1:-1:-1;20498:27:124;;20457:37;:68;;20498:27;;20457:68;:::i;:::-;;;;-1:-1:-1;;20565:1:124;20535:27;;;:31;;;20634:27;;;;20663:37;;;:8;:37;;;;;;;;;;20619:82;;5968:74:350;;;6058:18;;;6051:34;20619:82:124;;5941:18:350;20619:82:124;;;;;;;20032:676;19935:773;;;:::o;12302:448::-;12379:20;12402:30;12421:10;;12402:18;:30::i;:::-;12379:53;-1:-1:-1;12446:49:124;;;12442:247;;12536:2;12515:23;;12511:148;;12565:79;;;;;12595:24;12565:79;;;7993:36:350;12622:2:124;8045:18:350;;;8038:34;8088:18;;;8081:34;;;7966:18;;12565:79:124;7786:335:350;12511:148:124;12672:7;12302:448;;:::o;12442:247::-;12706:37;;;;;8298:4:350;8286:17;;12706:37:124;;;8268:36:350;8241:18;;12706:37:124;8126:184:350;13335:1396:124;13500:40;13519:20;;13500:18;:40::i;:::-;13610:9;:7;:9::i;:::-;13702:8;;13688:10;13679:20;;;;:8;:20;;;;;;:31;13675:111;;;13753:10;13744:20;;;;:8;:20;;;;;;;;13766:8;;13733:42;;;;;;;13766:8;13733:42;;8489:25:350;;;8545:2;8530:18;;8523:34;8477:2;8462:18;;8315:248;13675:111:124;13927:29;13860:63;13879:21;13902:20;;13860:18;:63::i;:::-;:96;;;;;;;;:::i;:::-;;13856:151;;13979:17;;;;;;;;;;;;;;13856:151;14089:43;14110:21;14089:20;:43::i;:::-;14084:106;;14155:24;;;;;;;;;;;;;;14084:106;14263:8;;14248:10;14239:20;;;;:8;:20;;;;;:32;;:20;;;:32;;14263:8;;14239:32;:::i;:::-;;;;;;;;14439:103;;;;;;;;14463:10;14439:103;;;;;;14487:8;;14439:103;;;;14509:12;14439:103;;;;14538:1;14439:103;;;14369:10;:33;14380:21;14369:33;;;;;;;;;;;14403:20;;14369:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:173;;;;;;;;;;;;;;;;;-1:-1:-1;14369:173:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;14656:21;;14633:91;;;;14679:20;;;;14633:91;:::i;:::-;;;;;;;;13335:1396;;;:::o;6971:143::-;1334:13:24;:11;:13::i;:::-;7038:8:124::1;:20:::0;;;7073:34:::1;::::0;160:25:350;;;7073:34:124::1;::::0;148:2:350;133:18;7073:34:124::1;;;;;;;6971:143:::0;:::o;2321:198:24:-;1334:13;:11;:13::i;:::-;2409:22:::1;::::0;::::1;2401:73;;;::::0;::::1;::::0;;8900:2:350;2401:73:24::1;::::0;::::1;8882:21:350::0;8939:2;8919:18;;;8912:30;8978:34;8958:18;;;8951:62;9049:8;9029:18;;;9022:36;9075:19;;2401:73:24::1;8698:402:350::0;2401:73:24::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;6389:474:124:-;3111:19:25;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:25;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:25;1476:19:31;:23;;;3219:66:25;;-1:-1:-1;3268:12:25;;;;;:17;3219:66;3157:201;;;;;;;9307:2:350;3157:201:25;;;9289:21:350;9346:2;9326:18;;;9319:30;9385:34;9365:18;;;9358:62;9456:16;9436:18;;;9429:44;9490:19;;3157:201:25;9105:410:350;3157:201:25;3368:12;:16;;;;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;;;;;;;3394:65;6624:16:124::1;:14;:16::i;:::-;6650:15;:34:::0;;;6694:13:::1;:30:::0;;;6734:22:::1;6746:9:::0;6734:11:::1;:22::i;:::-;6766:54;6794:25;6766:27;:54::i;:::-;6830:26;6849:6;6830:18;:26::i;:::-;3483:14:25::0;3479:99;;;3529:5;3513:21;;;;;;3553:14;;-1:-1:-1;8268:36:350;;3553:14:25;;8256:2:350;8241:18;3553:14:25;;;;;;;3479:99;3101:483;6389:474:124;;;;;:::o;1186:320:31:-;1476:19;;;:23;;;1186:320::o;1599:130:24:-;1513:6;;1662:23;1513:6;929:10:32;1662:23:24;1654:68;;;;;;;9921:2:350;1654:68:24;;;9903:21:350;;;9940:18;;;9933:30;9999:34;9979:18;;;9972:62;10051:18;;1654:68:24;9719:356:350;429:480:195;508:4;524:13;839:1;806;774;742;699:6;657:7;624:4;598:270;570:298;429:480;-1:-1:-1;;;;;429:480:195:o;2673:187:24:-;2765:6;;;;2781:17;;;;;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;9411:173:124:-;9497:4;9564:13;;9536:25;:41;;;;:::i;:::-;9520:12;:57;;;9411:173;-1:-1:-1;;9411:173:124:o;11740:134::-;11818:5;11848:18;11855:10;;11848:18;:::i;:::-;11842:25;;11835:32;;11740:134;;;;;:::o;20899:169::-;21049:15;;;;;;;20995:70;;;21021:24;20995:70;;;10609:92:350;;;;10717:11;;;;10710:27;;;;20995:70:124;;;;;;;;;;10753:12:350;;;;20995:70:124;;;;20899:169::o;18096:1451::-;18240:28;;;;18299;;;;18219:18;18575:13;4750:4;18489:39;4620:5;18489:14;:39;:::i;:::-;:73;;;;:::i;:::-;18467:95;;4300:5;18467:95;:::i;:::-;18453:135;;;;:::i;:::-;18428:160;;18687:14;18674:10;:27;18670:217;;;18741:27;18754:14;18741:10;:27;:::i;:::-;18717:20;;;;;;;:8;:20;;;;;:51;;:20;;;:51;;;;;:::i;:::-;;;;-1:-1:-1;;18855:20:124;;;;;;;:8;:20;;;;;;;;;;18828:48;;5968:74:350;;;6058:18;;;6051:34;18795:14:124;;-1:-1:-1;18795:14:124;;18828:48;;5941:18:350;18828:48:124;;;;;;;18670:217;19003:22;19072:3;19045:24;;19028:14;:41;;;;:::i;:::-;:47;;;;:::i;:::-;19003:72;;19106:10;19089:14;:27;19085:85;;;-1:-1:-1;19149:10:124;19085:85;19183:18;;19179:190;;19217:18;;;;;;;:8;:18;;;;;:36;;19239:14;;19217:18;:36;;19239:14;;19217:36;:::i;:::-;;;;-1:-1:-1;19267:28:124;;-1:-1:-1;19281:14:124;19267:28;;:::i;:::-;19339:18;;;;;;;:8;:18;;;;;;;;;;19314:44;;5968:74:350;;;6058:18;;;6051:34;19267:28:124;;-1:-1:-1;19314:44:124;;5941:18:350;19314:44:124;;;;;;;19179:190;19418:14;;19414:85;;19448:40;;19464:1;;19448:40;;;;;19477:10;;19464:1;19448:40;19464:1;19448:40;19477:10;19464:1;19448:40;;;;;;;;;;;;;;;;;;;;;19414:85;19539:1;19508:17;:28;;:32;;;;18209:1338;;;;18096:1451;;;:::o;8893:212::-;8977:4;9017:21;9001:12;:37;;:96;;;;-1:-1:-1;9082:15:124;;9058:39;;:21;:39;:::i;1003:95:24:-;4910:13:25;;;;;;;4902:69;;;;;;;11490:2:350;4902:69:25;;;11472:21:350;11529:2;11509:18;;;11502:30;11568:34;11548:18;;;11541:62;11639:13;11619:18;;;11612:41;11670:19;;4902:69:25;11288:407:350;4902:69:25;1065:26:24::1;4910:13:25::0;;;;;;;4902:69;;;;;;;11490:2:350;4902:69:25;;;11472:21:350;11529:2;11509:18;;;11502:30;11568:34;11548:18;;;11541:62;11639:13;11619:18;;;11612:41;11670:19;;4902:69:25;11288:407:350;4902:69:25;1176:32:24::1;929:10:32::0;1176:18:24::1;:32::i;196:196:350:-:0;264:20;;324:42;313:54;;303:65;;293:93;;382:1;379;372:12;293:93;196:196;;;:::o;397:186::-;456:6;509:2;497:9;488:7;484:23;480:32;477:52;;;525:1;522;515:12;477:52;548:29;567:9;548:29;:::i;588:180::-;647:6;700:2;688:9;679:7;675:23;671:32;668:52;;;716:1;713;706:12;668:52;-1:-1:-1;739:23:350;;588:180;-1:-1:-1;588:180:350:o;773:531::-;815:3;853:5;847:12;880:6;875:3;868:19;905:1;915:162;929:6;926:1;923:13;915:162;;;991:4;1047:13;;;1043:22;;1037:29;1019:11;;;1015:20;;1008:59;944:12;915:162;;;1095:6;1092:1;1089:13;1086:87;;;1161:1;1154:4;1145:6;1140:3;1136:16;1132:27;1125:38;1086:87;-1:-1:-1;1218:2:350;1206:15;1223:66;1202:88;1193:98;;;;1293:4;1189:109;;773:531;-1:-1:-1;;773:531:350:o;1309:220::-;1458:2;1447:9;1440:21;1421:4;1478:45;1519:2;1508:9;1504:18;1496:6;1478:45;:::i;1534:347::-;1585:8;1595:6;1649:3;1642:4;1634:6;1630:17;1626:27;1616:55;;1667:1;1664;1657:12;1616:55;-1:-1:-1;1690:20:350;;1733:18;1722:30;;1719:50;;;1765:1;1762;1755:12;1719:50;1802:4;1794:6;1790:17;1778:29;;1854:3;1847:4;1838:6;1830;1826:19;1822:30;1819:39;1816:59;;;1871:1;1868;1861:12;1816:59;1534:347;;;;;:::o;1886:477::-;1965:6;1973;1981;2034:2;2022:9;2013:7;2009:23;2005:32;2002:52;;;2050:1;2047;2040:12;2002:52;2086:9;2073:23;2063:33;;2147:2;2136:9;2132:18;2119:32;2174:18;2166:6;2163:30;2160:50;;;2206:1;2203;2196:12;2160:50;2245:58;2295:7;2286:6;2275:9;2271:22;2245:58;:::i;:::-;1886:477;;2322:8;;-1:-1:-1;2219:84:350;;-1:-1:-1;;;;1886:477:350:o;2368:184::-;2420:77;2417:1;2410:88;2517:4;2514:1;2507:15;2541:4;2538:1;2531:15;2557:300;2644:1;2637:5;2634:12;2624:200;;2680:77;2677:1;2670:88;2781:4;2778:1;2771:15;2809:4;2806:1;2799:15;2624:200;2833:18;;2557:300::o;2862:221::-;3015:2;3000:18;;3027:50;3004:9;3059:6;3027:50;:::i;3088:785::-;3187:6;3195;3203;3211;3219;3272:2;3260:9;3251:7;3247:23;3243:32;3240:52;;;3288:1;3285;3278:12;3240:52;3324:9;3311:23;3301:33;;3385:2;3374:9;3370:18;3357:32;3408:18;3449:2;3441:6;3438:14;3435:34;;;3465:1;3462;3455:12;3435:34;3504:58;3554:7;3545:6;3534:9;3530:22;3504:58;:::i;:::-;3581:8;;-1:-1:-1;3478:84:350;-1:-1:-1;3669:2:350;3654:18;;3641:32;;-1:-1:-1;3685:16:350;;;3682:36;;;3714:1;3711;3704:12;3682:36;;3753:60;3805:7;3794:8;3783:9;3779:24;3753:60;:::i;:::-;3088:785;;;;-1:-1:-1;3088:785:350;;-1:-1:-1;3832:8:350;;3727:86;3088:785;-1:-1:-1;;;3088:785:350:o;4593:409::-;4663:6;4671;4724:2;4712:9;4703:7;4699:23;4695:32;4692:52;;;4740:1;4737;4730:12;4692:52;4780:9;4767:23;4813:18;4805:6;4802:30;4799:50;;;4845:1;4842;4835:12;4799:50;4884:58;4934:7;4925:6;4914:9;4910:22;4884:58;:::i;:::-;4961:8;;4858:84;;-1:-1:-1;4593:409:350;-1:-1:-1;;;;4593:409:350:o;5007:460::-;5102:6;5110;5118;5126;5134;5187:3;5175:9;5166:7;5162:23;5158:33;5155:53;;;5204:1;5201;5194:12;5155:53;5227:29;5246:9;5227:29;:::i;:::-;5217:39;5303:2;5288:18;;5275:32;;-1:-1:-1;5354:2:350;5339:18;;5326:32;;5405:2;5390:18;;5377:32;;-1:-1:-1;5456:3:350;5441:19;5428:33;;-1:-1:-1;5007:460:350;-1:-1:-1;;;5007:460:350:o;5472:184::-;5524:77;5521:1;5514:88;5621:4;5618:1;5611:15;5645:4;5642:1;5635:15;5661:128;5701:3;5732:1;5728:6;5725:1;5722:13;5719:39;;;5738:18;;:::i;:::-;-1:-1:-1;5774:9:350;;5661:128::o;6406:271::-;6589:6;6581;6576:3;6563:33;6545:3;6615:16;;6640:13;;;6615:16;6406:271;-1:-1:-1;6406:271:350:o;6682:325::-;6770:6;6765:3;6758:19;6822:6;6815:5;6808:4;6803:3;6799:14;6786:43;;6874:1;6867:4;6858:6;6853:3;6849:16;6845:27;6838:38;6740:3;6996:4;6926:66;6921:2;6913:6;6909:15;6905:88;6900:3;6896:98;6892:109;6885:116;;6682:325;;;;:::o;7012:405::-;7215:2;7204:9;7197:21;7178:4;7241:45;7282:2;7271:9;7267:18;7259:6;7241:45;:::i;:::-;7334:9;7326:6;7322:22;7317:2;7306:9;7302:18;7295:50;7362:49;7404:6;7396;7388;7362:49;:::i;:::-;7354:57;7012:405;-1:-1:-1;;;;;;7012:405:350:o;7422:359::-;7626:2;7615:9;7608:21;7589:4;7646:61;7703:2;7692:9;7688:18;7680:6;7672;7646:61;:::i;:::-;7638:69;;7716:59;7771:2;7760:9;7756:18;7748:6;7716:59;:::i;:::-;7422:359;;;;;;:::o;8568:125::-;8608:4;8636:1;8633;8630:8;8627:34;;;8641:18;;:::i;:::-;-1:-1:-1;8678:9:350;;8568:125::o;10080:369::-;10238:66;10200:19;;10322:11;;;;10353:1;10345:10;;10342:101;;;10430:2;10424;10417:3;10414:1;10410:11;10407:1;10403:19;10399:28;10395:2;10391:37;10387:46;10378:55;;10342:101;;;10080:369;;;;:::o;10776:228::-;10816:7;10942:1;10874:66;10870:74;10867:1;10864:81;10859:1;10852:9;10845:17;10841:105;10838:131;;;10949:18;;:::i;:::-;-1:-1:-1;10989:9:350;;10776:228::o;11009:274::-;11049:1;11075;11065:189;;11110:77;11107:1;11100:88;11211:4;11208:1;11201:15;11239:4;11236:1;11229:15;11065:189;-1:-1:-1;11268:9:350;;11009:274::o","linkReferences":{}},"methodIdentifiers":{"balances(address)":"27e235e3","bondSize()":"7099c581","challenge(uint256,bytes)":"a03aafbf","challengeWindow()":"861a1412","deposit()":"d0e30db0","fixedResolutionCost()":"95611852","getChallenge(uint256,bytes)":"848afb3d","getChallengeStatus(uint256,bytes)":"79e8a8b3","initialize(address,uint256,uint256,uint256,uint256)":"f92ad219","owner()":"8da5cb5b","renounceOwnership()":"715018a6","resolve(uint256,bytes,bytes)":"7ae929d9","resolveWindow()":"21cf39ee","resolverRefundPercentage()":"8ecb85e1","setBondSize(uint256)":"d7d04e54","setResolverRefundPercentage(uint256)":"336409fd","transferOwnership(address)":"f2fde38b","unlockBond(uint256,bytes)":"93988233","validateCommitment(bytes)":"93fb1944","variableResolutionCost()":"23c30f59","variableResolutionCostPrecision()":"4ebaf3ce","version()":"54fd4d50","withdraw()":"3ccfd60b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"BondTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengeExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengeNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengeNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengeWindowNotOpen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"commitmentType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expectedLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualLength\",\"type\":\"uint256\"}],\"name\":\"InvalidCommitmentLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"providedDataCommitment\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"expectedCommitment\",\"type\":\"bytes\"}],\"name\":\"InvalidInputData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"invalidResolverRefundPercentage\",\"type\":\"uint256\"}],\"name\":\"InvalidResolverRefundPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"commitmentType\",\"type\":\"uint8\"}],\"name\":\"UnknownCommitmentType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"challengedBlockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"challengedCommitment\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum ChallengeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ChallengeStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"challengeWindow\",\"type\":\"uint256\"}],\"name\":\"RequiredBondSizeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"resolverRefundPercentage\",\"type\":\"uint256\"}],\"name\":\"ResolverRefundPercentageChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"challengedBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"challengedCommitment\",\"type\":\"bytes\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengeWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedResolutionCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"challengedBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"challengedCommitment\",\"type\":\"bytes\"}],\"name\":\"getChallenge\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockedBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct Challenge\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"challengedBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"challengedCommitment\",\"type\":\"bytes\"}],\"name\":\"getChallengeStatus\",\"outputs\":[{\"internalType\":\"enum ChallengeStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_challengeWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_resolveWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bondSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_resolverRefundPercentage\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"challengedBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"challengedCommitment\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"resolveData\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolveWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolverRefundPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bondSize\",\"type\":\"uint256\"}],\"name\":\"setBondSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_resolverRefundPercentage\",\"type\":\"uint256\"}],\"name\":\"setResolverRefundPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"challengedBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"challengedCommitment\",\"type\":\"bytes\"}],\"name\":\"unlockBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"commitment\",\"type\":\"bytes\"}],\"name\":\"validateCommitment\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"variableResolutionCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"variableResolutionCostPrecision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ChallengeStatusChanged(uint256,bytes,uint8)\":{\"params\":{\"challengedBlockNumber\":\"The block number at which the commitment was made.\",\"challengedCommitment\":\"The commitment that is being challenged.\",\"status\":\"The new status of the challenge.\"}}},\"kind\":\"dev\",\"methods\":{\"challenge(uint256,bytes)\":{\"details\":\"The block number parameter is necessary for the contract to verify the challenge window,      since the contract cannot access the block number of the commitment.      The function reverts if the commitment type (first byte) is unknown,      if the caller does not have a bond or if the challenge already exists.\",\"params\":{\"challengedBlockNumber\":\"The block number at which the commitment was made.\",\"challengedCommitment\":\"The commitment that is being challenged.\"}},\"getChallenge(uint256,bytes)\":{\"details\":\"Unlike with a public `challenges` mapping, we can return a Challenge struct instead of tuple.\",\"params\":{\"challengedBlockNumber\":\"The block number at which the commitment was made.\",\"challengedCommitment\":\"The commitment that is being challenged.\"},\"returns\":{\"_0\":\"The challenge struct.\"}},\"getChallengeStatus(uint256,bytes)\":{\"params\":{\"challengedBlockNumber\":\"The block number at which the commitment was made.\",\"challengedCommitment\":\"The commitment that is being challenged.\"},\"returns\":{\"_0\":\"The status of the challenge.\"}},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"params\":{\"_bondSize\":\"The amount required to post a challenge.\",\"_challengeWindow\":\"The block interval during which a commitment can be challenged.\",\"_owner\":\"The owner of the contract.\",\"_resolveWindow\":\"The block interval during which a challenge can be resolved.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"resolve(uint256,bytes,bytes)\":{\"details\":\"The function computes a commitment from the provided resolveData and verifies that it matches the challenged commitment.      It reverts if the commitment type is unknown, if the data doesn't match the commitment,      if the challenge is not active or if the resolve window is not open.\",\"params\":{\"challengedBlockNumber\":\"The block number at which the commitment was made.\",\"challengedCommitment\":\"The challenged commitment that is being resolved.\",\"resolveData\":\"The pre-image data corresponding to the challenged commitment.\"}},\"setBondSize(uint256)\":{\"params\":{\"_bondSize\":\"The amount required to post a challenge.\"}},\"setResolverRefundPercentage(uint256)\":{\"details\":\"The function reverts if the provided percentage is above 100, since the refund logic assumes a value smaller or equal to 100%.\",\"params\":{\"_resolverRefundPercentage\":\"The percentage of the resolving cost to be refunded to the resolver.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockBond(uint256,bytes)\":{\"details\":\"The function reverts if the challenge is not expired.      If the expiration is successful, the challenger's bond is unlocked.\",\"params\":{\"challengedBlockNumber\":\"The block number at which the commitment was made.\",\"challengedCommitment\":\"The commitment that is being challenged.\"}},\"validateCommitment(bytes)\":{\"details\":\"The type of a commitment is stored in its first byte.      The function reverts with `UnknownCommitmentType` if the type is not known and      with `InvalidCommitmentLength` if the commitment has an unexpected length.\",\"params\":{\"commitment\":\"The commitment for which to check the type.\"}}},\"stateVariables\":{\"fixedResolutionCost\":{\"details\":\"The value is estimated by measuring the cost of resolving with `bytes(0)`\"},\"resolverRefundPercentage\":{\"details\":\"There are no decimals, ie a value of 50 corresponds to 50%.\"},\"variableResolutionCost\":{\"details\":\"upper limit; The value is estimated by measuring the cost of resolving with variable size data where each byte is non-zero.\"},\"variableResolutionCostPrecision\":{\"details\":\"The precision of the variable resolution cost.\"},\"version\":{\"custom:semver\":\"1.0.0\"}},\"title\":\"DataAvailabilityChallenge\",\"version\":1},\"userdoc\":{\"errors\":{\"BondTooLow(uint256,uint256)\":[{\"notice\":\"Error for when the challenger's bond is too low.\"}],\"ChallengeExists()\":[{\"notice\":\"Error for when attempting to challenge a commitment that already has a challenge.\"}],\"ChallengeNotActive()\":[{\"notice\":\"Error for when attempting to resolve a challenge that is not active.\"}],\"ChallengeNotExpired()\":[{\"notice\":\"Error for when attempting to unlock a bond from a challenge that is not expired.\"}],\"ChallengeWindowNotOpen()\":[{\"notice\":\"Error for when attempting to challenge a commitment that is not in the challenge window.\"}],\"InvalidCommitmentLength(uint8,uint256,uint256)\":[{\"notice\":\"Error for when the commitment length does not match the commitment type\"}],\"InvalidInputData(bytes,bytes)\":[{\"notice\":\"Error for when the provided input data doesn't match the commitment.\"}],\"InvalidResolverRefundPercentage(uint256)\":[{\"notice\":\"Error for when the provided resolver refund percentage exceeds 100%.\"}],\"UnknownCommitmentType(uint8)\":[{\"notice\":\"Error for when a the type of a given commitment is unknown\"}],\"WithdrawalFailed()\":[{\"notice\":\"Error for when the call to withdraw a bond failed.\"}]},\"events\":{\"BalanceChanged(address,uint256)\":{\"notice\":\"An event that is emitted when a user's bond balance changes.\"},\"ChallengeStatusChanged(uint256,bytes,uint8)\":{\"notice\":\"An event that is emitted when the status of a challenge changes.\"},\"RequiredBondSizeChanged(uint256)\":{\"notice\":\"An event that is emitted when the bond size required to initiate a challenge changes.\"},\"ResolverRefundPercentageChanged(uint256)\":{\"notice\":\"An event that is emitted when the percentage of the resolving cost to be refunded to the resolver changes.\"}},\"kind\":\"user\",\"methods\":{\"balances(address)\":{\"notice\":\"A mapping from addresses to their bond balance in the contract.\"},\"bondSize()\":{\"notice\":\"The amount required to post a challenge.\"},\"challenge(uint256,bytes)\":{\"notice\":\"Challenge a commitment at a given block number.\"},\"challengeWindow()\":{\"notice\":\"The block interval during which a commitment can be challenged.\"},\"constructor\":{\"notice\":\"Constructs the DataAvailabilityChallenge contract. Cannot set         the owner to `address(0)` due to the Ownable contract's         implementation, so set it to `address(0xdEaD)`.\"},\"deposit()\":{\"notice\":\"Post a bond as prerequisite for challenging a commitment.\"},\"fixedResolutionCost()\":{\"notice\":\"The fixed cost of resolving a challenge.\"},\"getChallenge(uint256,bytes)\":{\"notice\":\"Returns a challenge for the given block number and commitment.\"},\"getChallengeStatus(uint256,bytes)\":{\"notice\":\"Returns the status of a challenge for a given challenged block number and challenged commitment.\"},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Initializes the contract.\"},\"resolve(uint256,bytes,bytes)\":{\"notice\":\"Resolve a challenge by providing the data corresponding to the challenged commitment.\"},\"resolveWindow()\":{\"notice\":\"The block interval during which a challenge can be resolved.\"},\"resolverRefundPercentage()\":{\"notice\":\"The percentage of the resolving cost to be refunded to the resolver.\"},\"setBondSize(uint256)\":{\"notice\":\"Sets the bond size.\"},\"setResolverRefundPercentage(uint256)\":{\"notice\":\"Sets the percentage of the resolving cost to be refunded to the resolver.\"},\"unlockBond(uint256,bytes)\":{\"notice\":\"Unlock the bond associated wth an expired challenge.\"},\"validateCommitment(bytes)\":{\"notice\":\"Validate that a given commitment has a known type and the expected length for this type.\"},\"variableResolutionCost()\":{\"notice\":\"The variable cost of resolving a callenge per byte scaled by the variableResolutionCostPrecision.\"},\"version()\":{\"notice\":\"Semantic version.\"},\"withdraw()\":{\"notice\":\"Withdraw a user's unlocked bond.\"}},\"notice\":\"This contract enables data availability of a data commitment at a given block number to be challenged.         To challenge a commitment, the challenger must first post a bond (bondSize).         Challenging a commitment is only possible within a certain block interval (challengeWindow) after the         commitment was made.         If the challenge is not resolved within a certain block interval (resolveWindow), the challenge can be         expired.         If a challenge is expired, the challenger's bond is unlocked and the challenged commitment is added to the         chain of expired challenges.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/DataAvailabilityChallenge.sol\":\"DataAvailabilityChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"src/L1/DataAvailabilityChallenge.sol\":{\"keccak256\":\"0x3acbe46138dcf7e8d8b1623c856b32fe99dd18cc6d49a252c866358eadcb4b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c09b84ecfbe843a2ba408a82de297f31371273102eb3907a833d19483d041e7\",\"dweb:/ipfs/QmVDcNEo7bdHgrNDezaan3EQ1UmZEFkX3KsxpReTaVeF4r\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"required","type":"uint256"}],"type":"error","name":"BondTooLow"},{"inputs":[],"type":"error","name":"ChallengeExists"},{"inputs":[],"type":"error","name":"ChallengeNotActive"},{"inputs":[],"type":"error","name":"ChallengeNotExpired"},{"inputs":[],"type":"error","name":"ChallengeWindowNotOpen"},{"inputs":[{"internalType":"uint8","name":"commitmentType","type":"uint8"},{"internalType":"uint256","name":"expectedLength","type":"uint256"},{"internalType":"uint256","name":"actualLength","type":"uint256"}],"type":"error","name":"InvalidCommitmentLength"},{"inputs":[{"internalType":"bytes","name":"providedDataCommitment","type":"bytes"},{"internalType":"bytes","name":"expectedCommitment","type":"bytes"}],"type":"error","name":"InvalidInputData"},{"inputs":[{"internalType":"uint256","name":"invalidResolverRefundPercentage","type":"uint256"}],"type":"error","name":"InvalidResolverRefundPercentage"},{"inputs":[{"internalType":"uint8","name":"commitmentType","type":"uint8"}],"type":"error","name":"UnknownCommitmentType"},{"inputs":[],"type":"error","name":"WithdrawalFailed"},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false},{"internalType":"uint256","name":"balance","type":"uint256","indexed":false}],"type":"event","name":"BalanceChanged","anonymous":false},{"inputs":[{"internalType":"uint256","name":"challengedBlockNumber","type":"uint256","indexed":true},{"internalType":"bytes","name":"challengedCommitment","type":"bytes","indexed":false},{"internalType":"enum ChallengeStatus","name":"status","type":"uint8","indexed":false}],"type":"event","name":"ChallengeStatusChanged","anonymous":false},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint256","name":"challengeWindow","type":"uint256","indexed":false}],"type":"event","name":"RequiredBondSizeChanged","anonymous":false},{"inputs":[{"internalType":"uint256","name":"resolverRefundPercentage","type":"uint256","indexed":false}],"type":"event","name":"ResolverRefundPercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bondSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"challengedBlockNumber","type":"uint256"},{"internalType":"bytes","name":"challengedCommitment","type":"bytes"}],"stateMutability":"payable","type":"function","name":"challenge"},{"inputs":[],"stateMutability":"view","type":"function","name":"challengeWindow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"function","name":"deposit"},{"inputs":[],"stateMutability":"view","type":"function","name":"fixedResolutionCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"challengedBlockNumber","type":"uint256"},{"internalType":"bytes","name":"challengedCommitment","type":"bytes"}],"stateMutability":"view","type":"function","name":"getChallenge","outputs":[{"internalType":"struct Challenge","name":"","type":"tuple","components":[{"internalType":"address","name":"challenger","type":"address"},{"internalType":"uint256","name":"lockedBond","type":"uint256"},{"internalType":"uint256","name":"startBlock","type":"uint256"},{"internalType":"uint256","name":"resolvedBlock","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"challengedBlockNumber","type":"uint256"},{"internalType":"bytes","name":"challengedCommitment","type":"bytes"}],"stateMutability":"view","type":"function","name":"getChallengeStatus","outputs":[{"internalType":"enum ChallengeStatus","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_challengeWindow","type":"uint256"},{"internalType":"uint256","name":"_resolveWindow","type":"uint256"},{"internalType":"uint256","name":"_bondSize","type":"uint256"},{"internalType":"uint256","name":"_resolverRefundPercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint256","name":"challengedBlockNumber","type":"uint256"},{"internalType":"bytes","name":"challengedCommitment","type":"bytes"},{"internalType":"bytes","name":"resolveData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"resolve"},{"inputs":[],"stateMutability":"view","type":"function","name":"resolveWindow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"resolverRefundPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_bondSize","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setBondSize"},{"inputs":[{"internalType":"uint256","name":"_resolverRefundPercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setResolverRefundPercentage"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"uint256","name":"challengedBlockNumber","type":"uint256"},{"internalType":"bytes","name":"challengedCommitment","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"unlockBond"},{"inputs":[{"internalType":"bytes","name":"commitment","type":"bytes"}],"stateMutability":"pure","type":"function","name":"validateCommitment"},{"inputs":[],"stateMutability":"view","type":"function","name":"variableResolutionCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"variableResolutionCostPrecision","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"withdraw"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"challenge(uint256,bytes)":{"details":"The block number parameter is necessary for the contract to verify the challenge window,      since the contract cannot access the block number of the commitment.      The function reverts if the commitment type (first byte) is unknown,      if the caller does not have a bond or if the challenge already exists.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."}},"getChallenge(uint256,bytes)":{"details":"Unlike with a public `challenges` mapping, we can return a Challenge struct instead of tuple.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."},"returns":{"_0":"The challenge struct."}},"getChallengeStatus(uint256,bytes)":{"params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."},"returns":{"_0":"The status of the challenge."}},"initialize(address,uint256,uint256,uint256,uint256)":{"params":{"_bondSize":"The amount required to post a challenge.","_challengeWindow":"The block interval during which a commitment can be challenged.","_owner":"The owner of the contract.","_resolveWindow":"The block interval during which a challenge can be resolved."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"resolve(uint256,bytes,bytes)":{"details":"The function computes a commitment from the provided resolveData and verifies that it matches the challenged commitment.      It reverts if the commitment type is unknown, if the data doesn't match the commitment,      if the challenge is not active or if the resolve window is not open.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The challenged commitment that is being resolved.","resolveData":"The pre-image data corresponding to the challenged commitment."}},"setBondSize(uint256)":{"params":{"_bondSize":"The amount required to post a challenge."}},"setResolverRefundPercentage(uint256)":{"details":"The function reverts if the provided percentage is above 100, since the refund logic assumes a value smaller or equal to 100%.","params":{"_resolverRefundPercentage":"The percentage of the resolving cost to be refunded to the resolver."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockBond(uint256,bytes)":{"details":"The function reverts if the challenge is not expired.      If the expiration is successful, the challenger's bond is unlocked.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."}},"validateCommitment(bytes)":{"details":"The type of a commitment is stored in its first byte.      The function reverts with `UnknownCommitmentType` if the type is not known and      with `InvalidCommitmentLength` if the commitment has an unexpected length.","params":{"commitment":"The commitment for which to check the type."}}},"version":1},"userdoc":{"kind":"user","methods":{"balances(address)":{"notice":"A mapping from addresses to their bond balance in the contract."},"bondSize()":{"notice":"The amount required to post a challenge."},"challenge(uint256,bytes)":{"notice":"Challenge a commitment at a given block number."},"challengeWindow()":{"notice":"The block interval during which a commitment can be challenged."},"constructor":{"notice":"Constructs the DataAvailabilityChallenge contract. Cannot set         the owner to `address(0)` due to the Ownable contract's         implementation, so set it to `address(0xdEaD)`."},"deposit()":{"notice":"Post a bond as prerequisite for challenging a commitment."},"fixedResolutionCost()":{"notice":"The fixed cost of resolving a challenge."},"getChallenge(uint256,bytes)":{"notice":"Returns a challenge for the given block number and commitment."},"getChallengeStatus(uint256,bytes)":{"notice":"Returns the status of a challenge for a given challenged block number and challenged commitment."},"initialize(address,uint256,uint256,uint256,uint256)":{"notice":"Initializes the contract."},"resolve(uint256,bytes,bytes)":{"notice":"Resolve a challenge by providing the data corresponding to the challenged commitment."},"resolveWindow()":{"notice":"The block interval during which a challenge can be resolved."},"resolverRefundPercentage()":{"notice":"The percentage of the resolving cost to be refunded to the resolver."},"setBondSize(uint256)":{"notice":"Sets the bond size."},"setResolverRefundPercentage(uint256)":{"notice":"Sets the percentage of the resolving cost to be refunded to the resolver."},"unlockBond(uint256,bytes)":{"notice":"Unlock the bond associated wth an expired challenge."},"validateCommitment(bytes)":{"notice":"Validate that a given commitment has a known type and the expected length for this type."},"variableResolutionCost()":{"notice":"The variable cost of resolving a callenge per byte scaled by the variableResolutionCostPrecision."},"version()":{"notice":"Semantic version."},"withdraw()":{"notice":"Withdraw a user's unlocked bond."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/L1/DataAvailabilityChallenge.sol":"DataAvailabilityChallenge"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888","urls":["bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a","dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"src/L1/DataAvailabilityChallenge.sol":{"keccak256":"0x3acbe46138dcf7e8d8b1623c856b32fe99dd18cc6d49a252c866358eadcb4b41","urls":["bzz-raw://0c09b84ecfbe843a2ba408a82de297f31371273102eb3907a833d19483d041e7","dweb:/ipfs/QmVDcNEo7bdHgrNDezaan3EQ1UmZEFkX3KsxpReTaVeF4r"],"license":"MIT"},"src/libraries/SafeCall.sol":{"keccak256":"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f","urls":["bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a","dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":45313,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":45316,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":46844,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":45185,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":45305,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":80832,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"challengeWindow","offset":0,"slot":"101","type":"t_uint256"},{"astId":80835,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"resolveWindow","offset":0,"slot":"102","type":"t_uint256"},{"astId":80838,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"bondSize","offset":0,"slot":"103","type":"t_uint256"},{"astId":80841,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"resolverRefundPercentage","offset":0,"slot":"104","type":"t_uint256"},{"astId":80846,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"balances","offset":0,"slot":"105","type":"t_mapping(t_address,t_uint256)"},{"astId":80854,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"challenges","offset":0,"slot":"106","type":"t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_struct(Challenge)80733_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568","base":"t_uint256"},"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes_memory_ptr,t_struct(Challenge)80733_storage)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => struct Challenge)","numberOfBytes":"32","value":"t_struct(Challenge)80733_storage"},"t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_struct(Challenge)80733_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(bytes => struct Challenge))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_struct(Challenge)80733_storage)"},"t_struct(Challenge)80733_storage":{"encoding":"inplace","label":"struct Challenge","numberOfBytes":"128","members":[{"astId":80726,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"challenger","offset":0,"slot":"0","type":"t_address"},{"astId":80728,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"lockedBond","offset":0,"slot":"1","type":"t_uint256"},{"astId":80730,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"startBlock","offset":0,"slot":"2","type":"t_uint256"},{"astId":80732,"contract":"src/L1/DataAvailabilityChallenge.sol:DataAvailabilityChallenge","label":"resolvedBlock","offset":0,"slot":"3","type":"t_uint256"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"version":1,"kind":"user","methods":{"balances(address)":{"notice":"A mapping from addresses to their bond balance in the contract."},"bondSize()":{"notice":"The amount required to post a challenge."},"challenge(uint256,bytes)":{"notice":"Challenge a commitment at a given block number."},"challengeWindow()":{"notice":"The block interval during which a commitment can be challenged."},"constructor":{"notice":"Constructs the DataAvailabilityChallenge contract. Cannot set         the owner to `address(0)` due to the Ownable contract's         implementation, so set it to `address(0xdEaD)`."},"deposit()":{"notice":"Post a bond as prerequisite for challenging a commitment."},"fixedResolutionCost()":{"notice":"The fixed cost of resolving a challenge."},"getChallenge(uint256,bytes)":{"notice":"Returns a challenge for the given block number and commitment."},"getChallengeStatus(uint256,bytes)":{"notice":"Returns the status of a challenge for a given challenged block number and challenged commitment."},"initialize(address,uint256,uint256,uint256,uint256)":{"notice":"Initializes the contract."},"resolve(uint256,bytes,bytes)":{"notice":"Resolve a challenge by providing the data corresponding to the challenged commitment."},"resolveWindow()":{"notice":"The block interval during which a challenge can be resolved."},"resolverRefundPercentage()":{"notice":"The percentage of the resolving cost to be refunded to the resolver."},"setBondSize(uint256)":{"notice":"Sets the bond size."},"setResolverRefundPercentage(uint256)":{"notice":"Sets the percentage of the resolving cost to be refunded to the resolver."},"unlockBond(uint256,bytes)":{"notice":"Unlock the bond associated wth an expired challenge."},"validateCommitment(bytes)":{"notice":"Validate that a given commitment has a known type and the expected length for this type."},"variableResolutionCost()":{"notice":"The variable cost of resolving a callenge per byte scaled by the variableResolutionCostPrecision."},"version()":{"notice":"Semantic version."},"withdraw()":{"notice":"Withdraw a user's unlocked bond."}},"events":{"BalanceChanged(address,uint256)":{"notice":"An event that is emitted when a user's bond balance changes."},"ChallengeStatusChanged(uint256,bytes,uint8)":{"notice":"An event that is emitted when the status of a challenge changes."},"RequiredBondSizeChanged(uint256)":{"notice":"An event that is emitted when the bond size required to initiate a challenge changes."},"ResolverRefundPercentageChanged(uint256)":{"notice":"An event that is emitted when the percentage of the resolving cost to be refunded to the resolver changes."}},"errors":{"BondTooLow(uint256,uint256)":[{"notice":"Error for when the challenger's bond is too low."}],"ChallengeExists()":[{"notice":"Error for when attempting to challenge a commitment that already has a challenge."}],"ChallengeNotActive()":[{"notice":"Error for when attempting to resolve a challenge that is not active."}],"ChallengeNotExpired()":[{"notice":"Error for when attempting to unlock a bond from a challenge that is not expired."}],"ChallengeWindowNotOpen()":[{"notice":"Error for when attempting to challenge a commitment that is not in the challenge window."}],"InvalidCommitmentLength(uint8,uint256,uint256)":[{"notice":"Error for when the commitment length does not match the commitment type"}],"InvalidInputData(bytes,bytes)":[{"notice":"Error for when the provided input data doesn't match the commitment."}],"InvalidResolverRefundPercentage(uint256)":[{"notice":"Error for when the provided resolver refund percentage exceeds 100%."}],"UnknownCommitmentType(uint8)":[{"notice":"Error for when a the type of a given commitment is unknown"}],"WithdrawalFailed()":[{"notice":"Error for when the call to withdraw a bond failed."}]},"notice":"This contract enables data availability of a data commitment at a given block number to be challenged.         To challenge a commitment, the challenger must first post a bond (bondSize).         Challenging a commitment is only possible within a certain block interval (challengeWindow) after the         commitment was made.         If the challenge is not resolved within a certain block interval (resolveWindow), the challenge can be         expired.         If a challenge is expired, the challenger's bond is unlocked and the challenged commitment is added to the         chain of expired challenges."},"devdoc":{"version":1,"kind":"dev","methods":{"challenge(uint256,bytes)":{"details":"The block number parameter is necessary for the contract to verify the challenge window,      since the contract cannot access the block number of the commitment.      The function reverts if the commitment type (first byte) is unknown,      if the caller does not have a bond or if the challenge already exists.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."}},"getChallenge(uint256,bytes)":{"details":"Unlike with a public `challenges` mapping, we can return a Challenge struct instead of tuple.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."},"returns":{"_0":"The challenge struct."}},"getChallengeStatus(uint256,bytes)":{"params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."},"returns":{"_0":"The status of the challenge."}},"initialize(address,uint256,uint256,uint256,uint256)":{"params":{"_bondSize":"The amount required to post a challenge.","_challengeWindow":"The block interval during which a commitment can be challenged.","_owner":"The owner of the contract.","_resolveWindow":"The block interval during which a challenge can be resolved."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"resolve(uint256,bytes,bytes)":{"details":"The function computes a commitment from the provided resolveData and verifies that it matches the challenged commitment.      It reverts if the commitment type is unknown, if the data doesn't match the commitment,      if the challenge is not active or if the resolve window is not open.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The challenged commitment that is being resolved.","resolveData":"The pre-image data corresponding to the challenged commitment."}},"setBondSize(uint256)":{"params":{"_bondSize":"The amount required to post a challenge."}},"setResolverRefundPercentage(uint256)":{"details":"The function reverts if the provided percentage is above 100, since the refund logic assumes a value smaller or equal to 100%.","params":{"_resolverRefundPercentage":"The percentage of the resolving cost to be refunded to the resolver."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockBond(uint256,bytes)":{"details":"The function reverts if the challenge is not expired.      If the expiration is successful, the challenger's bond is unlocked.","params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged."}},"validateCommitment(bytes)":{"details":"The type of a commitment is stored in its first byte.      The function reverts with `UnknownCommitmentType` if the type is not known and      with `InvalidCommitmentLength` if the commitment has an unexpected length.","params":{"commitment":"The commitment for which to check the type."}}},"events":{"ChallengeStatusChanged(uint256,bytes,uint8)":{"params":{"challengedBlockNumber":"The block number at which the commitment was made.","challengedCommitment":"The commitment that is being challenged.","status":"The new status of the challenge."}}},"title":"DataAvailabilityChallenge"},"id":124}