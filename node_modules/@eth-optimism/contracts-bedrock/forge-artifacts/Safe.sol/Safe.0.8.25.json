{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"fallback","stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"addOwnerWithThreshold","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"_threshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"approveHash","inputs":[{"name":"hashToApprove","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"approvedHashes","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"changeThreshold","inputs":[{"name":"_threshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"checkNSignatures","inputs":[{"name":"dataHash","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"signatures","type":"bytes","internalType":"bytes"},{"name":"requiredSignatures","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"checkSignatures","inputs":[{"name":"dataHash","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"signatures","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"disableModule","inputs":[{"name":"prevModule","type":"address","internalType":"address"},{"name":"module","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"enableModule","inputs":[{"name":"module","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"encodeTransactionData","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operation","type":"uint8","internalType":"enum Enum.Operation"},{"name":"safeTxGas","type":"uint256","internalType":"uint256"},{"name":"baseGas","type":"uint256","internalType":"uint256"},{"name":"gasPrice","type":"uint256","internalType":"uint256"},{"name":"gasToken","type":"address","internalType":"address"},{"name":"refundReceiver","type":"address","internalType":"address"},{"name":"_nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"execTransaction","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operation","type":"uint8","internalType":"enum Enum.Operation"},{"name":"safeTxGas","type":"uint256","internalType":"uint256"},{"name":"baseGas","type":"uint256","internalType":"uint256"},{"name":"gasPrice","type":"uint256","internalType":"uint256"},{"name":"gasToken","type":"address","internalType":"address"},{"name":"refundReceiver","type":"address","internalType":"address payable"},{"name":"signatures","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"execTransactionFromModule","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operation","type":"uint8","internalType":"enum Enum.Operation"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"execTransactionFromModuleReturnData","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operation","type":"uint8","internalType":"enum Enum.Operation"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getModulesPaginated","inputs":[{"name":"start","type":"address","internalType":"address"},{"name":"pageSize","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"array","type":"address[]","internalType":"address[]"},{"name":"next","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOwners","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getStorageAt","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getThreshold","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTransactionHash","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operation","type":"uint8","internalType":"enum Enum.Operation"},{"name":"safeTxGas","type":"uint256","internalType":"uint256"},{"name":"baseGas","type":"uint256","internalType":"uint256"},{"name":"gasPrice","type":"uint256","internalType":"uint256"},{"name":"gasToken","type":"address","internalType":"address"},{"name":"refundReceiver","type":"address","internalType":"address"},{"name":"_nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"isModuleEnabled","inputs":[{"name":"module","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"nonce","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"removeOwner","inputs":[{"name":"prevOwner","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"_threshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFallbackHandler","inputs":[{"name":"handler","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setGuard","inputs":[{"name":"guard","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setup","inputs":[{"name":"_owners","type":"address[]","internalType":"address[]"},{"name":"_threshold","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"fallbackHandler","type":"address","internalType":"address"},{"name":"paymentToken","type":"address","internalType":"address"},{"name":"payment","type":"uint256","internalType":"uint256"},{"name":"paymentReceiver","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"signedMessages","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"simulateAndRevert","inputs":[{"name":"targetContract","type":"address","internalType":"address"},{"name":"calldataPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swapOwner","inputs":[{"name":"prevOwner","type":"address","internalType":"address"},{"name":"oldOwner","type":"address","internalType":"address"},{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddedOwner","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ApproveHash","inputs":[{"name":"approvedHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"owner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChangedFallbackHandler","inputs":[{"name":"handler","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChangedGuard","inputs":[{"name":"guard","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChangedThreshold","inputs":[{"name":"threshold","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DisabledModule","inputs":[{"name":"module","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"EnabledModule","inputs":[{"name":"module","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ExecutionFailure","inputs":[{"name":"txHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"payment","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ExecutionFromModuleFailure","inputs":[{"name":"module","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ExecutionFromModuleSuccess","inputs":[{"name":"module","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ExecutionSuccess","inputs":[{"name":"txHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"payment","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RemovedOwner","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SafeReceived","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SafeSetup","inputs":[{"name":"initiator","type":"address","indexed":true,"internalType":"address"},{"name":"owners","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"threshold","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"initializer","type":"address","indexed":false,"internalType":"address"},{"name":"fallbackHandler","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SignMsg","inputs":[{"name":"msgHash","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b5060016004556141a5806100246000396000f3fe6080604052600436106101d15760003560e01c8063affed0e0116100f7578063e19a9dd911610095578063f08a032311610064578063f08a0323146105f5578063f698da2514610615578063f8dc5dd91461067c578063ffa1ad741461069c5761020d565b8063e19a9dd914610580578063e318b52b146105a0578063e75235b8146105c0578063e86637db146105d55761020d565b8063cc2f8452116100d1578063cc2f8452146104f2578063d4d9bdcd14610520578063d8d11f7814610540578063e009cfde146105605761020d565b8063affed0e01461049c578063b4faba09146104b2578063b63e800d146104d25761020d565b80635624b25b1161016f5780636a7612021161013e5780636a7612021461040f5780637d83297414610422578063934f3a111461045a578063a0e67e2b1461047a5761020d565b80635624b25b146103755780635ae6bd37146103a2578063610b5925146103cf578063694e80c3146103ef5761020d565b80632f54bf6e116101ab5780632f54bf6e146102ea5780633408e4701461030a578063468721a7146103275780635229073f146103475761020d565b80630d582f131461027357806312fb68e0146102955780632d9ad53d146102b55761020d565b3661020d5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561021957600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061024457005b36600080373360601b365260008060143601600080855af190503d6000803e8061026d573d6000fd5b503d6000f35b34801561027f57600080fd5b5061029361028e36600461354b565b6106e5565b005b3480156102a157600080fd5b506102936102b0366004613651565b610933565b3480156102c157600080fd5b506102d56102d03660046136c6565b610fee565b60405190151581526020015b60405180910390f35b3480156102f657600080fd5b506102d56103053660046136c6565b611043565b34801561031657600080fd5b50465b6040519081526020016102e1565b34801561033357600080fd5b506102d56103423660046136f2565b611095565b34801561035357600080fd5b506103676103623660046136f2565b6111cb565b6040516102e19291906137c0565b34801561038157600080fd5b506103956103903660046137db565b611201565b6040516102e191906137fd565b3480156103ae57600080fd5b506103196103bd366004613810565b60076020526000908152604090205481565b3480156103db57600080fd5b506102936103ea3660046136c6565b61127d565b3480156103fb57600080fd5b5061029361040a366004613810565b611466565b6102d561041d366004613872565b611580565b34801561042e57600080fd5b5061031961043d36600461354b565b600860209081526000928352604080842090915290825290205481565b34801561046657600080fd5b5061029361047536600461394b565b61197c565b34801561048657600080fd5b5061048f6119f8565b6040516102e19190613a0a565b3480156104a857600080fd5b5061031960055481565b3480156104be57600080fd5b506102936104cd366004613a1d565b611b10565b3480156104de57600080fd5b506102936104ed366004613a6d565b611b33565b3480156104fe57600080fd5b5061051261050d36600461354b565b611c4f565b6040516102e1929190613b62565b34801561052c57600080fd5b5061029361053b366004613810565b611ebd565b34801561054c57600080fd5b5061031961055b366004613b9a565b611f91565b34801561056c57600080fd5b5061029361057b366004613c5b565b611fbe565b34801561058c57600080fd5b5061029361059b3660046136c6565b612190565b3480156105ac57600080fd5b506102936105bb366004613c94565b612331565b3480156105cc57600080fd5b50600454610319565b3480156105e157600080fd5b506103956105f0366004613b9a565b6126a9565b34801561060157600080fd5b506102936106103660046136c6565b612842565b34801561062157600080fd5b5061031960007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b34801561068857600080fd5b50610293610697366004613cdf565b612897565b3480156106a857600080fd5b506103956040518060400160405280600581526020017f312e342e3000000000000000000000000000000000000000000000000000000081525081565b6106ed612b21565b73ffffffffffffffffffffffffffffffffffffffff821615801590610729575073ffffffffffffffffffffffffffffffffffffffff8216600114155b801561074b575073ffffffffffffffffffffffffffffffffffffffff82163014155b6107b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260205260409020541615610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0805473ffffffffffffffffffffffffffffffffffffffff8481166000818152604081208054939094167fffffffffffffffffffffffff0000000000000000000000000000000000000000938416179093556001835283549091161790915560038054916108d783613d4f565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2806004541461092f5761092f81611466565b5050565b61093e816041612b8c565b825110156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6000808060008060005b86811015610fe2576041818102890160208101516040820151919092015160ff16955090935091506000849003610cf857885160208a01208a14610a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323700000000000000000000000000000000000000000000000000000060448201526064016107ad565b9193508391610a62876041612b8c565b821015610acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323100000000000000000000000000000000000000000000000000000060448201526064016107ad565b8751610ad8836020612bc8565b1115610b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323200000000000000000000000000000000000000000000000000000060448201526064016107ad565b602082890181015189519091610b63908390610b5d908790612bc8565b90612bc8565b1115610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323300000000000000000000000000000000000000000000000000000060448201526064016107ad565b6040517f20c13b0b000000000000000000000000000000000000000000000000000000008082528a85016020019173ffffffffffffffffffffffffffffffffffffffff8916906320c13b0b90610c27908f908690600401613d87565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190613dac565b7fffffffff000000000000000000000000000000000000000000000000000000001614610cf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323400000000000000000000000000000000000000000000000000000060448201526064016107ad565b5050610eeb565b8360ff16600103610dc65791935083913373ffffffffffffffffffffffffffffffffffffffff84161480610d5b575073ffffffffffffffffffffffffffffffffffffffff851660009081526008602090815260408083208d845290915290205415155b610dc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323500000000000000000000000000000000000000000000000000000060448201526064016107ad565b610eeb565b601e8460ff161115610e8b576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610e2b9190613dee565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e7a573d6000803e3d6000fd5b505050602060405103519450610eeb565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610ede573d6000803e3d6000fd5b5050506020604051035194505b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16118015610f4c575073ffffffffffffffffffffffffffffffffffffffff8581166000908152600260205260409020541615155b8015610f6f575073ffffffffffffffffffffffffffffffffffffffff8516600114155b610fd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323600000000000000000000000000000000000000000000000000000060448201526064016107ad565b93945084936001016109b2565b50505050505050505050565b6000600173ffffffffffffffffffffffffffffffffffffffff83161480159061103d575073ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020541615155b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821660011480159061103d57505073ffffffffffffffffffffffffffffffffffffffff90811660009081526002602052604090205416151590565b6000336001148015906110cc57503360009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1615155b611132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b61115f858585857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612be4565b905080156111975760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a26111c3565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b600060606111db86868686611095565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b60606000611210836020613e07565b67ffffffffffffffff81111561122857611228613577565b6040519080825280601f01601f191660200182016040528015611252576020820181803683370190505b50905060005b838110156112755784810154602080830284010152600101611258565b509392505050565b611285612b21565b73ffffffffffffffffffffffffffffffffffffffff8116158015906112c1575073ffffffffffffffffffffffffffffffffffffffff8116600114155b611327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526001602052604090205416156113b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805473ffffffffffffffffffffffffffffffffffffffff848116600081815260408082208054949095167fffffffffffffffffffffffff000000000000000000000000000000000000000094851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b61146e612b21565b6003548111156114da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001811015611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b600080600061159a8e8e8e8e8e8e8e8e8e8e6005546126a9565b6005805491925060006115ac83613d4f565b90915550508051602082012091506115c582828661197c565b5060006115f07f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b905073ffffffffffffffffffffffffffffffffffffffff811615611690578073ffffffffffffffffffffffffffffffffffffffff166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b815260040161165d9c9b9a99989796959493929190613e88565b600060405180830381600087803b15801561167757600080fd5b505af115801561168b573d6000803e3d6000fd5b505050505b6116bc61169f8a6109c4613f9e565b603f6116ac8c6040613e07565b6116b69190613fb1565b90612c2b565b6116c8906101f4613f9e565b5a1015611731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313000000000000000000000000000000000000000000000000000000060448201526064016107ad565b60005a90506117a28f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c60001461178f578e612be4565b6109c45a61179d9190613fec565b612be4565b93506117af5a8290612c42565b905083806117bc57508915155b806117c657508715155b61182c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313300000000000000000000000000000000000000000000000000000060448201526064016107ad565b6000881561184457611841828b8b8b8b612c5d565b90505b841561188957837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e8260405161187c91815260200190565b60405180910390a26118c4565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d23826040516118bb91815260200190565b60405180910390a25b505073ffffffffffffffffffffffffffffffffffffffff81161561196b576040517f9327136800000000000000000000000000000000000000000000000000000000815260048101839052831515602482015273ffffffffffffffffffffffffffffffffffffffff821690639327136890604401600060405180830381600087803b15801561195257600080fd5b505af1158015611966573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b600454806119e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6119f284848484610933565b50505050565b6060600060035467ffffffffffffffff811115611a1757611a17613577565b604051908082528060200260200182016040528015611a40578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0549192509073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff8116600114611b085780838381518110611abb57611abb613fff565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152918116600090815260029092526040909120541681611b0081613d4f565b925050611a8a565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611b718a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612dee915050565b73ffffffffffffffffffffffffffffffffffffffff841615611b9657611b96846131b1565b611bd68787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061325492505050565b8115611bed57611beb82600060018685612c5d565b505b3373ffffffffffffffffffffffffffffffffffffffff167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611c3b95949392919061402e565b60405180910390a250505050505050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff841660011480611c7c5750611c7c84610fee565b611ce2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b60008311611d4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303600000000000000000000000000000000000000000000000000000060448201526064016107ad565b8267ffffffffffffffff811115611d6557611d65613577565b604051908082528060200260200182016040528015611d8e578160200160208202803683370190505b5073ffffffffffffffffffffffffffffffffffffffff808616600090815260016020526040812054929450911691505b73ffffffffffffffffffffffffffffffffffffffff821615801590611dfa575073ffffffffffffffffffffffffffffffffffffffff8216600114155b8015611e0557508381105b15611e6d5781838281518110611e1d57611e1d613fff565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152928116600090815260019093526040909220549091169080611e6581613d4f565b915050611dbe565b73ffffffffffffffffffffffffffffffffffffffff8216600114611eb25782611e97600183613fec565b81518110611ea757611ea7613fff565b602002602001015191505b808352509250929050565b3360009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16611f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330333000000000000000000000000000000000000000000000000000000060448201526064016107ad565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611fa68c8c8c8c8c8c8c8c8c8c8c6126a9565b8051906020012090509b9a5050505050505050505050565b611fc6612b21565b73ffffffffffffffffffffffffffffffffffffffff811615801590612002575073ffffffffffffffffffffffffffffffffffffffff8116600114155b612068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020548116908216146120fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260016020526040808220805487861684528284208054919096167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b612198612b21565b73ffffffffffffffffffffffffffffffffffffffff8116156122c8576040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fe6d7a83a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa15801561223e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226291906140b4565b6122c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475333303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c881815560405173ffffffffffffffffffffffffffffffffffffffff8316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b612339612b21565b73ffffffffffffffffffffffffffffffffffffffff811615801590612375575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015612397575073ffffffffffffffffffffffffffffffffffffffff81163014155b6123fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260026020526040902054161561248c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8216158015906124c8575073ffffffffffffffffffffffffffffffffffffffff8216600114155b61252e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260205260409020548116908316146125c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805486861680855283852080549288167fffffffffffffffffffffffff00000000000000000000000000000000000000009384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a260405173ffffffffffffffffffffffffffffffffffffffff8216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d6040516126e39291906140d6565b604051908190038120612709949392918e908e908e908e908e908e908e906020016140e6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012090507f19000000000000000000000000000000000000000000000000000000000000007f01000000000000000000000000000000000000000000000000000000000000006127dd60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff0000000000000000000000000000000000000000000000000000000000000093841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b61284a612b21565b612853816131b1565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b61289f612b21565b8060016003546128af9190613fec565b1015612917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff821615801590612953575073ffffffffffffffffffffffffffffffffffffffff8216600114155b6129b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff838116600090815260026020526040902054811690831614612a4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805488861684529183208054929095167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790945591815282549091169091556003805491612ac483614163565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a28060045414612b1c57612b1c81611466565b505050565b333014612b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330333100000000000000000000000000000000000000000000000000000060448201526064016107ad565b565b600082600003612b9e5750600061103d565b6000612baa8385613e07565b905082612bb78583613fb1565b14612bc157600080fd5b9392505050565b600080612bd58385613f9e565b905083811015612bc157600080fd5b60006001836001811115612bfa57612bfa613e1e565b03612c12576000808551602087018986f49050612c22565b600080855160208701888a87f190505b95945050505050565b600081831015612c3b5781612bc1565b5090919050565b600082821115612c5157600080fd5b60006111c38385613fec565b60008073ffffffffffffffffffffffffffffffffffffffff831615612c825782612c84565b325b905073ffffffffffffffffffffffffffffffffffffffff8416612d6357612cc33a8610612cb1573a612cb3565b855b612cbd8989612bc8565b90612b8c565b60405190925073ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f19350505050612d5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313100000000000000000000000000000000000000000000000000000060448201526064016107ad565b612de4565b612d7185612cbd8989612bc8565b9150612d7e84828461344c565b612de4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313200000000000000000000000000000000000000000000000000000060448201526064016107ad565b5095945050505050565b60045415612e58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b8151811115612ec3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001811015612f2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b600160005b8351811015613159576000848281518110612f5057612f50613fff565b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015612fae575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015612fd0575073ffffffffffffffffffffffffffffffffffffffff81163014155b801561300857508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61306e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526002602052604090205416156130fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff928316600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001693821693909317909255600101612f33565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001660011790559051600355600455565b3073ffffffffffffffffffffffffffffffffffffffff821603613230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475334303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5473ffffffffffffffffffffffffffffffffffffffff16156132fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80547fffffffffffffffffffffffff000000000000000000000000000000000000000016909117905573ffffffffffffffffffffffffffffffffffffffff82161561092f57813b6133d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b6133e68260008360015a612be4565b61092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6040805173ffffffffffffffffffffffffffffffffffffffff841660248201526044808201849052825180830390910181526064909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781528251600093929184919082896127105a03f13d80156134f95760208114613501576000935061350c565b81935061350c565b600051158215171593505b5050509392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461353857600080fd5b50565b803561354681613516565b919050565b6000806040838503121561355e57600080fd5b823561356981613516565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126135b757600080fd5b813567ffffffffffffffff808211156135d2576135d2613577565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561361857613618613577565b8160405283815286602085880101111561363157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561366757600080fd5b84359350602085013567ffffffffffffffff8082111561368657600080fd5b613692888389016135a6565b945060408701359150808211156136a857600080fd5b506136b5878288016135a6565b949793965093946060013593505050565b6000602082840312156136d857600080fd5b8135612bc181613516565b80356002811061354657600080fd5b6000806000806080858703121561370857600080fd5b843561371381613516565b935060208501359250604085013567ffffffffffffffff81111561373657600080fd5b613742878288016135a6565b925050613751606086016136e3565b905092959194509250565b6000815180845260005b8181101561378257602081850181015186830182015201613766565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b82151581526040602082015260006111c3604083018461375c565b600080604083850312156137ee57600080fd5b50508035926020909101359150565b602081526000612bc1602083018461375c565b60006020828403121561382257600080fd5b5035919050565b60008083601f84011261383b57600080fd5b50813567ffffffffffffffff81111561385357600080fd5b60208301915083602082850101111561386b57600080fd5b9250929050565b60008060008060008060008060008060006101408c8e03121561389457600080fd5b61389d8c61353b565b9a5060208c0135995067ffffffffffffffff8060408e013511156138c057600080fd5b6138d08e60408f01358f01613829565b909a5098506138e160608e016136e3565b975060808d0135965060a08d0135955060c08d0135945061390460e08e0161353b565b93506139136101008e0161353b565b9250806101208e0135111561392757600080fd5b506139398d6101208e01358e016135a6565b90509295989b509295989b9093969950565b60008060006060848603121561396057600080fd5b83359250602084013567ffffffffffffffff8082111561397f57600080fd5b61398b878388016135a6565b935060408601359150808211156139a157600080fd5b506139ae868287016135a6565b9150509250925092565b60008151808452602080850194506020840160005b838110156139ff57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016139cd565b509495945050505050565b602081526000612bc160208301846139b8565b60008060408385031215613a3057600080fd5b8235613a3b81613516565b9150602083013567ffffffffffffffff811115613a5757600080fd5b613a63858286016135a6565b9150509250929050565b6000806000806000806000806000806101008b8d031215613a8d57600080fd5b8a3567ffffffffffffffff80821115613aa557600080fd5b818d0191508d601f830112613ab957600080fd5b813581811115613ac857600080fd5b8e60208260051b8501011115613add57600080fd5b60208381019d50909b508d01359950613af860408e0161353b565b985060608d0135915080821115613b0e57600080fd5b50613b1b8d828e01613829565b9097509550613b2e905060808c0161353b565b9350613b3c60a08c0161353b565b925060c08b01359150613b5160e08c0161353b565b90509295989b9194979a5092959850565b604081526000613b7560408301856139b8565b905073ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b60008060008060008060008060008060006101408c8e031215613bbc57600080fd5b8b35613bc781613516565b9a5060208c0135995060408c013567ffffffffffffffff811115613bea57600080fd5b613bf68e828f01613829565b909a509850613c09905060608d016136e3565b965060808c0135955060a08c0135945060c08c0135935060e08c0135613c2e81613516565b92506101008c0135613c3f81613516565b809250506101208c013590509295989b509295989b9093969950565b60008060408385031215613c6e57600080fd5b8235613c7981613516565b91506020830135613c8981613516565b809150509250929050565b600080600060608486031215613ca957600080fd5b8335613cb481613516565b92506020840135613cc481613516565b91506040840135613cd481613516565b809150509250925092565b600080600060608486031215613cf457600080fd5b8335613cff81613516565b92506020840135613d0f81613516565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613d8057613d80613d20565b5060010190565b604081526000613d9a604083018561375c565b8281036020840152612c22818561375c565b600060208284031215613dbe57600080fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114612bc157600080fd5b60ff828116828216039081111561103d5761103d613d20565b808202811582820484141761103d5761103d613d20565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110613e84577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600061016073ffffffffffffffffffffffffffffffffffffffff8f1683528d60208401528060408401528b81840152506101808b8d828501376000818d850101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8d01168301613efe606085018d613e4d565b8a60808501528960a08501528860c0850152613f3260e085018973ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff87166101008501528184820301610120850152613f668282018761375c565b92505050613f8d61014083018473ffffffffffffffffffffffffffffffffffffffff169052565b9d9c50505050505050505050505050565b8082018082111561103d5761103d613d20565b600082613fe7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561103d5761103d613d20565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6080808252810185905260008660a08301825b8881101561407e57823561405481613516565b73ffffffffffffffffffffffffffffffffffffffff16825260209283019290910190600101614041565b506020840196909652505073ffffffffffffffffffffffffffffffffffffffff9283166040820152911660609091015292915050565b6000602082840312156140c657600080fd5b81518015158114612bc157600080fd5b8183823760009101908152919050565b6000610160820190508c825273ffffffffffffffffffffffffffffffffffffffff808d1660208401528b60408401528a6060840152614128608084018b613e4d565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b60008161417257614172613d20565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c6343000819000a","sourceMap":"1919:19946:31:-:0;;;3700:271;;;;;;;;;-1:-1:-1;3963:1:31;3951:9;:13;1919:19946;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106101d15760003560e01c8063affed0e0116100f7578063e19a9dd911610095578063f08a032311610064578063f08a0323146105f5578063f698da2514610615578063f8dc5dd91461067c578063ffa1ad741461069c5761020d565b8063e19a9dd914610580578063e318b52b146105a0578063e75235b8146105c0578063e86637db146105d55761020d565b8063cc2f8452116100d1578063cc2f8452146104f2578063d4d9bdcd14610520578063d8d11f7814610540578063e009cfde146105605761020d565b8063affed0e01461049c578063b4faba09146104b2578063b63e800d146104d25761020d565b80635624b25b1161016f5780636a7612021161013e5780636a7612021461040f5780637d83297414610422578063934f3a111461045a578063a0e67e2b1461047a5761020d565b80635624b25b146103755780635ae6bd37146103a2578063610b5925146103cf578063694e80c3146103ef5761020d565b80632f54bf6e116101ab5780632f54bf6e146102ea5780633408e4701461030a578063468721a7146103275780635229073f146103475761020d565b80630d582f131461027357806312fb68e0146102955780632d9ad53d146102b55761020d565b3661020d5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561021957600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061024457005b36600080373360601b365260008060143601600080855af190503d6000803e8061026d573d6000fd5b503d6000f35b34801561027f57600080fd5b5061029361028e36600461354b565b6106e5565b005b3480156102a157600080fd5b506102936102b0366004613651565b610933565b3480156102c157600080fd5b506102d56102d03660046136c6565b610fee565b60405190151581526020015b60405180910390f35b3480156102f657600080fd5b506102d56103053660046136c6565b611043565b34801561031657600080fd5b50465b6040519081526020016102e1565b34801561033357600080fd5b506102d56103423660046136f2565b611095565b34801561035357600080fd5b506103676103623660046136f2565b6111cb565b6040516102e19291906137c0565b34801561038157600080fd5b506103956103903660046137db565b611201565b6040516102e191906137fd565b3480156103ae57600080fd5b506103196103bd366004613810565b60076020526000908152604090205481565b3480156103db57600080fd5b506102936103ea3660046136c6565b61127d565b3480156103fb57600080fd5b5061029361040a366004613810565b611466565b6102d561041d366004613872565b611580565b34801561042e57600080fd5b5061031961043d36600461354b565b600860209081526000928352604080842090915290825290205481565b34801561046657600080fd5b5061029361047536600461394b565b61197c565b34801561048657600080fd5b5061048f6119f8565b6040516102e19190613a0a565b3480156104a857600080fd5b5061031960055481565b3480156104be57600080fd5b506102936104cd366004613a1d565b611b10565b3480156104de57600080fd5b506102936104ed366004613a6d565b611b33565b3480156104fe57600080fd5b5061051261050d36600461354b565b611c4f565b6040516102e1929190613b62565b34801561052c57600080fd5b5061029361053b366004613810565b611ebd565b34801561054c57600080fd5b5061031961055b366004613b9a565b611f91565b34801561056c57600080fd5b5061029361057b366004613c5b565b611fbe565b34801561058c57600080fd5b5061029361059b3660046136c6565b612190565b3480156105ac57600080fd5b506102936105bb366004613c94565b612331565b3480156105cc57600080fd5b50600454610319565b3480156105e157600080fd5b506103956105f0366004613b9a565b6126a9565b34801561060157600080fd5b506102936106103660046136c6565b612842565b34801561062157600080fd5b5061031960007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b34801561068857600080fd5b50610293610697366004613cdf565b612897565b3480156106a857600080fd5b506103956040518060400160405280600581526020017f312e342e3000000000000000000000000000000000000000000000000000000081525081565b6106ed612b21565b73ffffffffffffffffffffffffffffffffffffffff821615801590610729575073ffffffffffffffffffffffffffffffffffffffff8216600114155b801561074b575073ffffffffffffffffffffffffffffffffffffffff82163014155b6107b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260205260409020541615610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0805473ffffffffffffffffffffffffffffffffffffffff8481166000818152604081208054939094167fffffffffffffffffffffffff0000000000000000000000000000000000000000938416179093556001835283549091161790915560038054916108d783613d4f565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2806004541461092f5761092f81611466565b5050565b61093e816041612b8c565b825110156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6000808060008060005b86811015610fe2576041818102890160208101516040820151919092015160ff16955090935091506000849003610cf857885160208a01208a14610a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323700000000000000000000000000000000000000000000000000000060448201526064016107ad565b9193508391610a62876041612b8c565b821015610acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323100000000000000000000000000000000000000000000000000000060448201526064016107ad565b8751610ad8836020612bc8565b1115610b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323200000000000000000000000000000000000000000000000000000060448201526064016107ad565b602082890181015189519091610b63908390610b5d908790612bc8565b90612bc8565b1115610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323300000000000000000000000000000000000000000000000000000060448201526064016107ad565b6040517f20c13b0b000000000000000000000000000000000000000000000000000000008082528a85016020019173ffffffffffffffffffffffffffffffffffffffff8916906320c13b0b90610c27908f908690600401613d87565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190613dac565b7fffffffff000000000000000000000000000000000000000000000000000000001614610cf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323400000000000000000000000000000000000000000000000000000060448201526064016107ad565b5050610eeb565b8360ff16600103610dc65791935083913373ffffffffffffffffffffffffffffffffffffffff84161480610d5b575073ffffffffffffffffffffffffffffffffffffffff851660009081526008602090815260408083208d845290915290205415155b610dc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323500000000000000000000000000000000000000000000000000000060448201526064016107ad565b610eeb565b601e8460ff161115610e8b576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610e2b9190613dee565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e7a573d6000803e3d6000fd5b505050602060405103519450610eeb565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610ede573d6000803e3d6000fd5b5050506020604051035194505b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16118015610f4c575073ffffffffffffffffffffffffffffffffffffffff8581166000908152600260205260409020541615155b8015610f6f575073ffffffffffffffffffffffffffffffffffffffff8516600114155b610fd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323600000000000000000000000000000000000000000000000000000060448201526064016107ad565b93945084936001016109b2565b50505050505050505050565b6000600173ffffffffffffffffffffffffffffffffffffffff83161480159061103d575073ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020541615155b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821660011480159061103d57505073ffffffffffffffffffffffffffffffffffffffff90811660009081526002602052604090205416151590565b6000336001148015906110cc57503360009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1615155b611132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b61115f858585857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612be4565b905080156111975760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a26111c3565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b600060606111db86868686611095565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b60606000611210836020613e07565b67ffffffffffffffff81111561122857611228613577565b6040519080825280601f01601f191660200182016040528015611252576020820181803683370190505b50905060005b838110156112755784810154602080830284010152600101611258565b509392505050565b611285612b21565b73ffffffffffffffffffffffffffffffffffffffff8116158015906112c1575073ffffffffffffffffffffffffffffffffffffffff8116600114155b611327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526001602052604090205416156113b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805473ffffffffffffffffffffffffffffffffffffffff848116600081815260408082208054949095167fffffffffffffffffffffffff000000000000000000000000000000000000000094851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b61146e612b21565b6003548111156114da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001811015611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b600080600061159a8e8e8e8e8e8e8e8e8e8e6005546126a9565b6005805491925060006115ac83613d4f565b90915550508051602082012091506115c582828661197c565b5060006115f07f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b905073ffffffffffffffffffffffffffffffffffffffff811615611690578073ffffffffffffffffffffffffffffffffffffffff166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b815260040161165d9c9b9a99989796959493929190613e88565b600060405180830381600087803b15801561167757600080fd5b505af115801561168b573d6000803e3d6000fd5b505050505b6116bc61169f8a6109c4613f9e565b603f6116ac8c6040613e07565b6116b69190613fb1565b90612c2b565b6116c8906101f4613f9e565b5a1015611731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313000000000000000000000000000000000000000000000000000000060448201526064016107ad565b60005a90506117a28f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c60001461178f578e612be4565b6109c45a61179d9190613fec565b612be4565b93506117af5a8290612c42565b905083806117bc57508915155b806117c657508715155b61182c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313300000000000000000000000000000000000000000000000000000060448201526064016107ad565b6000881561184457611841828b8b8b8b612c5d565b90505b841561188957837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e8260405161187c91815260200190565b60405180910390a26118c4565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d23826040516118bb91815260200190565b60405180910390a25b505073ffffffffffffffffffffffffffffffffffffffff81161561196b576040517f9327136800000000000000000000000000000000000000000000000000000000815260048101839052831515602482015273ffffffffffffffffffffffffffffffffffffffff821690639327136890604401600060405180830381600087803b15801561195257600080fd5b505af1158015611966573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b600454806119e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6119f284848484610933565b50505050565b6060600060035467ffffffffffffffff811115611a1757611a17613577565b604051908082528060200260200182016040528015611a40578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0549192509073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff8116600114611b085780838381518110611abb57611abb613fff565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152918116600090815260029092526040909120541681611b0081613d4f565b925050611a8a565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611b718a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612dee915050565b73ffffffffffffffffffffffffffffffffffffffff841615611b9657611b96846131b1565b611bd68787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061325492505050565b8115611bed57611beb82600060018685612c5d565b505b3373ffffffffffffffffffffffffffffffffffffffff167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611c3b95949392919061402e565b60405180910390a250505050505050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff841660011480611c7c5750611c7c84610fee565b611ce2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b60008311611d4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303600000000000000000000000000000000000000000000000000000060448201526064016107ad565b8267ffffffffffffffff811115611d6557611d65613577565b604051908082528060200260200182016040528015611d8e578160200160208202803683370190505b5073ffffffffffffffffffffffffffffffffffffffff808616600090815260016020526040812054929450911691505b73ffffffffffffffffffffffffffffffffffffffff821615801590611dfa575073ffffffffffffffffffffffffffffffffffffffff8216600114155b8015611e0557508381105b15611e6d5781838281518110611e1d57611e1d613fff565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152928116600090815260019093526040909220549091169080611e6581613d4f565b915050611dbe565b73ffffffffffffffffffffffffffffffffffffffff8216600114611eb25782611e97600183613fec565b81518110611ea757611ea7613fff565b602002602001015191505b808352509250929050565b3360009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16611f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330333000000000000000000000000000000000000000000000000000000060448201526064016107ad565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611fa68c8c8c8c8c8c8c8c8c8c8c6126a9565b8051906020012090509b9a5050505050505050505050565b611fc6612b21565b73ffffffffffffffffffffffffffffffffffffffff811615801590612002575073ffffffffffffffffffffffffffffffffffffffff8116600114155b612068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020548116908216146120fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260016020526040808220805487861684528284208054919096167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b612198612b21565b73ffffffffffffffffffffffffffffffffffffffff8116156122c8576040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fe6d7a83a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa15801561223e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226291906140b4565b6122c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475333303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c881815560405173ffffffffffffffffffffffffffffffffffffffff8316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b612339612b21565b73ffffffffffffffffffffffffffffffffffffffff811615801590612375575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015612397575073ffffffffffffffffffffffffffffffffffffffff81163014155b6123fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260026020526040902054161561248c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8216158015906124c8575073ffffffffffffffffffffffffffffffffffffffff8216600114155b61252e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260205260409020548116908316146125c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805486861680855283852080549288167fffffffffffffffffffffffff00000000000000000000000000000000000000009384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a260405173ffffffffffffffffffffffffffffffffffffffff8216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d6040516126e39291906140d6565b604051908190038120612709949392918e908e908e908e908e908e908e906020016140e6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012090507f19000000000000000000000000000000000000000000000000000000000000007f01000000000000000000000000000000000000000000000000000000000000006127dd60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff0000000000000000000000000000000000000000000000000000000000000093841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b61284a612b21565b612853816131b1565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b61289f612b21565b8060016003546128af9190613fec565b1015612917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff821615801590612953575073ffffffffffffffffffffffffffffffffffffffff8216600114155b6129b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff838116600090815260026020526040902054811690831614612a4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805488861684529183208054929095167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790945591815282549091169091556003805491612ac483614163565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a28060045414612b1c57612b1c81611466565b505050565b333014612b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330333100000000000000000000000000000000000000000000000000000060448201526064016107ad565b565b600082600003612b9e5750600061103d565b6000612baa8385613e07565b905082612bb78583613fb1565b14612bc157600080fd5b9392505050565b600080612bd58385613f9e565b905083811015612bc157600080fd5b60006001836001811115612bfa57612bfa613e1e565b03612c12576000808551602087018986f49050612c22565b600080855160208701888a87f190505b95945050505050565b600081831015612c3b5781612bc1565b5090919050565b600082821115612c5157600080fd5b60006111c38385613fec565b60008073ffffffffffffffffffffffffffffffffffffffff831615612c825782612c84565b325b905073ffffffffffffffffffffffffffffffffffffffff8416612d6357612cc33a8610612cb1573a612cb3565b855b612cbd8989612bc8565b90612b8c565b60405190925073ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f19350505050612d5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313100000000000000000000000000000000000000000000000000000060448201526064016107ad565b612de4565b612d7185612cbd8989612bc8565b9150612d7e84828461344c565b612de4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313200000000000000000000000000000000000000000000000000000060448201526064016107ad565b5095945050505050565b60045415612e58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b8151811115612ec3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001811015612f2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b600160005b8351811015613159576000848281518110612f5057612f50613fff565b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015612fae575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015612fd0575073ffffffffffffffffffffffffffffffffffffffff81163014155b801561300857508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61306e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526002602052604090205416156130fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff928316600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001693821693909317909255600101612f33565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001660011790559051600355600455565b3073ffffffffffffffffffffffffffffffffffffffff821603613230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475334303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5473ffffffffffffffffffffffffffffffffffffffff16156132fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80547fffffffffffffffffffffffff000000000000000000000000000000000000000016909117905573ffffffffffffffffffffffffffffffffffffffff82161561092f57813b6133d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b6133e68260008360015a612be4565b61092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6040805173ffffffffffffffffffffffffffffffffffffffff841660248201526044808201849052825180830390910181526064909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781528251600093929184919082896127105a03f13d80156134f95760208114613501576000935061350c565b81935061350c565b600051158215171593505b5050509392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461353857600080fd5b50565b803561354681613516565b919050565b6000806040838503121561355e57600080fd5b823561356981613516565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126135b757600080fd5b813567ffffffffffffffff808211156135d2576135d2613577565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561361857613618613577565b8160405283815286602085880101111561363157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561366757600080fd5b84359350602085013567ffffffffffffffff8082111561368657600080fd5b613692888389016135a6565b945060408701359150808211156136a857600080fd5b506136b5878288016135a6565b949793965093946060013593505050565b6000602082840312156136d857600080fd5b8135612bc181613516565b80356002811061354657600080fd5b6000806000806080858703121561370857600080fd5b843561371381613516565b935060208501359250604085013567ffffffffffffffff81111561373657600080fd5b613742878288016135a6565b925050613751606086016136e3565b905092959194509250565b6000815180845260005b8181101561378257602081850181015186830182015201613766565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b82151581526040602082015260006111c3604083018461375c565b600080604083850312156137ee57600080fd5b50508035926020909101359150565b602081526000612bc1602083018461375c565b60006020828403121561382257600080fd5b5035919050565b60008083601f84011261383b57600080fd5b50813567ffffffffffffffff81111561385357600080fd5b60208301915083602082850101111561386b57600080fd5b9250929050565b60008060008060008060008060008060006101408c8e03121561389457600080fd5b61389d8c61353b565b9a5060208c0135995067ffffffffffffffff8060408e013511156138c057600080fd5b6138d08e60408f01358f01613829565b909a5098506138e160608e016136e3565b975060808d0135965060a08d0135955060c08d0135945061390460e08e0161353b565b93506139136101008e0161353b565b9250806101208e0135111561392757600080fd5b506139398d6101208e01358e016135a6565b90509295989b509295989b9093969950565b60008060006060848603121561396057600080fd5b83359250602084013567ffffffffffffffff8082111561397f57600080fd5b61398b878388016135a6565b935060408601359150808211156139a157600080fd5b506139ae868287016135a6565b9150509250925092565b60008151808452602080850194506020840160005b838110156139ff57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016139cd565b509495945050505050565b602081526000612bc160208301846139b8565b60008060408385031215613a3057600080fd5b8235613a3b81613516565b9150602083013567ffffffffffffffff811115613a5757600080fd5b613a63858286016135a6565b9150509250929050565b6000806000806000806000806000806101008b8d031215613a8d57600080fd5b8a3567ffffffffffffffff80821115613aa557600080fd5b818d0191508d601f830112613ab957600080fd5b813581811115613ac857600080fd5b8e60208260051b8501011115613add57600080fd5b60208381019d50909b508d01359950613af860408e0161353b565b985060608d0135915080821115613b0e57600080fd5b50613b1b8d828e01613829565b9097509550613b2e905060808c0161353b565b9350613b3c60a08c0161353b565b925060c08b01359150613b5160e08c0161353b565b90509295989b9194979a5092959850565b604081526000613b7560408301856139b8565b905073ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b60008060008060008060008060008060006101408c8e031215613bbc57600080fd5b8b35613bc781613516565b9a5060208c0135995060408c013567ffffffffffffffff811115613bea57600080fd5b613bf68e828f01613829565b909a509850613c09905060608d016136e3565b965060808c0135955060a08c0135945060c08c0135935060e08c0135613c2e81613516565b92506101008c0135613c3f81613516565b809250506101208c013590509295989b509295989b9093969950565b60008060408385031215613c6e57600080fd5b8235613c7981613516565b91506020830135613c8981613516565b809150509250929050565b600080600060608486031215613ca957600080fd5b8335613cb481613516565b92506020840135613cc481613516565b91506040840135613cd481613516565b809150509250925092565b600080600060608486031215613cf457600080fd5b8335613cff81613516565b92506020840135613d0f81613516565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613d8057613d80613d20565b5060010190565b604081526000613d9a604083018561375c565b8281036020840152612c22818561375c565b600060208284031215613dbe57600080fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114612bc157600080fd5b60ff828116828216039081111561103d5761103d613d20565b808202811582820484141761103d5761103d613d20565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110613e84577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600061016073ffffffffffffffffffffffffffffffffffffffff8f1683528d60208401528060408401528b81840152506101808b8d828501376000818d850101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8d01168301613efe606085018d613e4d565b8a60808501528960a08501528860c0850152613f3260e085018973ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff87166101008501528184820301610120850152613f668282018761375c565b92505050613f8d61014083018473ffffffffffffffffffffffffffffffffffffffff169052565b9d9c50505050505050505050505050565b8082018082111561103d5761103d613d20565b600082613fe7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561103d5761103d613d20565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6080808252810185905260008660a08301825b8881101561407e57823561405481613516565b73ffffffffffffffffffffffffffffffffffffffff16825260209283019290910190600101614041565b506020840196909652505073ffffffffffffffffffffffffffffffffffffffff9283166040820152911660609091015292915050565b6000602082840312156140c657600080fd5b81518015158114612bc157600080fd5b8183823760009101908152919050565b6000610160820190508c825273ffffffffffffffffffffffffffffffffffffffff808d1660208401528b60408401528a6060840152614128608084018b613e4d565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b60008161417257614172613d20565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c6343000819000a","sourceMap":"1919:19946:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:35:38;;563:9;160:25:123;;551:10:38;;538:35;;148:2:123;133:18;538:35:38;;;;;;;1919:19946:31;;;;;;;;;;;-1:-1:-1;479:66:33;3341:11;;;3365:63;;3402:12;3365:63;3460:14;3457:1;3454;3441:34;3697:8;3693:2;3689:17;3673:14;3666:41;3855:1;3852;3847:2;3831:14;3827:23;3824:1;3821;3812:7;3805:5;3800:57;3785:72;;3891:16;3888:1;3885;3870:38;3931:7;3921:78;;3968:16;3965:1;3958:27;3921:78;;4022:16;4019:1;4012:27;2399:625:36;;;;;;;;;;-1:-1:-1;2399:625:36;;;;;:::i;:::-;;:::i;:::-;;13892:3837:31;;;;;;;;;;-1:-1:-1;13892:3837:31;;;;;:::i;:::-;;:::i;5772:151:35:-;;;;;;;;;;-1:-1:-1;5772:151:35;;;;;:::i;:::-;;:::i;:::-;;;2883:14:123;;2876:22;2858:41;;2846:2;2831:18;5772:151:35;;;;;;;;6140:138:36;;;;;;;;;;-1:-1:-1;6140:138:36;;;;;:::i;:::-;;:::i;18522:211:31:-;;;;;;;;;;-1:-1:-1;18689:9:31;18522:211;;;160:25:123;;;148:2;133:18;18522:211:31;14:177:123;3614:594:35;;;;;;;;;;-1:-1:-1;3614:594:35;;;;;:::i;:::-;;:::i;4699:959::-;;;;;;;;;;-1:-1:-1;4699:959:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;785:464:43:-;;;;;;;;;;-1:-1:-1;785:464:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3360:49:31:-;;;;;;;;;;-1:-1:-1;3360:49:31;;;;;:::i;:::-;;;;;;;;;;;;;;1993:426:35;;;;;;;;;;-1:-1:-1;1993:426:35;;;;;:::i;:::-;;:::i;5398:360:36:-;;;;;;;;;;-1:-1:-1;5398:360:36;;;;;:::i;:::-;;:::i;7433:3556:31:-;;;;;;:::i;:::-;;:::i;3521:69::-;;;;;;;;;;-1:-1:-1;3521:69:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12858:353;;;;;;;;;;-1:-1:-1;12858:353:31;;;;;:::i;:::-;;:::i;6383:437:36:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3188:20:31:-;;;;;;;;;;;;;;;;1882:486:43;;;;;;;;;;-1:-1:-1;1882:486:43;;;;;:::i;:::-;;:::i;4740:1151:31:-;;;;;;;;;;-1:-1:-1;4740:1151:31;;;;;:::i;:::-;;:::i;6429:1535:35:-;;;;;;;;;;-1:-1:-1;6429:1535:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;18133:228:31:-;;;;;;;;;;-1:-1:-1;18133:228:31;;;;;:::i;:::-;;:::i;21385:478::-;;;;;;;;;;-1:-1:-1;21385:478:31;;;;;:::i;:::-;;:::i;2669:423:35:-;;;;;;;;;;-1:-1:-1;2669:423:35;;;;;:::i;:::-;;:::i;1962:386:34:-;;;;;;;;;;-1:-1:-1;1962:386:34;;;;;:::i;:::-;;:::i;4416:796:36:-;;;;;;;;;;-1:-1:-1;4416:796:36;;;;;:::i;:::-;;:::i;5915:87::-;;;;;;;;;;-1:-1:-1;5986:9:36;;5915:87;;19858:822:31;;;;;;;;;;-1:-1:-1;19858:822:31;;;;;:::i;:::-;;:::i;2437:161:33:-;;;;;;;;;;-1:-1:-1;2437:161:33;;;;;:::i;:::-;;:::i;18901:149:31:-;;;;;;;;;;;;18949:7;2402:66;18689:9;18985:57;;;;;;30713:25:123;;;;30754:18;;30747:34;19037:4:31;30797:18:123;;;30790:83;30686:18;;18985:57:31;;;;;;;;;;;;18975:68;;;;;;18968:75;;18901:149;;3380:697:36;;;;;;;;;;-1:-1:-1;3380:697:36;;;;;:::i;:::-;;:::i;2205:40:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:625:36;505:17:40;:15;:17::i;:::-;2575:19:36::1;::::0;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;2598:24:36::1;::::0;::::1;687:3;2598:24;;2575:47;:73;;;;-1:-1:-1::0;2626:22:36::1;::::0;::::1;2643:4;2626:22;;2575:73;2567:91;;;::::0;::::1;::::0;;14204:2:123;2567:91:36::1;::::0;::::1;14186:21:123::0;14243:1;14223:18;;;14216:29;14281:7;14261:18;;;14254:35;14306:18;;2567:91:36::1;;;;;;;;;2716:27;:13:::0;;::::1;2741:1;2716:13:::0;;;:6:::1;:13;::::0;;;;;::::1;:27:::0;2708:45:::1;;;::::0;::::1;::::0;;14537:2:123;2708:45:36::1;::::0;::::1;14519:21:123::0;14576:1;14556:18;;;14549:29;14614:7;14594:18;;;14587:35;14639:18;;2708:45:36::1;14335:328:123::0;2708:45:36::1;2779:6;:23;::::0;;;;::::1;2763:13:::0;;::::1;2779:23;2763:13:::0;;;2779:23;2763:13;;:39;;2779:23;;;::::1;2763:39:::0;;;::::1;;::::0;;;-1:-1:-1;2812:23:36;;:31;;;;::::1;;::::0;;;2853:10:::1;:12:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2880:17:36::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;2978:10;2965:9;;:23;2961:56;;2990:27;3006:10;2990:15;:27::i;:::-;2399:625:::0;;:::o;13892:3837:31:-;14126:26;:18;14149:2;14126:22;:26::i;:::-;14105:10;:17;:47;;14097:65;;;;;;;15259:2:123;14097:65:31;;;15241:21:123;15298:1;15278:18;;;15271:29;15336:7;15316:18;;;15309:35;15361:18;;14097:65:31;15057:328:123;14097:65:31;14224:17;14264:20;14294:7;14311:9;14330;14349;14368:3355;14384:18;14380:1;:22;14368:3355;;;1176:4:41;1172:14;;;1210:40;;1244:4;1210:40;;1204:47;1309:4;1275:40;;1269:47;1627:40;;;;1621:47;1670:4;1617:58;;-1:-1:-1;1204:47:41;;-1:-1:-1;1269:47:41;-1:-1:-1;14487:1:31;14482:6;;;14478:3068;;14516:15;;;;;;:27;;14508:45;;;;;;;15592:2:123;14508:45:31;;;15574:21:123;15631:1;15611:18;;;15604:29;15669:7;15649:18;;;15642:35;15694:18;;14508:45:31;15390:328:123;14508:45:31;14770:1;;-1:-1:-1;14770:1:31;;15175:26;:18;15198:2;15175:22;:26::i;:::-;15161:40;;;15153:58;;;;;;;15925:2:123;15153:58:31;;;15907:21:123;15964:1;15944:18;;;15937:29;16002:7;15982:18;;;15975:35;16027:18;;15153:58:31;15723:328:123;15153:58:31;15373:17;;15351:18;15359:1;15366:2;15351:14;:18::i;:::-;:39;;15343:57;;;;;;;16258:2:123;15343:57:31;;;16240:21:123;16297:1;16277:18;;;16270:29;16335:7;16315:18;;;16308:35;16360:18;;15343:57:31;16056:328:123;15343:57:31;15739:4;15719:18;;;15715:29;;15709:36;15836:17;;15709:36;;15788:44;;15709:36;;15788:18;;15719;;15788:14;:18::i;:::-;:22;;:44::i;:::-;:65;;15780:83;;;;;;;16591:2:123;15780:83:31;;;16573:21:123;16630:1;16610:18;;;16603:29;16668:7;16648:18;;;16641:35;16693:18;;15780:83:31;16389:328:123;15780:83:31;16292:75;;16371:19;16292:75;;;16224:18;;;16244:4;16220:29;;16292:50;;;;223:10:49;;16292:75:31;;16343:4;;16220:29;;16292:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:98;;;16284:116;;;;;;;17647:2:123;16284:116:31;;;17629:21:123;17686:1;17666:18;;;17659:29;17724:7;17704:18;;;17697:35;17749:18;;16284:116:31;17445:328:123;16284:116:31;14490:1925;;14478:3068;;;16425:1;:6;;16430:1;16425:6;16421:1125;;16642:1;;-1:-1:-1;16642:1:31;;16817:10;:26;;;;;:73;;-1:-1:-1;16847:28:31;;;;;;;:14;:28;;;;;;;;:38;;;;;;;;;:43;;16817:73;16809:91;;;;;;;17980:2:123;16809:91:31;;;17962:21:123;18019:1;17999:18;;;17992:29;18057:7;18037:18;;;18030:35;18082:18;;16809:91:31;17778:328:123;16809:91:31;16421:1125;;;16929:2;16925:1;:6;;;16921:625;;;17222:62;;18353:66:123;17222:62:31;;;18341:79:123;18436:12;;;18429:28;;;17202:97:31;;18473:12:123;;17222:62:31;;;;;;;;;;;;17212:73;;;;;;17291:1;17287;:5;;;;:::i;:::-;17202:97;;;;;;;;;;;;18879:25:123;;;;18952:4;18940:17;;;18920:18;;;18913:45;18974:18;;;18967:34;;;19017:18;;;19010:34;;;18851:19;;17202:97:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17187:112;;16921:625;;;17503:28;;;;;;;;;;;;18879:25:123;;;18952:4;18940:17;;18920:18;;;18913:45;;;;18974:18;;;18967:34;;;19017:18;;;19010:34;;;17503:28:31;;18851:19:123;;17503:28:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17488:43;;16921:625;17582:9;17567:24;;:12;:24;;;:62;;;;-1:-1:-1;17595:34:31;:20;;;17627:1;17595:20;;;:6;:20;;;;;;;:34;;17567:62;:97;;;;-1:-1:-1;17633:31:31;;;687:3:36;17633:31:31;;17567:97;17559:115;;;;;;;19257:2:123;17559:115:31;;;19239:21:123;19296:1;19276:18;;;19269:29;19334:7;19314:18;;;19307:35;19359:18;;17559:115:31;19055:328:123;17559:115:31;17700:12;;-1:-1:-1;17700:12:31;;14404:3;;14368:3355;;;14020:3709;;;;;;13892:3837;;;;:::o;5772:151:35:-;5834:4;1005:3;5857:26;;;;;;;:59;;-1:-1:-1;5887:29:35;:15;;;5914:1;5887:15;;;:7;:15;;;;;;;:29;;5857:59;5850:66;5772:151;-1:-1:-1;;5772:151:35:o;6140:138:36:-;6193:4;6216:24;;;687:3;6216:24;;;;:55;;-1:-1:-1;;6244:27:36;:13;;;6269:1;6244:13;;;:6;:13;;;;;;;:27;;;6140:138::o;3614:594:35:-;3783:12;3864:10;1005:3;3864:30;;;;:67;;-1:-1:-1;3906:10:35;3929:1;3898:19;;;:7;:19;;;;;;:33;:19;:33;;3864:67;3856:85;;;;;;;19590:2:123;3856:85:35;;;19572:21:123;19629:1;19609:18;;;19602:29;19667:7;19647:18;;;19640:35;19692:18;;3856:85:35;19388:328:123;3856:85:35;4023:54;4031:2;4035:5;4042:4;4048:9;4059:17;4023:7;:54::i;:::-;4013:64;;4091:7;4087:114;;;4105:38;;4132:10;;4105:38;;;;;4087:114;;;4163:38;;4190:10;;4163:38;;;;;4087:114;3614:594;;;;;;:::o;4699:959::-;4870:12;4884:23;4929:53;4955:2;4959:5;4966:4;4972:9;4929:25;:53::i;:::-;4919:63;;5129:4;5123:11;5371:4;5353:16;5349:27;5344:3;5340:37;5334:4;5327:51;5433:16;5428:3;5421:29;5527:16;5524:1;5517:4;5512:3;5508:14;5493:51;5639:3;5625:17;;;4699:959;;;;;;;:::o;785:464:43:-;860:12;884:19;916:11;:6;925:2;916:11;:::i;:::-;906:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;906:22:43;;884:44;;943:13;938:282;970:6;962:5;:14;938:282;;;1106:18;;;1100:25;1183:4;1172:16;;;1149:40;;;1142:54;978:7;;938:282;;;-1:-1:-1;1236:6:43;785:464;-1:-1:-1;;;785:464:43:o;1993:426:35:-;505:17:40;:15;:17::i;:::-;2121:20:35::1;::::0;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;2145:26:35::1;::::0;::::1;1005:3;2145:26;;2121:50;2113:68;;;::::0;::::1;::::0;;20096:2:123;2113:68:35::1;::::0;::::1;20078:21:123::0;20135:1;20115:18;;;20108:29;20173:7;20153:18;;;20146:35;20198:18;;2113:68:35::1;19894:328:123::0;2113:68:35::1;2240:29;:15:::0;;::::1;2267:1;2240:15:::0;;;:7:::1;:15;::::0;;;;;::::1;:29:::0;2232:47:::1;;;::::0;::::1;::::0;;20429:2:123;2232:47:35::1;::::0;::::1;20411:21:123::0;20468:1;20448:18;;;20441:29;20506:7;20486:18;;;20479:35;20531:18;;2232:47:35::1;20227:328:123::0;2232:47:35::1;2307:7;:25;::::0;;;;;;::::1;2289:15:::0;;::::1;2307:25;2289:15:::0;;;2307:25;2289:15;;;:43;;2307:25;;;::::1;2289:43:::0;;;::::1;;::::0;;;2342:25;;;:34;;;;::::1;::::0;::::1;::::0;;;2391:21;2289:15;;2391:21:::1;::::0;::::1;1993:426:::0;:::o;5398:360:36:-;505:17:40;:15;:17::i;:::-;5562:10:36::1;;5548;:24;;5540:42;;;::::0;::::1;::::0;;20762:2:123;5540:42:36::1;::::0;::::1;20744:21:123::0;20801:1;20781:18;;;20774:29;20839:7;20819:18;;;20812:35;20864:18;;5540:42:36::1;20560:328:123::0;5540:42:36::1;5666:1;5652:10;:15;;5644:33;;;::::0;::::1;::::0;;21095:2:123;5644:33:36::1;::::0;::::1;21077:21:123::0;21134:1;21114:18;;;21107:29;21172:7;21152:18;;;21145:35;21197:18;;5644:33:36::1;20893:328:123::0;5644:33:36::1;5687:9;:22:::0;;;5724:27:::1;::::0;160:25:123;;;5724:27:36::1;::::0;148:2:123;133:18;5724:27:36::1;;;;;;;5398:360:::0;:::o;7433:3556:31:-;7779:12;7803:14;7930:23;7956:388;8031:2;8051:5;8074:4;;8096:9;8123;8182:7;8207:8;8233;8259:14;8325:5;;7956:21;:388::i;:::-;8413:5;:7;;7930:414;;-1:-1:-1;8413:5:31;:7;;;:::i;:::-;;;;-1:-1:-1;;8443:21:31;;;;;;;-1:-1:-1;8478:47:31;8443:21;8453:10;8514;8478:15;:47::i;:::-;7916:620;8545:13;8561:10;1306:66:34;2911:11;;2712:226;8561:10:31;8545:26;-1:-1:-1;8599:19:31;;;;8595:547;;8644:5;8638:29;;;8729:2;8753:5;8780:4;;8806:9;8837;8904:7;8933:8;8963;8993:14;9067:10;9099;8638:489;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8595:547;9456:45;9484:16;:9;9496:4;9484:16;:::i;:::-;9476:2;9458:14;:9;9470:2;9458:14;:::i;:::-;9457:21;;;;:::i;:::-;9456:27;;:45::i;:::-;:51;;9504:3;9456:51;:::i;:::-;9443:9;:64;;9435:82;;;;;;;23761:2:123;9435:82:31;;;23743:21:123;23800:1;23780:18;;;23773:29;23838:7;23818:18;;;23811:35;23863:18;;9435:82:31;23559:328:123;9435:82:31;9630:15;9648:9;9630:27;;9936:83;9944:2;9948:5;9955:4;;9936:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9961:9;9972:8;9984:1;9972:13;:46;;10009:9;9936:7;:83::i;9972:46::-;10001:4;9989:9;:16;;;;:::i;:::-;9936:7;:83::i;:::-;9926:93;;10043:22;10055:9;10043:7;;:11;:22::i;:::-;10033:32;;10349:7;:25;;;-1:-1:-1;10360:14:31;;;10349:25;:42;;;-1:-1:-1;10378:13:31;;;10349:42;10341:60;;;;;;;24227:2:123;10341:60:31;;;24209:21:123;24266:1;24246:18;;;24239:29;24304:7;24284:18;;;24277:35;24329:18;;10341:60:31;24025:328:123;10341:60:31;10550:15;10587:12;;10583:128;;10629:67;10643:7;10652;10661:8;10671;10681:14;10629:13;:67::i;:::-;10619:77;;10583:128;10728:7;10724:108;;;10759:6;10742:33;10767:7;10742:33;;;;160:25:123;;148:2;133:18;;14:177;10742:33:31;;;;;;;;10724:108;;;10816:6;10799:33;10824:7;10799:33;;;;160:25:123;;148:2;133:18;;14:177;10799:33:31;;;;;;;;10724:108;-1:-1:-1;;10870:19:31;;;;10866:107;;10909:49;;;;;;;;24526:25:123;;;24594:14;;24587:22;24567:18;;;24560:50;10909:32:31;;;;;;24499:18:123;;10909:49:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10866:107;7793:3196;;7433:3556;;;;;;;;;;;;;:::o;12858:353::-;13046:9;;13114:14;13106:32;;;;;;;24823:2:123;13106:32:31;;;24805:21:123;24862:1;24842:18;;;24835:29;24900:7;24880:18;;;24873:35;24925:18;;13106:32:31;24621:328:123;13106:32:31;13148:56;13165:8;13175:4;13181:10;13193;13148:16;:56::i;:::-;12957:254;12858:353;;;:::o;6383:437:36:-;6425:16;6453:22;6492:10;;6478:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6478:25:36;-1:-1:-1;687:3:36;6547:13;6597:23;;;:6;:23;;;;6453:50;;-1:-1:-1;6547:13:36;6597:23;;6630:162;6637:31;;;687:3;6637:31;6630:162;;6699:12;6684:5;6690;6684:12;;;;;;;;:::i;:::-;:27;;;;:12;;;;;;;;;;:27;;;;6740:20;;;;;;;:6;:20;;;;;;;;;6774:7;;;;:::i;:::-;;;;6630:162;;;-1:-1:-1;6808:5:36;;6383:437;-1:-1:-1;;6383:437:36:o;1882:486:43:-;2167:1;2164;2146:15;2140:22;2133:4;2116:15;2112:26;2096:14;2089:5;2076:93;2196:7;2190:4;2183:21;;2230:16;2224:4;2217:30;2284:16;2281:1;2275:4;2260:41;2346:4;2328:16;2324:27;2321:1;2314:38;4740:1151:31;5139:32;5151:7;;5139:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5160:10:31;;-1:-1:-1;5139:11:31;;-1:-1:-1;;5139:32:31:i;:::-;5185:29;;;;5181:78;;5216:43;5243:15;5216:26;:43::i;:::-;5394:22;5407:2;5411:4;;5394:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5394:12:31;;-1:-1:-1;;;5394:22:31:i;:::-;5431:11;;5427:380;;5737:59;5751:7;5760:1;5763;5766:12;5780:15;5737:13;:59::i;:::-;;5427:380;5831:10;5821:63;;;5843:7;;5852:10;5864:2;5868:15;5821:63;;;;;;;;;;:::i;:::-;;;;;;;;4740:1151;;;;;;;;;;:::o;6429:1535:35:-;6514:22;6538:12;6570:25;;;1005:3;6570:25;;:51;;;6599:22;6615:5;6599:15;:22::i;:::-;6562:69;;;;;;;26381:2:123;6562:69:35;;;26363:21:123;26420:1;26400:18;;;26393:29;26458:7;26438:18;;;26431:35;26483:18;;6562:69:35;26179:328:123;6562:69:35;6660:1;6649:8;:12;6641:30;;;;;;;26714:2:123;6641:30:35;;;26696:21:123;26753:1;26733:18;;;26726:29;26791:7;26771:18;;;26764:35;26816:18;;6641:30:35;26512:328:123;6641:30:35;6744:8;6730:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6730:23:35;-1:-1:-1;6837:14:35;;;;6797:19;6837:14;;;:7;:14;;;;;;6722:31;;-1:-1:-1;6837:14:35;;;-1:-1:-1;6861:192:35;6868:18;;;;;;;:46;;-1:-1:-1;6890:24:35;;;1005:3;6890:24;;6868:46;:72;;;;;6932:8;6918:11;:22;6868:72;6861:192;;;6977:4;6956:5;6962:11;6956:18;;;;;;;;:::i;:::-;:25;;;;:18;;;;;;;;;;:25;;;;7002:13;;;;;;;:7;:13;;;;;;;;;;;;7029;;;;:::i;:::-;;;;6861:192;;;7708:24;;;1005:3;7708:24;7704:84;;7755:5;7761:15;7775:1;7761:11;:15;:::i;:::-;7755:22;;;;;;;;:::i;:::-;;;;;;;7748:29;;7704:84;7936:11;7929:5;7922:26;7908:50;6429:1535;;;;;:::o;18133:228:31:-;18211:10;18234:1;18204:18;;;:6;:18;;;;;;:32;:18;18196:50;;;;;;;27047:2:123;18196:50:31;;;27029:21:123;27086:1;27066:18;;;27059:29;27124:7;27104:18;;;27097:35;27149:18;;18196:50:31;26845:328:123;18196:50:31;18271:10;18256:26;;;;:14;:26;;;;;;;;:41;;;;;;;;;18300:1;18256:45;;18316:38;18283:13;;18316:38;;;18133:228;:::o;21385:478::-;21706:7;21742:113;21764:2;21768:5;21775:4;;21781:9;21792;21803:7;21812:8;21822;21832:14;21848:6;21742:21;:113::i;:::-;21732:124;;;;;;21725:131;;21385:478;;;;;;;;;;;;;:::o;2669:423:35:-;505:17:40;:15;:17::i;:::-;2846:20:35::1;::::0;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;2870:26:35::1;::::0;::::1;1005:3;2870:26;;2846:50;2838:68;;;::::0;::::1;::::0;;20096:2:123;2838:68:35::1;::::0;::::1;20078:21:123::0;20135:1;20115:18;;;20108:29;20173:7;20153:18;;;20146:35;20198:18;;2838:68:35::1;19894:328:123::0;2838:68:35::1;2924:29;:19:::0;;::::1;;::::0;;;:7:::1;:19;::::0;;;;;;::::1;:29:::0;;::::1;;2916:47;;;::::0;::::1;::::0;;27380:2:123;2916:47:35::1;::::0;::::1;27362:21:123::0;27419:1;27399:18;;;27392:29;27457:7;27437:18;;;27430:35;27482:18;;2916:47:35::1;27178:328:123::0;2916:47:35::1;2995:15;::::0;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;2973:19;;::::1;::::0;;;;;:37;;2995:15;;;::::1;2973:37:::0;;;::::1;;::::0;;;3020:15;;;:28;;;;::::1;::::0;;;3063:22;;2995:15;;3063:22:::1;::::0;::::1;2669:423:::0;;:::o;1962:386:34:-;505:17:40;:15;:17::i;:::-;2029:19:34::1;::::0;::::1;::::0;2025:123:::1;;2072:55;::::0;;;;2103:23:::1;2072:55;::::0;::::1;27655:98:123::0;2072:30:34::1;::::0;::::1;::::0;::::1;::::0;27628:18:123;;2072:55:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2064:73;;;::::0;::::1;::::0;;28248:2:123;2064:73:34::1;::::0;::::1;28230:21:123::0;28287:1;28267:18;;;28260:29;28325:7;28305:18;;;28298:35;28350:18;;2064:73:34::1;28046:328:123::0;2064:73:34::1;1306:66;2279:19:::0;;;2322::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;2157:12:::1;::::0;2322:19:::1;2015:333;1962:386:::0;:::o;4416:796:36:-;505:17:40;:15;:17::i;:::-;4600:22:36::1;::::0;::::1;::::0;;::::1;::::0;:53:::1;;-1:-1:-1::0;4626:27:36::1;::::0;::::1;687:3;4626:27;;4600:53;:82;;;;-1:-1:-1::0;4657:25:36::1;::::0;::::1;4677:4;4657:25;;4600:82;4592:100;;;::::0;::::1;::::0;;14204:2:123;4592:100:36::1;::::0;::::1;14186:21:123::0;14243:1;14223:18;;;14216:29;14281:7;14261:18;;;14254:35;14306:18;;4592:100:36::1;14002:328:123::0;4592:100:36::1;4750:30;:16:::0;;::::1;4778:1;4750:16:::0;;;:6:::1;:16;::::0;;;;;::::1;:30:::0;4742:48:::1;;;::::0;::::1;::::0;;14537:2:123;4742:48:36::1;::::0;::::1;14519:21:123::0;14576:1;14556:18;;;14549:29;14614:7;14594:18;;;14587:35;14639:18;;4742:48:36::1;14335:328:123::0;4742:48:36::1;4891:22;::::0;::::1;::::0;;::::1;::::0;:53:::1;;-1:-1:-1::0;4917:27:36::1;::::0;::::1;687:3;4917:27;;4891:53;4883:71;;;::::0;::::1;::::0;;14204:2:123;4883:71:36::1;::::0;::::1;14186:21:123::0;14243:1;14223:18;;;14216:29;14281:7;14261:18;;;14254:35;14306:18;;4883:71:36::1;14002:328:123::0;4883:71:36::1;4972:29;:17:::0;;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;::::1;:29:::0;;::::1;;4964:47;;;::::0;::::1;::::0;;28581:2:123;4964:47:36::1;::::0;::::1;28563:21:123::0;28620:1;28600:18;;;28593:29;28658:7;28638:18;;;28631:35;28683:18;;4964:47:36::1;28379:328:123::0;4964:47:36::1;5040:16;::::0;;::::1;;::::0;;;:6:::1;:16;::::0;;;;;;;5021;;::::1;::::0;;;;;;:35;;5040:16;;::::1;5021:35:::0;;;::::1;;::::0;;5066:17;;::::1;::::0;;;;;:28;;;::::1;::::0;;::::1;::::0;;;5104:16;;;:29;;;;::::1;::::0;;;5148:22;;5040:16;;5148:22:::1;::::0;::::1;5185:20;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;4416:796:::0;;;:::o;19858:822:31:-;20182:12;20206:18;2725:66;20278:16;;20312:2;20332:5;20365:4;;20355:15;;;;;;;:::i;:::-;;;;;;;;;20250:321;;;;;20388:9;;20415;;20442:7;;20467:8;;20493;;20519:14;;20551:6;;20250:321;;;:::i;:::-;;;;;;;;;;;;;;20227:354;;20250:321;20227:354;;;;;-1:-1:-1;20615:12:31;20629;20643:17;18949:7;2402:66;18689:9;18985:57;;;;;;30713:25:123;;;;30754:18;;30747:34;19037:4:31;30797:18:123;;;30790:83;30686:18;;18985:57:31;;;;;;;;;;;;18975:68;;;;;;18968:75;;18901:149;;20643:17;20598:75;;30229:66:123;30316:15;;;20598:75:31;;;30304:28:123;30361:15;;;;30348:11;;;30341:36;30393:11;;;30386:27;30429:12;;;30422:28;;;30466:12;;20598:75:31;;;;;;;;;;;;20591:82;;;19858:822;;;;;;;;;;;;;:::o;2437:161:33:-;505:17:40;:15;:17::i;:::-;2510:35:33::1;2537:7;2510:26;:35::i;:::-;2560:31;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;2437:161:::0;:::o;3380:697:36:-;505:17:40;:15;:17::i;:::-;3586:10:36::1;3581:1;3568:10;;:14;;;;:::i;:::-;:28;;3560:46;;;::::0;::::1;::::0;;20762:2:123;3560:46:36::1;::::0;::::1;20744:21:123::0;20801:1;20781:18;;;20774:29;20839:7;20819:18;;;20812:35;20864:18;;3560:46:36::1;20560:328:123::0;3560:46:36::1;3704:19;::::0;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;3727:24:36::1;::::0;::::1;687:3;3727:24;;3704:47;3696:65;;;::::0;::::1;::::0;;14204:2:123;3696:65:36::1;::::0;::::1;14186:21:123::0;14243:1;14223:18;;;14216:29;14281:7;14261:18;;;14254:35;14306:18;;3696:65:36::1;14002:328:123::0;3696:65:36::1;3779:26;:17:::0;;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;::::1;:26:::0;;::::1;;3771:44;;;::::0;::::1;::::0;;28581:2:123;3771:44:36::1;::::0;::::1;28563:21:123::0;28620:1;28600:18;;;28593:29;28658:7;28638:18;;;28631:35;28683:18;;3771:44:36::1;28379:328:123::0;3771:44:36::1;3845:13;::::0;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;3825:17;;::::1;::::0;;;;;:33;;3845:13;;;::::1;3825:33:::0;;;::::1;;::::0;;;3868:13;;;:26;;;;::::1;::::0;;;3904:10:::1;:12:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3931:19:36::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;4031:10;4018:9;;:23;4014:56;;4043:27;4059:10;4043:15;:27::i;:::-;3380:697:::0;;;:::o;248:102:40:-;306:10;328:4;306:27;298:45;;;;;;;31287:2:123;298:45:40;;;31269:21:123;31326:1;31306:18;;;31299:29;31364:7;31344:18;;;31337:35;31389:18;;298:45:40;31085:328:123;298:45:40;248:102::o;382:421:44:-;440:7;680:1;685;680:6;676:45;;-1:-1:-1;709:1:44;702:8;;676:45;731:9;743:5;747:1;743;:5;:::i;:::-;731:17;-1:-1:-1;775:1:44;766:5;770:1;731:17;766:5;:::i;:::-;:10;758:19;;;;;;795:1;382:421;-1:-1:-1;;;382:421:44:o;1335:145::-;1393:7;;1424:5;1428:1;1424;:5;:::i;:::-;1412:17;;1452:1;1447;:6;;1439:15;;;;;783:639:32;951:12;992:27;979:9;:40;;;;;;;;:::i;:::-;;975:441;;1190:1;1187;1180:4;1174:11;1167:4;1161;1157:15;1153:2;1146:5;1133:59;1122:70;;975:441;;;1390:1;1387;1380:4;1374:11;1367:4;1361;1357:15;1350:5;1346:2;1339:5;1334:58;1323:69;;975:441;783:639;;;;;;;:::o;1646:105:44:-;1704:7;1735:1;1730;:6;;:14;;1743:1;1730:14;;;-1:-1:-1;1739:1:44;;1723:21;-1:-1:-1;1646:105:44:o;1025:145::-;1083:7;1115:1;1110;:6;;1102:15;;;;;;1127:9;1139:5;1143:1;1139;:5;:::i;11514:821:31:-;11702:15;;11809:28;;;;:66;;11861:14;11809:66;;;11848:9;11809:66;11782:93;-1:-1:-1;11889:22:31;;;11885:444;;12042:73;12078:11;12067:8;:22;:47;;12103:11;12067:47;;;12092:8;12067:47;12042:20;:7;12054;12042:11;:20::i;:::-;:24;;:73::i;:::-;12137:22;;12032:83;;-1:-1:-1;12137:13:31;;;;:22;;;;;12032:83;;12137:22;;;;12032:83;12137:13;:22;;;;;;;12129:40;;;;;;;31620:2:123;12129:40:31;;;31602:21:123;31659:1;31639:18;;;31632:29;31697:7;31677:18;;;31670:35;31722:18;;12129:40:31;31418:328:123;12129:40:31;11885:444;;;12210:34;12235:8;12210:20;:7;12222;12210:11;:20::i;:34::-;12200:44;;12266:42;12280:8;12290;12300:7;12266:13;:42::i;:::-;12258:60;;;;;;;31953:2:123;12258:60:31;;;31935:21:123;31992:1;31972:18;;;31965:29;32030:7;32010:18;;;32003:35;32055:18;;12258:60:31;31751:328:123;12258:60:31;11719:616;11514:821;;;;;;;:::o;1011:1136:36:-;1229:9;;:14;1221:32;;;;;;;32286:2:123;1221:32:36;;;32268:21:123;32325:1;32305:18;;;32298:29;32363:7;32343:18;;;32336:35;32388:18;;1221:32:36;32084:328:123;1221:32:36;1360:7;:14;1346:10;:28;;1338:46;;;;;;;20762:2:123;1338:46:36;;;20744:21:123;20801:1;20781:18;;;20774:29;20839:7;20819:18;;;20812:35;20864:18;;1338:46:36;20560:328:123;1338:46:36;1468:1;1454:10;:15;;1446:33;;;;;;;21095:2:123;1446:33:36;;;21077:21:123;21134:1;21114:18;;;21107:29;21172:7;21152:18;;;21145:35;21197:18;;1446:33:36;20893:328:123;1446:33:36;687:3;1526:20;1574:450;1598:7;:14;1594:1;:18;1574:450;;;1678:13;1694:7;1702:1;1694:10;;;;;;;;:::i;:::-;;;;;;;1678:26;;1743:1;1726:19;;:5;:19;;;;:47;;;;-1:-1:-1;1749:24:36;;;687:3;1749:24;;1726:47;:73;;;;-1:-1:-1;1777:22:36;;;1794:4;1777:22;;1726:73;:98;;;;;1819:5;1803:21;;:12;:21;;;;1726:98;1718:116;;;;;;;14204:2:123;1718:116:36;;;14186:21:123;14243:1;14223:18;;;14216:29;14281:7;14261:18;;;14254:35;14306:18;;1718:116:36;14002:328:123;1718:116:36;1900:27;:13;;;1925:1;1900:13;;;:6;:13;;;;;;;:27;1892:45;;;;;;;14537:2:123;1892:45:36;;;14519:21:123;14576:1;14556:18;;;14549:29;14614:7;14594:18;;;14587:35;14639:18;;1892:45:36;14335:328:123;1892:45:36;1951:20;;;;;;;;:6;:20;;;;;:28;;;;;;;;;;;;;;-1:-1:-1;1614:3:36;1574:450;;;-1:-1:-1;2033:20:36;;;;;;:6;:20;;;;;:38;;;;687:3;2033:38;;;2094:14;;2081:10;:27;2118:9;:22;1011:1136::o;689:1423:33:-;1916:4;1897:24;;;;1889:42;;;;;;;32619:2:123;1889:42:33;;;32601:21:123;32658:1;32638:18;;;32631:29;32696:7;32676:18;;;32669:35;32721:18;;1889:42:33;32417:328:123;1889:42:33;479:66;2075:21;689:1423::o;1367:442:35:-;1447:7;1484:1;1447:25;;;;;;;:39;:25;:39;1439:57;;;;;;;32952:2:123;1439:57:35;;;32934:21:123;32991:1;32971:18;;;32964:29;33029:7;33009:18;;;33002:35;33054:18;;1439:57:35;32750:328:123;1439:57:35;1005:3;1506:25;;;;;;;;;:44;;;;;;;;;:25;1564:16;;;1560:243;;8454:20;;1596:32;;;;;;;33285:2:123;1596:32:35;;;33267:21:123;33324:1;33304:18;;;33297:29;33362:7;33342:18;;;33335:35;33387:18;;1596:32:35;33083:328:123;1596:32:35;1722:60;1730:2;1734:1;1737:4;1743:27;1772:9;1722:7;:60::i;:::-;1714:78;;;;;;;33618:2:123;1714:78:35;;;33600:21:123;33657:1;33637:18;;;33630:29;33695:7;33675:18;;;33668:35;33720:18;;1714:78:35;33416:328:123;763:904:39;962:52;;;33953:42:123;33941:55;;962:52:39;;;33923:74:123;34013:18;;;;34006:34;;;962:52:39;;;;;;;;;;33896:18:123;;;;962:52:39;;;;;;;;;;;;;;;1336:11;;-1:-1:-1;;962:52:39;;-1:-1:-1;;1336:11:39;-1:-1:-1;1309:5:39;1301;1294;1290:17;1285:72;1377:16;1406:61;;;;1485:4;1480:102;;;;1636:1;1621:16;;1370:281;;1406:61;1446:7;1431:22;;1406:61;;1480:102;1563:1;1557:8;1550:16;1540:7;1533:15;1530:37;1523:45;1508:60;;1370:281;;;1089:572;763:904;;;;;:::o;196:154:123:-;282:42;275:5;271:54;264:5;261:65;251:93;;340:1;337;330:12;251:93;196:154;:::o;355:134::-;423:20;;452:31;423:20;452:31;:::i;:::-;355:134;;;:::o;494:315::-;562:6;570;623:2;611:9;602:7;598:23;594:32;591:52;;;639:1;636;629:12;591:52;678:9;665:23;697:31;722:5;697:31;:::i;:::-;747:5;799:2;784:18;;;;771:32;;-1:-1:-1;;;494:315:123:o;814:184::-;866:77;863:1;856:88;963:4;960:1;953:15;987:4;984:1;977:15;1003:777;1045:5;1098:3;1091:4;1083:6;1079:17;1075:27;1065:55;;1116:1;1113;1106:12;1065:55;1152:6;1139:20;1178:18;1215:2;1211;1208:10;1205:36;;;1221:18;;:::i;:::-;1355:2;1349:9;1417:4;1409:13;;1260:66;1405:22;;;1429:2;1401:31;1397:40;1385:53;;;1453:18;;;1473:22;;;1450:46;1447:72;;;1499:18;;:::i;:::-;1539:10;1535:2;1528:22;1574:2;1566:6;1559:18;1620:3;1613:4;1608:2;1600:6;1596:15;1592:26;1589:35;1586:55;;;1637:1;1634;1627:12;1586:55;1701:2;1694:4;1686:6;1682:17;1675:4;1667:6;1663:17;1650:54;1748:1;1741:4;1736:2;1728:6;1724:15;1720:26;1713:37;1768:6;1759:15;;;;;;1003:777;;;;:::o;1785:676::-;1889:6;1897;1905;1913;1966:3;1954:9;1945:7;1941:23;1937:33;1934:53;;;1983:1;1980;1973:12;1934:53;2019:9;2006:23;1996:33;;2080:2;2069:9;2065:18;2052:32;2103:18;2144:2;2136:6;2133:14;2130:34;;;2160:1;2157;2150:12;2130:34;2183:49;2224:7;2215:6;2204:9;2200:22;2183:49;:::i;:::-;2173:59;;2285:2;2274:9;2270:18;2257:32;2241:48;;2314:2;2304:8;2301:16;2298:36;;;2330:1;2327;2320:12;2298:36;;2353:51;2396:7;2385:8;2374:9;2370:24;2353:51;:::i;:::-;1785:676;;;;-1:-1:-1;2343:61:123;;2451:2;2436:18;2423:32;;-1:-1:-1;;;1785:676:123:o;2466:247::-;2525:6;2578:2;2566:9;2557:7;2553:23;2549:32;2546:52;;;2594:1;2591;2584:12;2546:52;2633:9;2620:23;2652:31;2677:5;2652:31;:::i;2910:150::-;2985:20;;3034:1;3024:12;;3014:40;;3050:1;3047;3040:12;3065:620;3175:6;3183;3191;3199;3252:3;3240:9;3231:7;3227:23;3223:33;3220:53;;;3269:1;3266;3259:12;3220:53;3308:9;3295:23;3327:31;3352:5;3327:31;:::i;:::-;3377:5;-1:-1:-1;3429:2:123;3414:18;;3401:32;;-1:-1:-1;3484:2:123;3469:18;;3456:32;3511:18;3500:30;;3497:50;;;3543:1;3540;3533:12;3497:50;3566:49;3607:7;3598:6;3587:9;3583:22;3566:49;:::i;:::-;3556:59;;;3634:45;3675:2;3664:9;3660:18;3634:45;:::i;:::-;3624:55;;3065:620;;;;;;;:::o;3690:481::-;3731:3;3769:5;3763:12;3796:6;3791:3;3784:19;3821:1;3831:162;3845:6;3842:1;3839:13;3831:162;;;3907:4;3963:13;;;3959:22;;3953:29;3935:11;;;3931:20;;3924:59;3860:12;3831:162;;;3835:3;4038:1;4031:4;4022:6;4017:3;4013:16;4009:27;4002:38;4160:4;4090:66;4085:2;4077:6;4073:15;4069:88;4064:3;4060:98;4056:109;4049:116;;;3690:481;;;;:::o;4176:298::-;4359:6;4352:14;4345:22;4334:9;4327:41;4404:2;4399;4388:9;4384:18;4377:30;4308:4;4424:44;4464:2;4453:9;4449:18;4441:6;4424:44;:::i;4479:248::-;4547:6;4555;4608:2;4596:9;4587:7;4583:23;4579:32;4576:52;;;4624:1;4621;4614:12;4576:52;-1:-1:-1;;4647:23:123;;;4717:2;4702:18;;;4689:32;;-1:-1:-1;4479:248:123:o;4732:217::-;4879:2;4868:9;4861:21;4842:4;4899:44;4939:2;4928:9;4924:18;4916:6;4899:44;:::i;4954:180::-;5013:6;5066:2;5054:9;5045:7;5041:23;5037:32;5034:52;;;5082:1;5079;5072:12;5034:52;-1:-1:-1;5105:23:123;;4954:180;-1:-1:-1;4954:180:123:o;5324:347::-;5375:8;5385:6;5439:3;5432:4;5424:6;5420:17;5416:27;5406:55;;5457:1;5454;5447:12;5406:55;-1:-1:-1;5480:20:123;;5523:18;5512:30;;5509:50;;;5555:1;5552;5545:12;5509:50;5592:4;5584:6;5580:17;5568:29;;5644:3;5637:4;5628:6;5620;5616:19;5612:30;5609:39;5606:59;;;5661:1;5658;5651:12;5606:59;5324:347;;;;;:::o;5676:1224::-;5859:6;5867;5875;5883;5891;5899;5907;5915;5923;5931;5939:7;5993:3;5981:9;5972:7;5968:23;5964:33;5961:53;;;6010:1;6007;6000:12;5961:53;6033:29;6052:9;6033:29;:::i;:::-;6023:39;;6109:2;6098:9;6094:18;6081:32;6071:42;;6132:18;6199:2;6193;6182:9;6178:18;6165:32;6162:40;6159:60;;;6215:1;6212;6205:12;6159:60;6254:84;6330:7;6323:2;6312:9;6308:18;6295:32;6284:9;6280:48;6254:84;:::i;:::-;6357:8;;-1:-1:-1;6384:8:123;-1:-1:-1;6411:45:123;6452:2;6437:18;;6411:45;:::i;:::-;6401:55;;6503:3;6492:9;6488:19;6475:33;6465:43;;6555:3;6544:9;6540:19;6527:33;6517:43;;6607:3;6596:9;6592:19;6579:33;6569:43;;6631:39;6665:3;6654:9;6650:19;6631:39;:::i;:::-;6621:49;;6689:39;6723:3;6712:9;6708:19;6689:39;:::i;:::-;6679:49;;6778:2;6771:3;6760:9;6756:19;6743:33;6740:41;6737:61;;;6794:1;6791;6784:12;6737:61;;6818:76;6886:7;6878:3;6867:9;6863:19;6850:33;6839:9;6835:49;6818:76;:::i;:::-;6807:87;;5676:1224;;;;;;;;;;;;;;:::o;7225:607::-;7320:6;7328;7336;7389:2;7377:9;7368:7;7364:23;7360:32;7357:52;;;7405:1;7402;7395:12;7357:52;7441:9;7428:23;7418:33;;7502:2;7491:9;7487:18;7474:32;7525:18;7566:2;7558:6;7555:14;7552:34;;;7582:1;7579;7572:12;7552:34;7605:49;7646:7;7637:6;7626:9;7622:22;7605:49;:::i;:::-;7595:59;;7707:2;7696:9;7692:18;7679:32;7663:48;;7736:2;7726:8;7723:16;7720:36;;;7752:1;7749;7742:12;7720:36;;7775:51;7818:7;7807:8;7796:9;7792:24;7775:51;:::i;:::-;7765:61;;;7225:607;;;;;:::o;7969:488::-;8022:3;8060:5;8054:12;8087:6;8082:3;8075:19;8113:4;8142;8137:3;8133:14;8126:21;;8181:4;8174:5;8170:16;8204:1;8214:218;8228:6;8225:1;8222:13;8214:218;;;8293:13;;8308:42;8289:62;8277:75;;8372:12;;;;8407:15;;;;8250:1;8243:9;8214:218;;;-1:-1:-1;8448:3:123;;7969:488;-1:-1:-1;;;;;7969:488:123:o;8462:261::-;8641:2;8630:9;8623:21;8604:4;8661:56;8713:2;8702:9;8698:18;8690:6;8661:56;:::i;8728:455::-;8805:6;8813;8866:2;8854:9;8845:7;8841:23;8837:32;8834:52;;;8882:1;8879;8872:12;8834:52;8921:9;8908:23;8940:31;8965:5;8940:31;:::i;:::-;8990:5;-1:-1:-1;9046:2:123;9031:18;;9018:32;9073:18;9062:30;;9059:50;;;9105:1;9102;9095:12;9059:50;9128:49;9169:7;9160:6;9149:9;9145:22;9128:49;:::i;:::-;9118:59;;;8728:455;;;;;:::o;9188:1353::-;9356:6;9364;9372;9380;9388;9396;9404;9412;9420;9428;9481:3;9469:9;9460:7;9456:23;9452:33;9449:53;;;9498:1;9495;9488:12;9449:53;9538:9;9525:23;9567:18;9608:2;9600:6;9597:14;9594:34;;;9624:1;9621;9614:12;9594:34;9662:6;9651:9;9647:22;9637:32;;9707:7;9700:4;9696:2;9692:13;9688:27;9678:55;;9729:1;9726;9719:12;9678:55;9769:2;9756:16;9795:2;9787:6;9784:14;9781:34;;;9811:1;9808;9801:12;9781:34;9866:7;9859:4;9849:6;9846:1;9842:14;9838:2;9834:23;9830:34;9827:47;9824:67;;;9887:1;9884;9877:12;9824:67;9918:4;9910:13;;;;-1:-1:-1;9942:6:123;;-1:-1:-1;9980:20:123;;9967:34;;-1:-1:-1;10020:38:123;10054:2;10039:18;;10020:38;:::i;:::-;10010:48;;10111:2;10100:9;10096:18;10083:32;10067:48;;10140:2;10130:8;10127:16;10124:36;;;10156:1;10153;10146:12;10124:36;;10195:60;10247:7;10236:8;10225:9;10221:24;10195:60;:::i;:::-;10274:8;;-1:-1:-1;10169:86:123;-1:-1:-1;10328:39:123;;-1:-1:-1;10362:3:123;10347:19;;10328:39;:::i;:::-;10318:49;;10386:39;10420:3;10409:9;10405:19;10386:39;:::i;:::-;10376:49;;10472:3;10461:9;10457:19;10444:33;10434:43;;10496:39;10530:3;10519:9;10515:19;10496:39;:::i;:::-;10486:49;;9188:1353;;;;;;;;;;;;;:::o;10546:381::-;10753:2;10742:9;10735:21;10716:4;10773:56;10825:2;10814:9;10810:18;10802:6;10773:56;:::i;:::-;10765:64;;10877:42;10869:6;10865:55;10860:2;10849:9;10845:18;10838:83;10546:381;;;;;:::o;10932:1271::-;11098:6;11106;11114;11122;11130;11138;11146;11154;11162;11170;11178:7;11232:3;11220:9;11211:7;11207:23;11203:33;11200:53;;;11249:1;11246;11239:12;11200:53;11288:9;11275:23;11307:31;11332:5;11307:31;:::i;:::-;11357:5;-1:-1:-1;11409:2:123;11394:18;;11381:32;;-1:-1:-1;11464:2:123;11449:18;;11436:32;11491:18;11480:30;;11477:50;;;11523:1;11520;11513:12;11477:50;11562:58;11612:7;11603:6;11592:9;11588:22;11562:58;:::i;:::-;11639:8;;-1:-1:-1;11536:84:123;-1:-1:-1;11693:45:123;;-1:-1:-1;11734:2:123;11719:18;;11693:45;:::i;:::-;11683:55;;11785:3;11774:9;11770:19;11757:33;11747:43;;11837:3;11826:9;11822:19;11809:33;11799:43;;11889:3;11878:9;11874:19;11861:33;11851:43;;11946:3;11935:9;11931:19;11918:33;11960;11985:7;11960:33;:::i;:::-;12012:7;-1:-1:-1;12071:3:123;12056:19;;12043:33;12085;12043;12085;:::i;:::-;12137:7;12127:17;;;12192:3;12181:9;12177:19;12164:33;12153:44;;10932:1271;;;;;;;;;;;;;;:::o;12390:388::-;12458:6;12466;12519:2;12507:9;12498:7;12494:23;12490:32;12487:52;;;12535:1;12532;12525:12;12487:52;12574:9;12561:23;12593:31;12618:5;12593:31;:::i;:::-;12643:5;-1:-1:-1;12700:2:123;12685:18;;12672:32;12713:33;12672:32;12713:33;:::i;:::-;12765:7;12755:17;;;12390:388;;;;;:::o;12783:529::-;12860:6;12868;12876;12929:2;12917:9;12908:7;12904:23;12900:32;12897:52;;;12945:1;12942;12935:12;12897:52;12984:9;12971:23;13003:31;13028:5;13003:31;:::i;:::-;13053:5;-1:-1:-1;13110:2:123;13095:18;;13082:32;13123:33;13082:32;13123:33;:::i;:::-;13175:7;-1:-1:-1;13234:2:123;13219:18;;13206:32;13247:33;13206:32;13247:33;:::i;:::-;13299:7;13289:17;;;12783:529;;;;;:::o;13317:456::-;13394:6;13402;13410;13463:2;13451:9;13442:7;13438:23;13434:32;13431:52;;;13479:1;13476;13469:12;13431:52;13518:9;13505:23;13537:31;13562:5;13537:31;:::i;:::-;13587:5;-1:-1:-1;13644:2:123;13629:18;;13616:32;13657:33;13616:32;13657:33;:::i;:::-;13317:456;;13709:7;;-1:-1:-1;;;13763:2:123;13748:18;;;;13735:32;;13317:456::o;14668:184::-;14720:77;14717:1;14710:88;14817:4;14814:1;14807:15;14841:4;14838:1;14831:15;14857:195;14896:3;14927:66;14920:5;14917:77;14914:103;;14997:18;;:::i;:::-;-1:-1:-1;15044:1:123;15033:13;;14857:195::o;16722:377::-;16915:2;16904:9;16897:21;16878:4;16941:44;16981:2;16970:9;16966:18;16958:6;16941:44;:::i;:::-;17033:9;17025:6;17021:22;17016:2;17005:9;17001:18;16994:50;17061:32;17086:6;17078;17061:32;:::i;17104:336::-;17173:6;17226:2;17214:9;17205:7;17201:23;17197:32;17194:52;;;17242:1;17239;17232:12;17194:52;17274:9;17268:16;17324:66;17317:5;17313:78;17306:5;17303:89;17293:117;;17406:1;17403;17396:12;18496:151;18586:4;18579:12;;;18565;;;18561:31;;18604:14;;18601:40;;;18621:18;;:::i;19721:168::-;19794:9;;;19825;;19842:15;;;19836:22;;19822:37;19812:71;;19863:18;;:::i;21226:184::-;21278:77;21275:1;21268:88;21375:4;21372:1;21365:15;21399:4;21396:1;21389:15;21415:294;21496:1;21489:5;21486:12;21476:200;;21532:77;21529:1;21522:88;21633:4;21630:1;21623:15;21661:4;21658:1;21651:15;21476:200;21685:18;;21415:294::o;21714:1431::-;22163:4;22192:3;22234:42;22226:6;22222:55;22211:9;22204:74;22314:6;22309:2;22298:9;22294:18;22287:34;22357:2;22352;22341:9;22337:18;22330:30;22396:6;22391:2;22380:9;22376:18;22369:34;;22422:3;22475:6;22467;22462:2;22451:9;22447:18;22434:48;22531:1;22526:2;22517:6;22506:9;22502:22;22498:31;22491:42;22588:66;22583:2;22575:6;22571:15;22567:88;22556:9;22552:104;22665:53;22714:2;22703:9;22699:18;22691:6;22665:53;:::i;:::-;22755:6;22749:3;22738:9;22734:19;22727:35;22799:6;22793:3;22782:9;22778:19;22771:35;22843:6;22837:3;22826:9;22822:19;22815:35;22859:47;22901:3;22890:9;22886:19;22878:6;7914:42;7903:54;7891:67;;7837:127;22859:47;7914:42;7903:54;;22957:3;22942:19;;7891:67;23023:2;23011:9;23007:2;23003:18;22999:27;22993:3;22982:9;22978:19;22971:56;23044:38;23078:2;23074;23070:11;23061:7;23044:38;:::i;:::-;23036:46;;;;23091:48;23134:3;23123:9;23119:19;23110:7;7914:42;7903:54;7891:67;;7837:127;23091:48;21714:1431;;;;;;;;;;;;;;;:::o;23150:125::-;23215:9;;;23236:10;;;23233:36;;;23249:18;;:::i;23280:274::-;23320:1;23346;23336:189;;23381:77;23378:1;23371:88;23482:4;23479:1;23472:15;23510:4;23507:1;23500:15;23336:189;-1:-1:-1;23539:9:123;;23280:274::o;23892:128::-;23959:9;;;23980:11;;;23977:37;;;23994:18;;:::i;24954:184::-;25006:77;25003:1;24996:88;25103:4;25100:1;25093:15;25127:4;25124:1;25117:15;25143:1031;25427:3;25440:22;;;25412:19;;25497:22;;;25379:4;25577:6;25550:3;25535:19;;25379:4;25611:327;25625:6;25622:1;25619:13;25611:327;;;25700:6;25687:20;25720:31;25745:5;25720:31;:::i;:::-;25787:42;25776:54;25764:67;;25854:4;25913:15;;;;25878:12;;;;25647:1;25640:9;25611:327;;;-1:-1:-1;25989:4:123;25974:20;;25967:36;;;;-1:-1:-1;;26022:42:123;26100:15;;;26095:2;26080:18;;26073:43;26152:15;;26147:2;26132:18;;;26125:43;25955:3;25143:1031;-1:-1:-1;;25143:1031:123:o;27764:277::-;27831:6;27884:2;27872:9;27863:7;27859:23;27855:32;27852:52;;;27900:1;27897;27890:12;27852:52;27932:9;27926:16;27985:5;27978:13;27971:21;27964:5;27961:32;27951:60;;28007:1;28004;27997:12;28712:271;28895:6;28887;28882:3;28869:33;28851:3;28921:16;;28946:13;;;28921:16;28712:271;-1:-1:-1;28712:271:123:o;28988:1017::-;29374:4;29416:3;29405:9;29401:19;29393:27;;29447:6;29436:9;29429:25;29473:42;29563:2;29555:6;29551:15;29546:2;29535:9;29531:18;29524:43;29603:6;29598:2;29587:9;29583:18;29576:34;29646:6;29641:2;29630:9;29626:18;29619:34;29662:54;29711:3;29700:9;29696:19;29688:6;29662:54;:::i;:::-;29747:3;29732:19;;29725:35;;;;29791:3;29776:19;;29769:35;;;;29835:3;29820:19;;29813:35;;;;29885:15;;;29879:3;29864:19;;29857:44;29938:15;;;29932:3;29917:19;;29910:44;29985:3;29970:19;29963:36;;;;28988:1017;;-1:-1:-1;;;;;28988:1017:123:o;30884:196::-;30923:3;30951:5;30941:39;;30960:18;;:::i;:::-;-1:-1:-1;31007:66:123;30996:78;;30884:196::o","linkReferences":{}},"methodIdentifiers":{"VERSION()":"ffa1ad74","addOwnerWithThreshold(address,uint256)":"0d582f13","approveHash(bytes32)":"d4d9bdcd","approvedHashes(address,bytes32)":"7d832974","changeThreshold(uint256)":"694e80c3","checkNSignatures(bytes32,bytes,bytes,uint256)":"12fb68e0","checkSignatures(bytes32,bytes,bytes)":"934f3a11","disableModule(address,address)":"e009cfde","domainSeparator()":"f698da25","enableModule(address)":"610b5925","encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":"e86637db","execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)":"6a761202","execTransactionFromModule(address,uint256,bytes,uint8)":"468721a7","execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":"5229073f","getChainId()":"3408e470","getModulesPaginated(address,uint256)":"cc2f8452","getOwners()":"a0e67e2b","getStorageAt(uint256,uint256)":"5624b25b","getThreshold()":"e75235b8","getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":"d8d11f78","isModuleEnabled(address)":"2d9ad53d","isOwner(address)":"2f54bf6e","nonce()":"affed0e0","removeOwner(address,address,uint256)":"f8dc5dd9","setFallbackHandler(address)":"f08a0323","setGuard(address)":"e19a9dd9","setup(address[],uint256,address,bytes,address,address,uint256,address)":"b63e800d","signedMessages(bytes32)":"5ae6bd37","simulateAndRevert(address,bytes)":"b4faba09","swapOwner(address,address,address)":"e318b52b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"approvedHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ApproveHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"ChangedFallbackHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"ChangedGuard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ChangedThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DisabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"EnabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ExecutionSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initializer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fallbackHandler\",\"type\":\"address\"}],\"name\":\"SafeSetup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"SignMsg\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"addOwnerWithThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashToApprove\",\"type\":\"bytes32\"}],\"name\":\"approveHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"approvedHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignatures\",\"type\":\"uint256\"}],\"name\":\"checkNSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"checkSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"disableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"encodeTransactionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"execTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"start\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"getModulesPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"isModuleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"fallbackHandler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"paymentReceiver\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"signedMessages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Stefan George - @Georgi87Richard Meissner - @rmeissner\",\"details\":\"Most important concepts:      - Threshold: Number of required confirmations for a Safe transaction.      - Owners: List of addresses that control the Safe. They are the only ones that can add/remove owners, change the threshold and        approve transactions. Managed in `OwnerManager`.      - Transaction Hash: Hash of a transaction is calculated using the EIP-712 typed structured data hashing scheme.      - Nonce: Each transaction should have a different nonce to prevent replay attacks.      - Signature: A valid signature of an owner of the Safe for a transaction hash.      - Guard: Guard is a contract that can execute pre- and post- transaction checks. Managed in `GuardManager`.      - Modules: Modules are contracts that can be used to extend the write functionality of a Safe. Managed in `ModuleManager`.      - Fallback: Fallback handler is a contract that can provide additional read-only functional for Safe. Managed in `FallbackManager`.      Note: This version of the implementation contract doesn't emit events for the sake of gas efficiency and therefore requires a tracing node for indexing/      For the events-based implementation see `SafeL2.sol`.\",\"kind\":\"dev\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"New owner address.\"}},\"approveHash(bytes32)\":{\"details\":\"This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures\",\"params\":{\"hashToApprove\":\"The hash to mark as approved for signatures that are verified by this contract.\"}},\"changeThreshold(uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\"}},\"checkNSignatures(bytes32,bytes,bytes,uint256)\":{\"details\":\"Since the EIP-1271 does an external call, be mindful of reentrancy attacks.\",\"params\":{\"data\":\"That should be signed (this is passed to an external validator contract)\",\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"requiredSignatures\":\"Amount of required valid signatures.\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\"}},\"checkSignatures(bytes32,bytes,bytes)\":{\"params\":{\"data\":\"That should be signed (this is passed to an external validator contract)\",\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\"}},\"disableModule(address,address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be removed.\",\"prevModule\":\"Previous module in the modules linked list.\"}},\"domainSeparator()\":{\"details\":\"Returns the domain separator for this contract, as defined in the EIP-712 standard.\",\"returns\":{\"_0\":\"bytes32 The domain separator hash.\"}},\"enableModule(address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be whitelisted.\"}},\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the safe transaction.\",\"to\":\"Destination address.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash bytes.\"}},\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\":{\"details\":\"The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.\",\"params\":{\"baseGas\":\"Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload of Safe transaction.\",\"gasPrice\":\"Gas price that should be used for the payment calculation.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type of Safe transaction.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the Safe transaction.\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\",\"to\":\"Destination address of Safe transaction.\",\"value\":\"Ether value of Safe transaction.\"},\"returns\":{\"success\":\"Boolean indicating transaction's success.\"}},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Function is virtual to allow overriding for L2 singleton to emit an event for indexing.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"returnData\":\"Data returned by the call.\",\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"getChainId()\":{\"returns\":{\"_0\":\"The ID of the current chain as a uint256.\"}},\"getModulesPaginated(address,uint256)\":{\"params\":{\"pageSize\":\"Maximum number of modules that should be returned. Has to be > 0\",\"start\":\"Start of the page. Has to be a module or start pointer (0x1 address)\"},\"returns\":{\"array\":\"Array of modules.\",\"next\":\"Start of the next page.\"}},\"getOwners()\":{\"returns\":{\"_0\":\"Array of Safe owners.\"}},\"getStorageAt(uint256,uint256)\":{\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"getThreshold()\":{\"returns\":{\"_0\":\"Threshold number.\"}},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Gas costs for data used to trigger the safe transaction.\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Fas that should be used for the safe transaction.\",\"to\":\"Destination address.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash.\"}},\"isModuleEnabled(address)\":{\"returns\":{\"_0\":\"True if the module is enabled\"}},\"isOwner(address)\":{\"returns\":{\"_0\":\"Boolean if owner is an owner of the Safe.\"}},\"removeOwner(address,address,uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"Owner address to be removed.\",\"prevOwner\":\"Owner that pointed to the owner to be removed in the linked list\"}},\"setFallbackHandler(address)\":{\"details\":\"Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.\",\"params\":{\"handler\":\"contract to handle fallback calls.\"}},\"setGuard(address)\":{\"details\":\"Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      \\u26a0\\ufe0f IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.\",\"params\":{\"guard\":\"The address of the guard to be used or the 0 address to disable the guard\"}},\"setup(address[],uint256,address,bytes,address,address,uint256,address)\":{\"details\":\"This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.\",\"params\":{\"_owners\":\"List of Safe owners.\",\"_threshold\":\"Number of required confirmations for a Safe transaction.\",\"data\":\"Data payload for optional delegate call.\",\"fallbackHandler\":\"Handler for fallback calls to this contract\",\"payment\":\"Value that should be paid\",\"paymentReceiver\":\"Address that should receive the payment (or 0 if tx.origin)\",\"paymentToken\":\"Token that should be used for the payment (0 is ETH)\",\"to\":\"Contract address for optional delegate call.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}},\"swapOwner(address,address,address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"newOwner\":\"New owner address.\",\"oldOwner\":\"Owner address to be replaced.\",\"prevOwner\":\"Owner that pointed to the owner to be replaced in the linked list\"}}},\"title\":\"Safe - A multisignature wallet with support for confirmations using signed messages based on EIP-712.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"notice\":\"Adds the owner `owner` to the Safe and updates the threshold to `_threshold`.\"},\"approveHash(bytes32)\":{\"notice\":\"Marks hash `hashToApprove` as approved.\"},\"changeThreshold(uint256)\":{\"notice\":\"Changes the threshold of the Safe to `_threshold`.\"},\"checkNSignatures(bytes32,bytes,bytes,uint256)\":{\"notice\":\"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise.\"},\"checkSignatures(bytes32,bytes,bytes)\":{\"notice\":\"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise.\"},\"disableModule(address,address)\":{\"notice\":\"Disables the module `module` for the Safe.\"},\"enableModule(address)\":{\"notice\":\"Enables the module `module` for the Safe.\"},\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Returns the pre-image of the transaction hash (see getTransactionHash).\"},\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\":{\"notice\":\"Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`.\"},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)\"},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data\"},\"getChainId()\":{\"notice\":\"Returns the ID of the chain the contract is currently deployed on.\"},\"getModulesPaginated(address,uint256)\":{\"notice\":\"Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array.\"},\"getOwners()\":{\"notice\":\"Returns a list of Safe owners.\"},\"getStorageAt(uint256,uint256)\":{\"notice\":\"Reads `length` bytes of storage in the currents contract\"},\"getThreshold()\":{\"notice\":\"Returns the number of required confirmations for a Safe transaction aka the threshold.\"},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Returns transaction hash to be signed by owners.\"},\"isModuleEnabled(address)\":{\"notice\":\"Returns if an module is enabled\"},\"isOwner(address)\":{\"notice\":\"Returns if `owner` is an owner of the Safe.\"},\"removeOwner(address,address,uint256)\":{\"notice\":\"Removes the owner `owner` from the Safe and updates the threshold to `_threshold`.\"},\"setFallbackHandler(address)\":{\"notice\":\"Set Fallback Handler to `handler` for the Safe.\"},\"setGuard(address)\":{\"notice\":\"Set Transaction Guard `guard` for the Safe. Make sure you trust the guard.\"},\"setup(address[],uint256,address,bytes,address,address,uint256,address)\":{\"notice\":\"Sets an initial storage of the Safe contract.\"},\"swapOwner(address,address,address)\":{\"notice\":\"Replaces the owner `oldOwner` in the Safe with `newOwner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/Safe.sol\":\"Safe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/Safe.sol\":{\"keccak256\":\"0xfe09ad8ce3359ee997c4127c14264a94ec6f25dea38dc37997bd705e9aed9fcd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://434e77c4ace5cefcf5a21af7eceb5b60ca45b55818e1ecf938d196345731c5e9\",\"dweb:/ipfs/QmbYFyE4okvruZZuCxeNy86Hm6W7yPR4yJWkVztbPRTosu\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd929f3cd77ab05904d7ad510d25e79a84172728c6e6f887872d7d5176ed2ada7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f9c3ae921990787102f8ff6e9d55b3329b6fed6b0e67ea4c8e225b53378359df\",\"dweb:/ipfs/QmbDTmeBsNLXRrM1n8jT9qEnNcNv2G3SQY7NV7kex9EtLh\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe-contracts/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true}],"type":"event","name":"AddedOwner","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"approvedHash","type":"bytes32","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true}],"type":"event","name":"ApproveHash","anonymous":false},{"inputs":[{"internalType":"address","name":"handler","type":"address","indexed":true}],"type":"event","name":"ChangedFallbackHandler","anonymous":false},{"inputs":[{"internalType":"address","name":"guard","type":"address","indexed":true}],"type":"event","name":"ChangedGuard","anonymous":false},{"inputs":[{"internalType":"uint256","name":"threshold","type":"uint256","indexed":false}],"type":"event","name":"ChangedThreshold","anonymous":false},{"inputs":[{"internalType":"address","name":"module","type":"address","indexed":true}],"type":"event","name":"DisabledModule","anonymous":false},{"inputs":[{"internalType":"address","name":"module","type":"address","indexed":true}],"type":"event","name":"EnabledModule","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32","indexed":true},{"internalType":"uint256","name":"payment","type":"uint256","indexed":false}],"type":"event","name":"ExecutionFailure","anonymous":false},{"inputs":[{"internalType":"address","name":"module","type":"address","indexed":true}],"type":"event","name":"ExecutionFromModuleFailure","anonymous":false},{"inputs":[{"internalType":"address","name":"module","type":"address","indexed":true}],"type":"event","name":"ExecutionFromModuleSuccess","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32","indexed":true},{"internalType":"uint256","name":"payment","type":"uint256","indexed":false}],"type":"event","name":"ExecutionSuccess","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true}],"type":"event","name":"RemovedOwner","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"SafeReceived","anonymous":false},{"inputs":[{"internalType":"address","name":"initiator","type":"address","indexed":true},{"internalType":"address[]","name":"owners","type":"address[]","indexed":false},{"internalType":"uint256","name":"threshold","type":"uint256","indexed":false},{"internalType":"address","name":"initializer","type":"address","indexed":false},{"internalType":"address","name":"fallbackHandler","type":"address","indexed":false}],"type":"event","name":"SafeSetup","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"msgHash","type":"bytes32","indexed":true}],"type":"event","name":"SignMsg","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"stateMutability":"view","type":"function","name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"_threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addOwnerWithThreshold"},{"inputs":[{"internalType":"bytes32","name":"hashToApprove","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"approveHash"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"approvedHashes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"changeThreshold"},{"inputs":[{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"uint256","name":"requiredSignatures","type":"uint256"}],"stateMutability":"view","type":"function","name":"checkNSignatures"},{"inputs":[{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"stateMutability":"view","type":"function","name":"checkSignatures"},{"inputs":[{"internalType":"address","name":"prevModule","type":"address"},{"internalType":"address","name":"module","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"disableModule"},{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"enableModule"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"safeTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address","name":"refundReceiver","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"stateMutability":"view","type":"function","name":"encodeTransactionData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"safeTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"stateMutability":"payable","type":"function","name":"execTransaction","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"execTransactionFromModule","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"execTransactionFromModuleReturnData","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"start","type":"address"},{"internalType":"uint256","name":"pageSize","type":"uint256"}],"stateMutability":"view","type":"function","name":"getModulesPaginated","outputs":[{"internalType":"address[]","name":"array","type":"address[]"},{"internalType":"address","name":"next","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStorageAt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"safeTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address","name":"refundReceiver","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTransactionHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"stateMutability":"view","type":"function","name":"isModuleEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"prevOwner","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"_threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeOwner"},{"inputs":[{"internalType":"address","name":"handler","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFallbackHandler"},{"inputs":[{"internalType":"address","name":"guard","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setGuard"},{"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_threshold","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"fallbackHandler","type":"address"},{"internalType":"address","name":"paymentToken","type":"address"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address payable","name":"paymentReceiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setup"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"signedMessages","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"targetContract","type":"address"},{"internalType":"bytes","name":"calldataPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"simulateAndRevert"},{"inputs":[{"internalType":"address","name":"prevOwner","type":"address"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"swapOwner"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"addOwnerWithThreshold(address,uint256)":{"details":"This can only be done via a Safe transaction.","params":{"_threshold":"New threshold.","owner":"New owner address."}},"approveHash(bytes32)":{"details":"This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures","params":{"hashToApprove":"The hash to mark as approved for signatures that are verified by this contract."}},"changeThreshold(uint256)":{"details":"This can only be done via a Safe transaction.","params":{"_threshold":"New threshold."}},"checkNSignatures(bytes32,bytes,bytes,uint256)":{"details":"Since the EIP-1271 does an external call, be mindful of reentrancy attacks.","params":{"data":"That should be signed (this is passed to an external validator contract)","dataHash":"Hash of the data (could be either a message hash or transaction hash)","requiredSignatures":"Amount of required valid signatures.","signatures":"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."}},"checkSignatures(bytes32,bytes,bytes)":{"params":{"data":"That should be signed (this is passed to an external validator contract)","dataHash":"Hash of the data (could be either a message hash or transaction hash)","signatures":"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."}},"disableModule(address,address)":{"details":"This can only be done via a Safe transaction.","params":{"module":"Module to be removed.","prevModule":"Previous module in the modules linked list."}},"domainSeparator()":{"details":"Returns the domain separator for this contract, as defined in the EIP-712 standard.","returns":{"_0":"bytes32 The domain separator hash."}},"enableModule(address)":{"details":"This can only be done via a Safe transaction.","params":{"module":"Module to be whitelisted."}},"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"params":{"_nonce":"Transaction nonce.","baseGas":"Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)","data":"Data payload.","gasPrice":"Maximum gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Gas that should be used for the safe transaction.","to":"Destination address.","value":"Ether value."},"returns":{"_0":"Transaction hash bytes."}},"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)":{"details":"The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.","params":{"baseGas":"Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)","data":"Data payload of Safe transaction.","gasPrice":"Gas price that should be used for the payment calculation.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type of Safe transaction.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Gas that should be used for the Safe transaction.","signatures":"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.","to":"Destination address of Safe transaction.","value":"Ether value of Safe transaction."},"returns":{"success":"Boolean indicating transaction's success."}},"execTransactionFromModule(address,uint256,bytes,uint8)":{"details":"Function is virtual to allow overriding for L2 singleton to emit an event for indexing.","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."},"returns":{"success":"Boolean flag indicating if the call succeeded."}},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."},"returns":{"returnData":"Data returned by the call.","success":"Boolean flag indicating if the call succeeded."}},"getChainId()":{"returns":{"_0":"The ID of the current chain as a uint256."}},"getModulesPaginated(address,uint256)":{"params":{"pageSize":"Maximum number of modules that should be returned. Has to be > 0","start":"Start of the page. Has to be a module or start pointer (0x1 address)"},"returns":{"array":"Array of modules.","next":"Start of the next page."}},"getOwners()":{"returns":{"_0":"Array of Safe owners."}},"getStorageAt(uint256,uint256)":{"params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"getThreshold()":{"returns":{"_0":"Threshold number."}},"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"params":{"_nonce":"Transaction nonce.","baseGas":"Gas costs for data used to trigger the safe transaction.","data":"Data payload.","gasPrice":"Maximum gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Fas that should be used for the safe transaction.","to":"Destination address.","value":"Ether value."},"returns":{"_0":"Transaction hash."}},"isModuleEnabled(address)":{"returns":{"_0":"True if the module is enabled"}},"isOwner(address)":{"returns":{"_0":"Boolean if owner is an owner of the Safe."}},"removeOwner(address,address,uint256)":{"details":"This can only be done via a Safe transaction.","params":{"_threshold":"New threshold.","owner":"Owner address to be removed.","prevOwner":"Owner that pointed to the owner to be removed in the linked list"}},"setFallbackHandler(address)":{"details":"Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.","params":{"handler":"contract to handle fallback calls."}},"setGuard(address)":{"details":"Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      ⚠️ IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.","params":{"guard":"The address of the guard to be used or the 0 address to disable the guard"}},"setup(address[],uint256,address,bytes,address,address,uint256,address)":{"details":"This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.","params":{"_owners":"List of Safe owners.","_threshold":"Number of required confirmations for a Safe transaction.","data":"Data payload for optional delegate call.","fallbackHandler":"Handler for fallback calls to this contract","payment":"Value that should be paid","paymentReceiver":"Address that should receive the payment (or 0 if tx.origin)","paymentToken":"Token that should be used for the payment (0 is ETH)","to":"Contract address for optional delegate call."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}},"swapOwner(address,address,address)":{"details":"This can only be done via a Safe transaction.","params":{"newOwner":"New owner address.","oldOwner":"Owner address to be replaced.","prevOwner":"Owner that pointed to the owner to be replaced in the linked list"}}},"version":1},"userdoc":{"kind":"user","methods":{"addOwnerWithThreshold(address,uint256)":{"notice":"Adds the owner `owner` to the Safe and updates the threshold to `_threshold`."},"approveHash(bytes32)":{"notice":"Marks hash `hashToApprove` as approved."},"changeThreshold(uint256)":{"notice":"Changes the threshold of the Safe to `_threshold`."},"checkNSignatures(bytes32,bytes,bytes,uint256)":{"notice":"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."},"checkSignatures(bytes32,bytes,bytes)":{"notice":"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."},"disableModule(address,address)":{"notice":"Disables the module `module` for the Safe."},"enableModule(address)":{"notice":"Enables the module `module` for the Safe."},"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"notice":"Returns the pre-image of the transaction hash (see getTransactionHash)."},"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)":{"notice":"Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`."},"execTransactionFromModule(address,uint256,bytes,uint8)":{"notice":"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)"},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"notice":"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data"},"getChainId()":{"notice":"Returns the ID of the chain the contract is currently deployed on."},"getModulesPaginated(address,uint256)":{"notice":"Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array."},"getOwners()":{"notice":"Returns a list of Safe owners."},"getStorageAt(uint256,uint256)":{"notice":"Reads `length` bytes of storage in the currents contract"},"getThreshold()":{"notice":"Returns the number of required confirmations for a Safe transaction aka the threshold."},"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"notice":"Returns transaction hash to be signed by owners."},"isModuleEnabled(address)":{"notice":"Returns if an module is enabled"},"isOwner(address)":{"notice":"Returns if `owner` is an owner of the Safe."},"removeOwner(address,address,uint256)":{"notice":"Removes the owner `owner` from the Safe and updates the threshold to `_threshold`."},"setFallbackHandler(address)":{"notice":"Set Fallback Handler to `handler` for the Safe."},"setGuard(address)":{"notice":"Set Transaction Guard `guard` for the Safe. Make sure you trust the guard."},"setup(address[],uint256,address,bytes,address,address,uint256,address)":{"notice":"Sets an initial storage of the Safe contract."},"swapOwner(address,address,address)":{"notice":"Replaces the owner `oldOwner` in the Safe with `newOwner`."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/safe-contracts/contracts/Safe.sol":"Safe"},"evmVersion":"paris","libraries":{}},"sources":{"lib/safe-contracts/contracts/Safe.sol":{"keccak256":"0xfe09ad8ce3359ee997c4127c14264a94ec6f25dea38dc37997bd705e9aed9fcd","urls":["bzz-raw://434e77c4ace5cefcf5a21af7eceb5b60ca45b55818e1ecf938d196345731c5e9","dweb:/ipfs/QmbYFyE4okvruZZuCxeNy86Hm6W7yPR4yJWkVztbPRTosu"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/base/Executor.sol":{"keccak256":"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a","urls":["bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c","dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/base/FallbackManager.sol":{"keccak256":"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165","urls":["bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e","dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/base/GuardManager.sol":{"keccak256":"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d","urls":["bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64","dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/base/ModuleManager.sol":{"keccak256":"0xd929f3cd77ab05904d7ad510d25e79a84172728c6e6f887872d7d5176ed2ada7","urls":["bzz-raw://f9c3ae921990787102f8ff6e9d55b3329b6fed6b0e67ea4c8e225b53378359df","dweb:/ipfs/QmbDTmeBsNLXRrM1n8jT9qEnNcNv2G3SQY7NV7kex9EtLh"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/base/OwnerManager.sol":{"keccak256":"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c","urls":["bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a","dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/Enum.sol":{"keccak256":"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453","urls":["bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34","dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol":{"keccak256":"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba","urls":["bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9","dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol":{"keccak256":"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05","urls":["bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3","dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/SelfAuthorized.sol":{"keccak256":"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13","urls":["bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3","dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/SignatureDecoder.sol":{"keccak256":"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c","urls":["bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80","dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/Singleton.sol":{"keccak256":"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50","urls":["bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde","dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/StorageAccessible.sol":{"keccak256":"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e","urls":["bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e","dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/external/SafeMath.sol":{"keccak256":"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89","urls":["bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c","dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb","urls":["bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89","dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol":{"keccak256":"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457","urls":["bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25","dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[{"astId":48178,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"singleton","offset":0,"slot":"0","type":"t_address"},{"astId":47171,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"modules","offset":0,"slot":"1","type":"t_mapping(t_address,t_address)"},{"astId":47586,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"owners","offset":0,"slot":"2","type":"t_mapping(t_address,t_address)"},{"astId":47588,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"ownerCount","offset":0,"slot":"3","type":"t_uint256"},{"astId":47590,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"threshold","offset":0,"slot":"4","type":"t_uint256"},{"astId":46079,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"nonce","offset":0,"slot":"5","type":"t_uint256"},{"astId":46081,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"_deprecatedDomainSeparator","offset":0,"slot":"6","type":"t_bytes32"},{"astId":46085,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"signedMessages","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":46091,"contract":"lib/safe-contracts/contracts/Safe.sol:Safe","label":"approvedHashes","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_bytes32,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(bytes32 => uint256))","numberOfBytes":"32","value":"t_mapping(t_bytes32,t_uint256)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"version":1,"kind":"user","methods":{"addOwnerWithThreshold(address,uint256)":{"notice":"Adds the owner `owner` to the Safe and updates the threshold to `_threshold`."},"approveHash(bytes32)":{"notice":"Marks hash `hashToApprove` as approved."},"changeThreshold(uint256)":{"notice":"Changes the threshold of the Safe to `_threshold`."},"checkNSignatures(bytes32,bytes,bytes,uint256)":{"notice":"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."},"checkSignatures(bytes32,bytes,bytes)":{"notice":"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."},"disableModule(address,address)":{"notice":"Disables the module `module` for the Safe."},"enableModule(address)":{"notice":"Enables the module `module` for the Safe."},"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"notice":"Returns the pre-image of the transaction hash (see getTransactionHash)."},"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)":{"notice":"Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`."},"execTransactionFromModule(address,uint256,bytes,uint8)":{"notice":"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)"},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"notice":"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data"},"getChainId()":{"notice":"Returns the ID of the chain the contract is currently deployed on."},"getModulesPaginated(address,uint256)":{"notice":"Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array."},"getOwners()":{"notice":"Returns a list of Safe owners."},"getStorageAt(uint256,uint256)":{"notice":"Reads `length` bytes of storage in the currents contract"},"getThreshold()":{"notice":"Returns the number of required confirmations for a Safe transaction aka the threshold."},"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"notice":"Returns transaction hash to be signed by owners."},"isModuleEnabled(address)":{"notice":"Returns if an module is enabled"},"isOwner(address)":{"notice":"Returns if `owner` is an owner of the Safe."},"removeOwner(address,address,uint256)":{"notice":"Removes the owner `owner` from the Safe and updates the threshold to `_threshold`."},"setFallbackHandler(address)":{"notice":"Set Fallback Handler to `handler` for the Safe."},"setGuard(address)":{"notice":"Set Transaction Guard `guard` for the Safe. Make sure you trust the guard."},"setup(address[],uint256,address,bytes,address,address,uint256,address)":{"notice":"Sets an initial storage of the Safe contract."},"swapOwner(address,address,address)":{"notice":"Replaces the owner `oldOwner` in the Safe with `newOwner`."}}},"devdoc":{"version":1,"kind":"dev","author":"Stefan George - @Georgi87Richard Meissner - @rmeissner","details":"Most important concepts:      - Threshold: Number of required confirmations for a Safe transaction.      - Owners: List of addresses that control the Safe. They are the only ones that can add/remove owners, change the threshold and        approve transactions. Managed in `OwnerManager`.      - Transaction Hash: Hash of a transaction is calculated using the EIP-712 typed structured data hashing scheme.      - Nonce: Each transaction should have a different nonce to prevent replay attacks.      - Signature: A valid signature of an owner of the Safe for a transaction hash.      - Guard: Guard is a contract that can execute pre- and post- transaction checks. Managed in `GuardManager`.      - Modules: Modules are contracts that can be used to extend the write functionality of a Safe. Managed in `ModuleManager`.      - Fallback: Fallback handler is a contract that can provide additional read-only functional for Safe. Managed in `FallbackManager`.      Note: This version of the implementation contract doesn't emit events for the sake of gas efficiency and therefore requires a tracing node for indexing/      For the events-based implementation see `SafeL2.sol`.","methods":{"addOwnerWithThreshold(address,uint256)":{"details":"This can only be done via a Safe transaction.","params":{"_threshold":"New threshold.","owner":"New owner address."}},"approveHash(bytes32)":{"details":"This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures","params":{"hashToApprove":"The hash to mark as approved for signatures that are verified by this contract."}},"changeThreshold(uint256)":{"details":"This can only be done via a Safe transaction.","params":{"_threshold":"New threshold."}},"checkNSignatures(bytes32,bytes,bytes,uint256)":{"details":"Since the EIP-1271 does an external call, be mindful of reentrancy attacks.","params":{"data":"That should be signed (this is passed to an external validator contract)","dataHash":"Hash of the data (could be either a message hash or transaction hash)","requiredSignatures":"Amount of required valid signatures.","signatures":"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."}},"checkSignatures(bytes32,bytes,bytes)":{"params":{"data":"That should be signed (this is passed to an external validator contract)","dataHash":"Hash of the data (could be either a message hash or transaction hash)","signatures":"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."}},"disableModule(address,address)":{"details":"This can only be done via a Safe transaction.","params":{"module":"Module to be removed.","prevModule":"Previous module in the modules linked list."}},"domainSeparator()":{"details":"Returns the domain separator for this contract, as defined in the EIP-712 standard.","returns":{"_0":"bytes32 The domain separator hash."}},"enableModule(address)":{"details":"This can only be done via a Safe transaction.","params":{"module":"Module to be whitelisted."}},"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"params":{"_nonce":"Transaction nonce.","baseGas":"Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)","data":"Data payload.","gasPrice":"Maximum gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Gas that should be used for the safe transaction.","to":"Destination address.","value":"Ether value."},"returns":{"_0":"Transaction hash bytes."}},"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)":{"details":"The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.","params":{"baseGas":"Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)","data":"Data payload of Safe transaction.","gasPrice":"Gas price that should be used for the payment calculation.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type of Safe transaction.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Gas that should be used for the Safe transaction.","signatures":"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.","to":"Destination address of Safe transaction.","value":"Ether value of Safe transaction."},"returns":{"success":"Boolean indicating transaction's success."}},"execTransactionFromModule(address,uint256,bytes,uint8)":{"details":"Function is virtual to allow overriding for L2 singleton to emit an event for indexing.","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."},"returns":{"success":"Boolean flag indicating if the call succeeded."}},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."},"returns":{"returnData":"Data returned by the call.","success":"Boolean flag indicating if the call succeeded."}},"getChainId()":{"returns":{"_0":"The ID of the current chain as a uint256."}},"getModulesPaginated(address,uint256)":{"params":{"pageSize":"Maximum number of modules that should be returned. Has to be > 0","start":"Start of the page. Has to be a module or start pointer (0x1 address)"},"returns":{"array":"Array of modules.","next":"Start of the next page."}},"getOwners()":{"returns":{"_0":"Array of Safe owners."}},"getStorageAt(uint256,uint256)":{"params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"getThreshold()":{"returns":{"_0":"Threshold number."}},"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"params":{"_nonce":"Transaction nonce.","baseGas":"Gas costs for data used to trigger the safe transaction.","data":"Data payload.","gasPrice":"Maximum gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Fas that should be used for the safe transaction.","to":"Destination address.","value":"Ether value."},"returns":{"_0":"Transaction hash."}},"isModuleEnabled(address)":{"returns":{"_0":"True if the module is enabled"}},"isOwner(address)":{"returns":{"_0":"Boolean if owner is an owner of the Safe."}},"removeOwner(address,address,uint256)":{"details":"This can only be done via a Safe transaction.","params":{"_threshold":"New threshold.","owner":"Owner address to be removed.","prevOwner":"Owner that pointed to the owner to be removed in the linked list"}},"setFallbackHandler(address)":{"details":"Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.","params":{"handler":"contract to handle fallback calls."}},"setGuard(address)":{"details":"Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      ⚠️ IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.","params":{"guard":"The address of the guard to be used or the 0 address to disable the guard"}},"setup(address[],uint256,address,bytes,address,address,uint256,address)":{"details":"This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.","params":{"_owners":"List of Safe owners.","_threshold":"Number of required confirmations for a Safe transaction.","data":"Data payload for optional delegate call.","fallbackHandler":"Handler for fallback calls to this contract","payment":"Value that should be paid","paymentReceiver":"Address that should receive the payment (or 0 if tx.origin)","paymentToken":"Token that should be used for the payment (0 is ETH)","to":"Contract address for optional delegate call."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}},"swapOwner(address,address,address)":{"details":"This can only be done via a Safe transaction.","params":{"newOwner":"New owner address.","oldOwner":"Owner address to be replaced.","prevOwner":"Owner that pointed to the owner to be replaced in the linked list"}}},"title":"Safe - A multisignature wallet with support for confirmations using signed messages based on EIP-712."},"id":31}