{"abi":[{"type":"constructor","inputs":[{"name":"_attestationStation","type":"address","internalType":"contract AttestationStation"},{"name":"_allowlistAttestor","type":"address","internalType":"address"},{"name":"_coinbaseQuestAttestor","type":"address","internalType":"address"},{"name":"_optimistInviter","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"ALLOWLIST_ATTESTOR","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"ATTESTATION_STATION","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract AttestationStation"}],"stateMutability":"view"},{"type":"function","name":"COINBASE_QUEST_ATTESTOR","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"OPTIMIST_CAN_MINT_ATTESTATION_KEY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"OPTIMIST_INVITER","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToMint","inputs":[{"name":"_claimer","type":"address","internalType":"address"}],"outputs":[{"name":"allowed_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"}],"bytecode":{"object":"0x61010060405234801561001157600080fd5b506040516106ff3803806106ff8339810160408190526100309161006a565b6001600160a01b0393841660805291831660a052821660c0521660e0526100c9565b6001600160a01b038116811461006757600080fd5b50565b6000806000806080858703121561008057600080fd5b845161008b81610052565b602086015190945061009c81610052565b60408601519093506100ad81610052565b60608601519092506100be81610052565b939692955090935050565b60805160a05160c05160e0516105e261011d6000396000818161014f01526102eb0152600081816092015261029e0152600081816101d201526102510152600081816101ab015261038601526105e26000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063819f7e841161005b578063819f7e8414610171578063db083d71146101a6578063db3c3163146101cd578063e7bd804e146101f457600080fd5b80633ac52df71461008d5780634813d8a6146100de57806354fd4d50146101015780635e4f489a1461014a575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f16100ec36600461041d565b61021b565b60405190151581526020016100d5565b61013d6040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100d5919061048a565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f636f696e626173652e71756573742d656c696769626c6500000000000000000081565b6040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000081565b60006102268261024a565b80610235575061023582610297565b806102445750610244826102e4565b92915050565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f636f696e626173652e71756573742d656c696769626c6500000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e766974650000005b6040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015283811660248301526044820183905260009182917f000000000000000000000000000000000000000000000000000000000000000016906329b42cb590606401600060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610413919081019061050a565b5111949350505050565b60006020828403121561042f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045357600080fd5b9392505050565b60005b8381101561047557818101518382015260200161045d565b83811115610484576000848401525b50505050565b60208152600082518060208401526104a981604085016020870161045a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561051c57600080fd5b815167ffffffffffffffff8082111561053457600080fd5b818401915084601f83011261054857600080fd5b81518181111561055a5761055a6104db565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105a0576105a06104db565b816040528281528760208487010111156105b957600080fd5b6105ca83602083016020880161045a565b97965050505050505056fea164736f6c634300080f000a","sourceMap":"536:5071:215:-:0;;;1970:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2156:41:215;;;;;2207:39;;;;;2256:48;;;;2314:35;;;536:5071;;14:151:350;-1:-1:-1;;;;;109:31:350;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:763::-;296:6;304;312;320;373:3;361:9;352:7;348:23;344:33;341:53;;;390:1;387;380:12;341:53;422:9;416:16;441:51;486:5;441:51;:::i;:::-;561:2;546:18;;540:25;511:5;;-1:-1:-1;574:53:350;540:25;574:53;:::i;:::-;698:2;683:18;;677:25;646:7;;-1:-1:-1;711:53:350;677:25;711:53;:::i;:::-;835:2;820:18;;814:25;783:7;;-1:-1:-1;848:53:350;814:25;848:53;:::i;:::-;170:763;;;;-1:-1:-1;170:763:350;;-1:-1:-1;;170:763:350:o;:::-;536:5071:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063819f7e841161005b578063819f7e8414610171578063db083d71146101a6578063db3c3163146101cd578063e7bd804e146101f457600080fd5b80633ac52df71461008d5780634813d8a6146100de57806354fd4d50146101015780635e4f489a1461014a575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f16100ec36600461041d565b61021b565b60405190151581526020016100d5565b61013d6040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100d5919061048a565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f636f696e626173652e71756573742d656c696769626c6500000000000000000081565b6040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000081565b60006102268261024a565b80610235575061023582610297565b806102445750610244826102e4565b92915050565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f636f696e626173652e71756573742d656c696769626c6500000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e766974650000005b6040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015283811660248301526044820183905260009182917f000000000000000000000000000000000000000000000000000000000000000016906329b42cb590606401600060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610413919081019061050a565b5111949350505050565b60006020828403121561042f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045357600080fd5b9392505050565b60005b8381101561047557818101518382015260200161045d565b83811115610484576000848401525b50505050565b60208152600082518060208401526104a981604085016020870161045a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561051c57600080fd5b815167ffffffffffffffff8082111561053457600080fd5b818401915084601f83011261054857600080fd5b81518181111561055a5761055a6104db565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105a0576105a06104db565b816040528281528760208487010111156105b957600080fd5b6105ca83602083016020880161045a565b97965050505050505056fea164736f6c634300080f000a","sourceMap":"536:5071:215:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:48;;;;;;;;190:42:350;178:55;;;160:74;;148:2;133:18;1319:48:215;;;;;;;;3159:267;;;;;;:::i;:::-;;:::i;:::-;;;724:14:350;;717:22;699:41;;687:2;672:18;3159:267:215;559:187:350;1611:40:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1500:41::-;;;;;892:100;;958:34;892:100;;;;;1607:25:350;;;1595:2;1580:18;892:100:215;1461:177:350;1059:55:215;;;;;1192:43;;;;;702:88;;762:28;702:88;;3159:267;3223:13;3259:46;3296:8;3259:36;:46::i;:::-;:100;;;;3309:50;3350:8;3309:40;:50::i;:::-;3259:160;;;;3375:44;3410:8;3375:34;:44::i;:::-;3248:171;3159:267;-1:-1:-1;;3159:267:215:o;3680:268::-;3767:11;3856:85;3877:18;3897:8;762:28;3856:20;:85::i;4165:283::-;4256:11;4345:96;4366:23;4391:8;958:34;4345:20;:96::i;4672:322::-;4757:11;4852:135;4886:16;4904:8;388:40:217;5398:207:215;5531:56;;;;;:32;2184:15:350;;;5531:56:215;;;2166:34:350;2236:15;;;2216:18;;;2209:43;2268:18;;;2261:34;;;5499:11:215;;;;5531:19;:32;;;;2078:18:350;;5531:56:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;:67;;5398:207;-1:-1:-1;;;;5398:207:215:o;245:309:350:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;462:42;455:5;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:350:o;751:258::-;823:1;833:113;847:6;844:1;841:13;833:113;;;923:11;;;917:18;904:11;;;897:39;869:2;862:10;833:113;;;964:6;961:1;958:13;955:48;;;999:1;990:6;985:3;981:16;974:27;955:48;;751:258;;;:::o;1014:442::-;1163:2;1152:9;1145:21;1126:4;1195:6;1189:13;1238:6;1233:2;1222:9;1218:18;1211:34;1254:66;1313:6;1308:2;1297:9;1293:18;1288:2;1280:6;1276:15;1254:66;:::i;:::-;1372:2;1360:15;1377:66;1356:88;1341:104;;;;1447:2;1337:113;;1014:442;-1:-1:-1;;1014:442:350:o;2306:184::-;2358:77;2355:1;2348:88;2455:4;2452:1;2445:15;2479:4;2476:1;2469:15;2495:942;2574:6;2627:2;2615:9;2606:7;2602:23;2598:32;2595:52;;;2643:1;2640;2633:12;2595:52;2676:9;2670:16;2705:18;2746:2;2738:6;2735:14;2732:34;;;2762:1;2759;2752:12;2732:34;2800:6;2789:9;2785:22;2775:32;;2845:7;2838:4;2834:2;2830:13;2826:27;2816:55;;2867:1;2864;2857:12;2816:55;2896:2;2890:9;2918:2;2914;2911:10;2908:36;;;2924:18;;:::i;:::-;3058:2;3052:9;3120:4;3112:13;;2963:66;3108:22;;;3132:2;3104:31;3100:40;3088:53;;;3156:18;;;3176:22;;;3153:46;3150:72;;;3202:18;;:::i;:::-;3242:10;3238:2;3231:22;3277:2;3269:6;3262:18;3317:7;3312:2;3307;3303;3299:11;3295:20;3292:33;3289:53;;;3338:1;3335;3328:12;3289:53;3351:55;3403:2;3398;3390:6;3386:15;3381:2;3377;3373:11;3351:55;:::i;:::-;3425:6;2495:942;-1:-1:-1;;;;;;;2495:942:350:o","linkReferences":{},"immutableReferences":{"104425":[{"start":427,"length":32},{"start":902,"length":32}],"104428":[{"start":466,"length":32},{"start":593,"length":32}],"104431":[{"start":146,"length":32},{"start":670,"length":32}],"104434":[{"start":335,"length":32},{"start":747,"length":32}]}},"methodIdentifiers":{"ALLOWLIST_ATTESTOR()":"db3c3163","ATTESTATION_STATION()":"db083d71","COINBASE_QUEST_ATTESTOR()":"3ac52df7","COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()":"819f7e84","OPTIMIST_CAN_MINT_ATTESTATION_KEY()":"e7bd804e","OPTIMIST_INVITER()":"5e4f489a","isAllowedToMint(address)":"4813d8a6","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AttestationStation\",\"name\":\"_attestationStation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_allowlistAttestor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coinbaseQuestAttestor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimistInviter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOWLIST_ATTESTOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ATTESTATION_STATION\",\"outputs\":[{\"internalType\":\"contract AttestationStation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COINBASE_QUEST_ATTESTOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMIST_CAN_MINT_ATTESTATION_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMIST_INVITER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"isAllowedToMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_allowlistAttestor\":\"Address of the allowlist attestor.\",\"_attestationStation\":\"Address of the AttestationStation contract.\",\"_coinbaseQuestAttestor\":\"Address of the Coinbase Quest attestor.\",\"_optimistInviter\":\"Address of the OptimistInviter contract.\"}},\"isAllowedToMint(address)\":{\"params\":{\"_claimer\":\"Address to check.\"},\"returns\":{\"allowed_\":\"Whether or not the address is allowed to mint yet.\"}}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.1.0\"}},\"title\":\"OptimistAllowlist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ALLOWLIST_ATTESTOR()\":{\"notice\":\"Attestor that issues 'optimist.can-mint' attestations.\"},\"ATTESTATION_STATION()\":{\"notice\":\"Address of the AttestationStation contract.\"},\"COINBASE_QUEST_ATTESTOR()\":{\"notice\":\"Attestor that issues 'coinbase.quest-eligible' attestations.\"},\"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()\":{\"notice\":\"Attestation key used by Coinbase to issue attestations for Quest participants.\"},\"OPTIMIST_CAN_MINT_ATTESTATION_KEY()\":{\"notice\":\"Attestation key used by the AllowlistAttestor to manually add addresses to the         allowlist.\"},\"OPTIMIST_INVITER()\":{\"notice\":\"Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'         attestations.\"},\"isAllowedToMint(address)\":{\"notice\":\"Checks whether a given address is allowed to mint the Optimist NFT yet. Since the         Optimist NFT will also be used as part of the Citizens House, mints are currently         restricted. Eventually anyone will be able to mint.         Currently, address is allowed to mint if it satisfies any of the following:          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter             contract.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"Source of truth for whether an address is able to mint an Optimist NFT.         isAllowedToMint function checks various signals to return boolean value         for whether an address is eligible or not.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/op-nft/OptimistAllowlist.sol\":\"OptimistAllowlist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x756accab2fc86dbe076dc340af05c06c732815392a8cbab6524dc971d4957208\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4bf7f1a162318d31c39a4d34d46ada80cdacd51c24a110f411ec245c1b6a4ef\",\"dweb:/ipfs/QmScehXXWTKDnUr9ohMb1o8zButujNP9SDAWRSnDy6jpdK\"]},\"src/periphery/op-nft/OptimistAllowlist.sol\":{\"keccak256\":\"0xd05ecf4ac35004c36e862734eb19a70cdc52bf187c52a5bd4b882b7c0bf52d77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca3c5ed23a7ae0e6e2864974a903e5aa5e34959cf8ad05ce946b9dce24482a80\",\"dweb:/ipfs/QmdgnFg8mh1s81qn7kBUkJNtnEpEzh6Q53WL4HjQDDbrfU\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract AttestationStation","name":"_attestationStation","type":"address"},{"internalType":"address","name":"_allowlistAttestor","type":"address"},{"internalType":"address","name":"_coinbaseQuestAttestor","type":"address"},{"internalType":"address","name":"_optimistInviter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"view","type":"function","name":"ALLOWLIST_ATTESTOR","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ATTESTATION_STATION","outputs":[{"internalType":"contract AttestationStation","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"COINBASE_QUEST_ATTESTOR","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OPTIMIST_CAN_MINT_ATTESTATION_KEY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OPTIMIST_INVITER","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_claimer","type":"address"}],"stateMutability":"view","type":"function","name":"isAllowedToMint","outputs":[{"internalType":"bool","name":"allowed_","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"_allowlistAttestor":"Address of the allowlist attestor.","_attestationStation":"Address of the AttestationStation contract.","_coinbaseQuestAttestor":"Address of the Coinbase Quest attestor.","_optimistInviter":"Address of the OptimistInviter contract."}},"isAllowedToMint(address)":{"params":{"_claimer":"Address to check."},"returns":{"allowed_":"Whether or not the address is allowed to mint yet."}}},"version":1},"userdoc":{"kind":"user","methods":{"ALLOWLIST_ATTESTOR()":{"notice":"Attestor that issues 'optimist.can-mint' attestations."},"ATTESTATION_STATION()":{"notice":"Address of the AttestationStation contract."},"COINBASE_QUEST_ATTESTOR()":{"notice":"Attestor that issues 'coinbase.quest-eligible' attestations."},"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()":{"notice":"Attestation key used by Coinbase to issue attestations for Quest participants."},"OPTIMIST_CAN_MINT_ATTESTATION_KEY()":{"notice":"Attestation key used by the AllowlistAttestor to manually add addresses to the         allowlist."},"OPTIMIST_INVITER()":{"notice":"Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'         attestations."},"isAllowedToMint(address)":{"notice":"Checks whether a given address is allowed to mint the Optimist NFT yet. Since the         Optimist NFT will also be used as part of the Citizens House, mints are currently         restricted. Eventually anyone will be able to mint.         Currently, address is allowed to mint if it satisfies any of the following:          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter             contract."},"version()":{"notice":"Semantic version."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/periphery/op-nft/OptimistAllowlist.sol":"OptimistAllowlist"},"evmVersion":"london","libraries":{}},"sources":{"src/periphery/op-nft/AttestationStation.sol":{"keccak256":"0x756accab2fc86dbe076dc340af05c06c732815392a8cbab6524dc971d4957208","urls":["bzz-raw://a4bf7f1a162318d31c39a4d34d46ada80cdacd51c24a110f411ec245c1b6a4ef","dweb:/ipfs/QmScehXXWTKDnUr9ohMb1o8zButujNP9SDAWRSnDy6jpdK"],"license":"MIT"},"src/periphery/op-nft/OptimistAllowlist.sol":{"keccak256":"0xd05ecf4ac35004c36e862734eb19a70cdc52bf187c52a5bd4b882b7c0bf52d77","urls":["bzz-raw://ca3c5ed23a7ae0e6e2864974a903e5aa5e34959cf8ad05ce946b9dce24482a80","dweb:/ipfs/QmdgnFg8mh1s81qn7kBUkJNtnEpEzh6Q53WL4HjQDDbrfU"],"license":"MIT"},"src/periphery/op-nft/libraries/OptimistConstants.sol":{"keccak256":"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c","urls":["bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268","dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"ALLOWLIST_ATTESTOR()":{"notice":"Attestor that issues 'optimist.can-mint' attestations."},"ATTESTATION_STATION()":{"notice":"Address of the AttestationStation contract."},"COINBASE_QUEST_ATTESTOR()":{"notice":"Attestor that issues 'coinbase.quest-eligible' attestations."},"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()":{"notice":"Attestation key used by Coinbase to issue attestations for Quest participants."},"OPTIMIST_CAN_MINT_ATTESTATION_KEY()":{"notice":"Attestation key used by the AllowlistAttestor to manually add addresses to the         allowlist."},"OPTIMIST_INVITER()":{"notice":"Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'         attestations."},"isAllowedToMint(address)":{"notice":"Checks whether a given address is allowed to mint the Optimist NFT yet. Since the         Optimist NFT will also be used as part of the Citizens House, mints are currently         restricted. Eventually anyone will be able to mint.         Currently, address is allowed to mint if it satisfies any of the following:          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter             contract."},"version()":{"notice":"Semantic version."}},"notice":"Source of truth for whether an address is able to mint an Optimist NFT.         isAllowedToMint function checks various signals to return boolean value         for whether an address is eligible or not."},"devdoc":{"version":1,"kind":"dev","methods":{"constructor":{"params":{"_allowlistAttestor":"Address of the allowlist attestor.","_attestationStation":"Address of the AttestationStation contract.","_coinbaseQuestAttestor":"Address of the Coinbase Quest attestor.","_optimistInviter":"Address of the OptimistInviter contract."}},"isAllowedToMint(address)":{"params":{"_claimer":"Address to check."},"returns":{"allowed_":"Whether or not the address is allowed to mint yet."}}},"title":"OptimistAllowlist"},"id":215}