{"abi":[{"type":"function","name":"getAddress","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"addr_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBool","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getBytes32","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getUint","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setAddress","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_address","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBool","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBytes32","inputs":[{"name":"slots","type":"tuple[]","internalType":"struct StorageSetter.Slot[]","components":[{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBytes32","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setUint","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061046a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a6ed563e11610076578063bd02d0f51161005b578063bd02d0f51461018e578063ca446dd9146101b8578063e2a4853a1461011557600080fd5b8063a6ed563e1461018e578063abfdcced146101aa57600080fd5b80634e91db08116100a75780634e91db081461011557806354fd4d50146101275780637ae1cfca1461017057600080fd5b80630528afe2146100c357806321f8a721146100d8575b600080fd5b6100d66100d1366004610239565b6101c6565b005b6100eb6100e63660046102ae565b610229565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d66101233660046102c7565b9055565b6101636040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b60405161010c91906102e9565b61017e6100e63660046102ae565b604051901515815260200161010c565b61019c6100e63660046102ae565b60405190815260200161010c565b6100d661012336600461035c565b6100d6610123366004610391565b8060005b81811015610223576102118484838181106101e7576101e76103cf565b90506040020160000135858584818110610203576102036103cf565b905060400201602001359055565b8061021b816103fe565b9150506101ca565b50505050565b6000610233825490565b92915050565b6000806020838503121561024c57600080fd5b823567ffffffffffffffff8082111561026457600080fd5b818501915085601f83011261027857600080fd5b81358181111561028757600080fd5b8660208260061b850101111561029c57600080fd5b60209290920196919550909350505050565b6000602082840312156102c057600080fd5b5035919050565b600080604083850312156102da57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b81811015610316578581018301518582016040015282016102fa565b81811115610328576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000806040838503121561036f57600080fd5b823591506020830135801515811461038657600080fd5b809150509250929050565b600080604083850312156103a457600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff8116811461038657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610456577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"416:2030:231:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a6ed563e11610076578063bd02d0f51161005b578063bd02d0f51461018e578063ca446dd9146101b8578063e2a4853a1461011557600080fd5b8063a6ed563e1461018e578063abfdcced146101aa57600080fd5b80634e91db08116100a75780634e91db081461011557806354fd4d50146101275780637ae1cfca1461017057600080fd5b80630528afe2146100c357806321f8a721146100d8575b600080fd5b6100d66100d1366004610239565b6101c6565b005b6100eb6100e63660046102ae565b610229565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d66101233660046102c7565b9055565b6101636040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b60405161010c91906102e9565b61017e6100e63660046102ae565b604051901515815260200161010c565b61019c6100e63660046102ae565b60405190815260200161010c565b6100d661012336600461035c565b6100d6610123366004610391565b8060005b81811015610223576102118484838181106101e7576101e76103cf565b90506040020160000135858584818110610203576102036103cf565b905060400201602001359055565b8061021b816103fe565b9150506101ca565b50505050565b6000610233825490565b92915050565b6000806020838503121561024c57600080fd5b823567ffffffffffffffff8082111561026457600080fd5b818501915085601f83011261027857600080fd5b81358181111561028757600080fd5b8660208260061b850101111561029c57600080fd5b60209290920196919550909350505050565b6000602082840312156102c057600080fd5b5035919050565b600080604083850312156102da57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b81811015610316578581018301518582016040015282016102fa565b81811115610328576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000806040838503121561036f57600080fd5b823591506020830135801515811461038657600080fd5b809150509250929050565b600080604083850312156103a457600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff8116811461038657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610456577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"416:2030:231:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:211;;;;;;:::i;:::-;;:::i;:::-;;1990:123;;;;;;:::i;:::-;;:::i;:::-;;;1021:42:350;1009:55;;;991:74;;979:2;964:18;1990:123:231;;;;;;;;835:108;;;;;;:::i;:::-;2703:21:196;;835:108:231;646:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2328:116::-;;;;;;:::i;:::-;;;2155:14:350;;2148:22;2130:41;;2118:2;2103:18;2328:116:231;1990:187:350;1286:125:231;;;;;;:::i;:::-;;;2328:25:350;;;2316:2;2301:18;1286:125:231;2182:177:350;2170:99:231;;;;;;:::i;1815:112::-;;;;;;:::i;1013:211::-;1090:5;1073:14;1112:106;1132:6;1128:1;:10;1112:106;;;1159:48;1178:5;;1184:1;1178:8;;;;;;;:::i;:::-;;;;;;:12;;;1192:5;;1198:1;1192:8;;;;;;;:::i;:::-;;;;;;:14;;;2703:21:196;;2610:130;1159:48:231;1140:3;;;;:::i;:::-;;;;1112:106;;;;1063:161;1013:211;;:::o;1990:123::-;2048:13;2081:25;2100:5;535:12:196;;420:143;2081:25:231;2073:33;1990:123;-1:-1:-1;;1990:123:231:o;14:641:350:-;126:6;134;187:2;175:9;166:7;162:23;158:32;155:52;;;203:1;200;193:12;155:52;243:9;230:23;272:18;313:2;305:6;302:14;299:34;;;329:1;326;319:12;299:34;367:6;356:9;352:22;342:32;;412:7;405:4;401:2;397:13;393:27;383:55;;434:1;431;424:12;383:55;474:2;461:16;500:2;492:6;489:14;486:34;;;516:1;513;506:12;486:34;569:7;564:2;554:6;551:1;547:14;543:2;539:23;535:32;532:45;529:65;;;590:1;587;580:12;529:65;621:2;613:11;;;;;643:6;;-1:-1:-1;14:641:350;;-1:-1:-1;;;;14:641:350:o;660:180::-;719:6;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;-1:-1:-1;811:23:350;;660:180;-1:-1:-1;660:180:350:o;1076:248::-;1144:6;1152;1205:2;1193:9;1184:7;1180:23;1176:32;1173:52;;;1221:1;1218;1211:12;1173:52;-1:-1:-1;;1244:23:350;;;1314:2;1299:18;;;1286:32;;-1:-1:-1;1076:248:350:o;1329:656::-;1441:4;1470:2;1499;1488:9;1481:21;1531:6;1525:13;1574:6;1569:2;1558:9;1554:18;1547:34;1599:1;1609:140;1623:6;1620:1;1617:13;1609:140;;;1718:14;;;1714:23;;1708:30;1684:17;;;1703:2;1680:26;1673:66;1638:10;;1609:140;;;1767:6;1764:1;1761:13;1758:91;;;1837:1;1832:2;1823:6;1812:9;1808:22;1804:31;1797:42;1758:91;-1:-1:-1;1901:2:350;1889:15;1906:66;1885:88;1870:104;;;;1976:2;1866:113;;1329:656;-1:-1:-1;;;1329:656:350:o;2364:341::-;2429:6;2437;2490:2;2478:9;2469:7;2465:23;2461:32;2458:52;;;2506:1;2503;2496:12;2458:52;2542:9;2529:23;2519:33;;2602:2;2591:9;2587:18;2574:32;2649:5;2642:13;2635:21;2628:5;2625:32;2615:60;;2671:1;2668;2661:12;2615:60;2694:5;2684:15;;;2364:341;;;;;:::o;2892:377::-;2960:6;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3073:9;3060:23;3050:33;;3133:2;3122:9;3118:18;3105:32;3177:42;3170:5;3166:54;3159:5;3156:65;3146:93;;3235:1;3232;3225:12;3527:184;3579:77;3576:1;3569:88;3676:4;3673:1;3666:15;3700:4;3697:1;3690:15;3716:349;3755:3;3786:66;3779:5;3776:77;3773:257;;3886:77;3883:1;3876:88;3987:4;3984:1;3977:15;4015:4;4012:1;4005:15;3773:257;-1:-1:-1;4057:1:350;4046:13;;3716:349::o","linkReferences":{}},"methodIdentifiers":{"getAddress(bytes32)":"21f8a721","getBool(bytes32)":"7ae1cfca","getBytes32(bytes32)":"a6ed563e","getUint(bytes32)":"bd02d0f5","setAddress(bytes32,address)":"ca446dd9","setBool(bytes32,bool)":"abfdcced","setBytes32((bytes32,bytes32)[])":"0528afe2","setBytes32(bytes32,bytes32)":"4e91db08","setUint(bytes32,uint256)":"e2a4853a","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"struct StorageSetter.Slot[]\",\"name\":\"slots\",\"type\":\"tuple[]\"}],\"name\":\"setBytes32\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"setBytes32\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.2.0\"}},\"title\":\"StorageSetter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddress(bytes32)\":{\"notice\":\"Retrieves an address value from `_slot`.\"},\"getBool(bytes32)\":{\"notice\":\"Retrieves a bool value from `_slot`.\"},\"getBytes32(bytes32)\":{\"notice\":\"Retrieves a bytes32 value from `_slot`.\"},\"getUint(bytes32)\":{\"notice\":\"Retrieves a uint256 value from `_slot`.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Stores an address `_value` at `_slot`.\"},\"setBool(bytes32,bool)\":{\"notice\":\"Stores a bool `_value` at `_slot`.\"},\"setBytes32((bytes32,bytes32)[])\":{\"notice\":\"Stores a bytes32 value at each key in `_slots`.\"},\"setBytes32(bytes32,bytes32)\":{\"notice\":\"Stores a bytes32 `_value` at `_slot`. Any storage slots that         are packed should be set through this interface.\"},\"setUint(bytes32,uint256)\":{\"notice\":\"Stores a uint256 `_value` at `_slot`.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"A simple contract that allows setting arbitrary storage slots.         WARNING: this contract is not safe to be called by untrusted parties.         It is only meant as an intermediate step during upgrades.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/universal/StorageSetter.sol\":\"StorageSetter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/libraries/Storage.sol\":{\"keccak256\":\"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269\",\"dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/universal/StorageSetter.sol\":{\"keccak256\":\"0x6fd8feff6ed9a3a20ed599c2b838b79f424f66ad2f3b618f4d1aebf9a867491b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df55fd09a8a9cf4e55e188fff90d623606898c123b8e21d809f206c2328455f\",\"dweb:/ipfs/QmZWzbfkUYAxfN5eRtEpPjr6WcK86ZjsiJ8PVm7bULByPu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getAddress","outputs":[{"internalType":"address","name":"addr_","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBool","outputs":[{"internalType":"bool","name":"value_","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBytes32","outputs":[{"internalType":"bytes32","name":"value_","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getUint","outputs":[{"internalType":"uint256","name":"value_","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setAddress"},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"bool","name":"_value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setBool"},{"inputs":[{"internalType":"struct StorageSetter.Slot[]","name":"slots","type":"tuple[]","components":[{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"setBytes32"},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"bytes32","name":"_value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBytes32"},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setUint"},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"getAddress(bytes32)":{"notice":"Retrieves an address value from `_slot`."},"getBool(bytes32)":{"notice":"Retrieves a bool value from `_slot`."},"getBytes32(bytes32)":{"notice":"Retrieves a bytes32 value from `_slot`."},"getUint(bytes32)":{"notice":"Retrieves a uint256 value from `_slot`."},"setAddress(bytes32,address)":{"notice":"Stores an address `_value` at `_slot`."},"setBool(bytes32,bool)":{"notice":"Stores a bool `_value` at `_slot`."},"setBytes32((bytes32,bytes32)[])":{"notice":"Stores a bytes32 value at each key in `_slots`."},"setBytes32(bytes32,bytes32)":{"notice":"Stores a bytes32 `_value` at `_slot`. Any storage slots that         are packed should be set through this interface."},"setUint(bytes32,uint256)":{"notice":"Stores a uint256 `_value` at `_slot`."},"version()":{"notice":"Semantic version."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/universal/StorageSetter.sol":"StorageSetter"},"evmVersion":"london","libraries":{}},"sources":{"src/libraries/Storage.sol":{"keccak256":"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f","urls":["bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269","dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"},"src/universal/StorageSetter.sol":{"keccak256":"0x6fd8feff6ed9a3a20ed599c2b838b79f424f66ad2f3b618f4d1aebf9a867491b","urls":["bzz-raw://0df55fd09a8a9cf4e55e188fff90d623606898c123b8e21d809f206c2328455f","dweb:/ipfs/QmZWzbfkUYAxfN5eRtEpPjr6WcK86ZjsiJ8PVm7bULByPu"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"getAddress(bytes32)":{"notice":"Retrieves an address value from `_slot`."},"getBool(bytes32)":{"notice":"Retrieves a bool value from `_slot`."},"getBytes32(bytes32)":{"notice":"Retrieves a bytes32 value from `_slot`."},"getUint(bytes32)":{"notice":"Retrieves a uint256 value from `_slot`."},"setAddress(bytes32,address)":{"notice":"Stores an address `_value` at `_slot`."},"setBool(bytes32,bool)":{"notice":"Stores a bool `_value` at `_slot`."},"setBytes32((bytes32,bytes32)[])":{"notice":"Stores a bytes32 value at each key in `_slots`."},"setBytes32(bytes32,bytes32)":{"notice":"Stores a bytes32 `_value` at `_slot`. Any storage slots that         are packed should be set through this interface."},"setUint(bytes32,uint256)":{"notice":"Stores a uint256 `_value` at `_slot`."},"version()":{"notice":"Semantic version."}},"notice":"A simple contract that allows setting arbitrary storage slots.         WARNING: this contract is not safe to be called by untrusted parties.         It is only meant as an intermediate step during upgrades."},"devdoc":{"version":1,"kind":"dev","title":"StorageSetter"},"id":231}