{"abi":[{"type":"constructor","inputs":[{"name":"_gameType","type":"uint32","internalType":"GameType"},{"name":"_absolutePrestate","type":"bytes32","internalType":"Claim"},{"name":"_maxGameDepth","type":"uint256","internalType":"uint256"},{"name":"_splitDepth","type":"uint256","internalType":"uint256"},{"name":"_gameDuration","type":"uint64","internalType":"Duration"},{"name":"_vm","type":"address","internalType":"contract IBigStepper"},{"name":"_weth","type":"address","internalType":"contract IDelayedWETH"},{"name":"_anchorStateRegistry","type":"address","internalType":"contract IAnchorStateRegistry"},{"name":"_l2ChainId","type":"uint256","internalType":"uint256"},{"name":"_proposer","type":"address","internalType":"address"},{"name":"_challenger","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"absolutePrestate","inputs":[],"outputs":[{"name":"absolutePrestate_","type":"bytes32","internalType":"Claim"}],"stateMutability":"view"},{"type":"function","name":"addLocalData","inputs":[{"name":"_ident","type":"uint256","internalType":"uint256"},{"name":"_execLeafIdx","type":"uint256","internalType":"uint256"},{"name":"_partOffset","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attack","inputs":[{"name":"_parentIndex","type":"uint256","internalType":"uint256"},{"name":"_claim","type":"bytes32","internalType":"Claim"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"claimCredit","inputs":[{"name":"_recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimData","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"parentIndex","type":"uint32","internalType":"uint32"},{"name":"counteredBy","type":"address","internalType":"address"},{"name":"claimant","type":"address","internalType":"address"},{"name":"bond","type":"uint128","internalType":"uint128"},{"name":"claim","type":"bytes32","internalType":"Claim"},{"name":"position","type":"uint128","internalType":"Position"},{"name":"clock","type":"uint128","internalType":"Clock"}],"stateMutability":"view"},{"type":"function","name":"claimDataLen","inputs":[],"outputs":[{"name":"len_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"createdAt","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"credit","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"defend","inputs":[{"name":"_parentIndex","type":"uint256","internalType":"uint256"},{"name":"_claim","type":"bytes32","internalType":"Claim"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"extraData","inputs":[],"outputs":[{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"gameData","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"},{"name":"rootClaim_","type":"bytes32","internalType":"Claim"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"gameDuration","inputs":[],"outputs":[{"name":"gameDuration_","type":"uint64","internalType":"Duration"}],"stateMutability":"view"},{"type":"function","name":"gameType","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"}],"stateMutability":"view"},{"type":"function","name":"getRequiredBond","inputs":[{"name":"_position","type":"uint128","internalType":"Position"}],"outputs":[{"name":"requiredBond_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"l1Head","inputs":[],"outputs":[{"name":"l1Head_","type":"bytes32","internalType":"Hash"}],"stateMutability":"pure"},{"type":"function","name":"l2BlockNumber","inputs":[],"outputs":[{"name":"l2BlockNumber_","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"l2ChainId","inputs":[],"outputs":[{"name":"l2ChainId_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxGameDepth","inputs":[],"outputs":[{"name":"maxGameDepth_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"move","inputs":[{"name":"_challengeIndex","type":"uint256","internalType":"uint256"},{"name":"_claim","type":"bytes32","internalType":"Claim"},{"name":"_isAttack","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"resolve","inputs":[],"outputs":[{"name":"status_","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"nonpayable"},{"type":"function","name":"resolveClaim","inputs":[{"name":"_claimIndex","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"resolvedAt","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"rootClaim","inputs":[],"outputs":[{"name":"rootClaim_","type":"bytes32","internalType":"Claim"}],"stateMutability":"pure"},{"type":"function","name":"splitDepth","inputs":[],"outputs":[{"name":"splitDepth_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"startingBlockNumber","inputs":[],"outputs":[{"name":"startingBlockNumber_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"startingOutputRoot","inputs":[],"outputs":[{"name":"root","type":"bytes32","internalType":"Hash"},{"name":"l2BlockNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"startingRootHash","inputs":[],"outputs":[{"name":"startingRootHash_","type":"bytes32","internalType":"Hash"}],"stateMutability":"view"},{"type":"function","name":"status","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"view"},{"type":"function","name":"step","inputs":[{"name":"_claimIndex","type":"uint256","internalType":"uint256"},{"name":"_isAttack","type":"bool","internalType":"bool"},{"name":"_stateData","type":"bytes","internalType":"bytes"},{"name":"_proof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"vm","inputs":[],"outputs":[{"name":"vm_","type":"address","internalType":"contract IBigStepper"}],"stateMutability":"view"},{"type":"function","name":"weth","inputs":[],"outputs":[{"name":"weth_","type":"address","internalType":"contract IDelayedWETH"}],"stateMutability":"view"},{"type":"event","name":"Move","inputs":[{"name":"parentIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claim","type":"bytes32","indexed":true,"internalType":"Claim"},{"name":"claimant","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Resolved","inputs":[{"name":"status","type":"uint8","indexed":true,"internalType":"enum GameStatus"}],"anonymous":false},{"type":"error","name":"AlreadyInitialized","inputs":[]},{"type":"error","name":"AnchorRootNotFound","inputs":[]},{"type":"error","name":"BadAuth","inputs":[]},{"type":"error","name":"BondTransferFailed","inputs":[]},{"type":"error","name":"CannotDefendRootClaim","inputs":[]},{"type":"error","name":"ClaimAboveSplit","inputs":[]},{"type":"error","name":"ClaimAlreadyExists","inputs":[]},{"type":"error","name":"ClaimAlreadyResolved","inputs":[]},{"type":"error","name":"ClockNotExpired","inputs":[]},{"type":"error","name":"ClockTimeExceeded","inputs":[]},{"type":"error","name":"DuplicateStep","inputs":[]},{"type":"error","name":"GameDepthExceeded","inputs":[]},{"type":"error","name":"GameNotInProgress","inputs":[]},{"type":"error","name":"IncorrectBondAmount","inputs":[]},{"type":"error","name":"InvalidLocalIdent","inputs":[]},{"type":"error","name":"InvalidParent","inputs":[]},{"type":"error","name":"InvalidPrestate","inputs":[]},{"type":"error","name":"InvalidSplitDepth","inputs":[]},{"type":"error","name":"NoCreditToClaim","inputs":[]},{"type":"error","name":"OutOfOrderResolution","inputs":[]},{"type":"error","name":"UnexpectedRootClaim","inputs":[{"name":"rootClaim","type":"bytes32","internalType":"Claim"}]},{"type":"error","name":"ValidStep","inputs":[]}],"bytecode":{"object":"0x6101e06040523480156200001257600080fd5b5060405162004ba138038062004ba18339810160408190526200003591620000e6565b8a8a8a8a8a8a8a8a8a8686106200005f5760405163e62ccf3960e01b815260040160405180910390fd5b63ffffffff9098166101205260809690965260a09490945260c0929092526001600160401b031660e0526001600160a01b03908116610100529081166101405290811661016052610180919091529182166101a052166101c05250620001bd975050505050505050565b80516001600160a01b0381168114620000e157600080fd5b919050565b60008060008060008060008060008060006101608c8e0312156200010957600080fd5b8b5163ffffffff811681146200011e57600080fd5b809b505060208c0151995060408c0151985060608c0151975060808c015160018060401b03811681146200015157600080fd5b96506200016160a08d01620000c9565b95506200017160c08d01620000c9565b94506200018160e08d01620000c9565b93506101008c015192506200019a6101208d01620000c9565b9150620001ab6101408d01620000c9565b90509295989b509295989b9093969950565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c05161488b6200031660003960008181610c660152611026015260008181610c2701528181610ce10152610fe701526000818161068f01526114590152600081816109bf015261236d01526000818161032001528181610b14015281816122230152818161272401526139cf01526000818161050e015281816114f3015261232c0152600081816102cc01528181611122015261304a0152600081816106e20152818161165a0152611e4e0152600081816107150152818161132101528181611c4501528181611d0e01528181612ea5015281816133530152818161345b0152818161353701528181613a7c0152613cb601526000818161078c01528181610def01528181610e7501528181611cb101528181612d940152612ec60152600081816104d30152612f5c015261488b6000f3fe6080604052600436106101e75760003560e01c80638b85902b1161010e578063d5d44d80116100a7578063ec5e630811610079578063fa24f74311610061578063fa24f74314610759578063fa315aa91461077d578063fdffbb28146107b057005b8063ec5e630814610706578063f8f43ff61461073957005b8063d5d44d8014610653578063d6ae3cd514610680578063d8cc1a3c146106b3578063e1f0c376146106d357005b8063c395e1ca116100e0578063c395e1ca14610575578063c55cd0c714610595578063c6f0308c146105a8578063cf09e0d01461063257005b80638b85902b146104845780638d450a95146104c4578063bbdc02db146104f7578063bcef3b551461053857005b806357da950e116101805780636361506d116101525780636361506d1461041257806370872aa5146104525780638129fc1c146104675780638980e0cc1461046f57005b806357da950e1461039a578063609d3334146103ca57806360e27464146103df578063632247ea146103ff57005b806335fef567116101b957806335fef567146102aa5780633a768463146102bd5780633fc8cef31461031157806354fd4d501461034457005b806319effeb4146101f0578063200d2ed21461023b57806325fc2ace146102765780632810e1d61461029557005b366101ee57005b005b3480156101fc57600080fd5b5060005461021d9068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561024757600080fd5b5060005461026990700100000000000000000000000000000000900460ff1681565b604051610232919061412c565b34801561028257600080fd5b506006545b604051908152602001610232565b3480156102a157600080fd5b506102696107c3565b6101ee6102b836600461416d565b610a40565b3480156102c957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610232565b34801561031d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102ec565b34801561035057600080fd5b5061038d6040518060400160405280600581526020017f302e392e3000000000000000000000000000000000000000000000000000000081525081565b60405161023291906141fa565b3480156103a657600080fd5b506006546007546103b5919082565b60408051928352602083019190915201610232565b3480156103d657600080fd5b5061038d610a50565b3480156103eb57600080fd5b506101ee6103fa36600461422f565b610a63565b6101ee61040d366004614268565b610c0f565b34801561041e57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360200135610287565b34801561045e57600080fd5b50600754610287565b6101ee610cc9565b34801561047b57600080fd5b50600154610287565b34801561049057600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360400135610287565b3480156104d057600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b34801561050357600080fd5b5060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610232565b34801561054457600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900335610287565b34801561058157600080fd5b5061028761059036600461429d565b610d42565b6101ee6105a336600461416d565b610f2c565b3480156105b457600080fd5b506105c86105c33660046142cf565b610f38565b6040805163ffffffff909816885273ffffffffffffffffffffffffffffffffffffffff968716602089015295909416948601949094526fffffffffffffffffffffffffffffffff9182166060860152608085015291821660a08401521660c082015260e001610232565b34801561063e57600080fd5b5060005461021d9067ffffffffffffffff1681565b34801561065f57600080fd5b5061028761066e36600461422f565b60026020526000908152604090205481565b34801561068c57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b3480156106bf57600080fd5b506101ee6106ce366004614331565b610fcf565b3480156106df57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061021d565b34801561071257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b34801561074557600080fd5b506101ee6107543660046143bb565b611094565b34801561076557600080fd5b5061076e6114f1565b604051610232939291906143e7565b34801561078957600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b6101ee6107be3660046142cf565b61154e565b600080600054700100000000000000000000000000000000900460ff1660028111156107f1576107f16140fd565b14610828576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460ff16610864576040517f9a07664600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008154811061089057610890614415565b6000918252602090912060059091020154640100000000900473ffffffffffffffffffffffffffffffffffffffff16146108cb5760016108ce565b60025b6000805467ffffffffffffffff421668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff82168117835592935083927fffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffff000000000000000000ffffffffffffffff9091161770010000000000000000000000000000000083600281111561097f5761097f6140fd565b021790556002811115610994576109946140fd565b6040517f5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da6090600090a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663838c2d1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a2557600080fd5b505af1158015610a39573d6000803e3d6000fd5b5050505090565b610a4c82826000610c0f565b5050565b6060610a5e604060206119b8565b905090565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040812080549082905590819003610ac8576040517f17bfe5f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063f3fef3a390604401600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610bca576040519150601f19603f3d011682016040523d82523d6000602084013e610bcf565b606091505b5050905080610c0a576040517f83e6cc6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480610c8857503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b610cbe576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c0a838383611a4f565b3273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d38576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d406122bd565b565b600080610de1836fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1690507f0000000000000000000000000000000000000000000000000000000000000000811115610e47576040517f56f57b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b642e90edd00062061a80630bebc2006000610e6283836144a2565b9050670de0b6b3a76400006000610e99827f00000000000000000000000000000000000000000000000000000000000000006144b6565b90506000610eb7610eb2670de0b6b3a7640000866144b6565b6127e9565b90506000610ec58484612a44565b90506000610ed38383612a93565b90506000610ee082612ac1565b90506000610eff82610efa670de0b6b3a76400008f6144b6565b612ca9565b90506000610f0d8b83612a93565b9050610f19818d6144b6565b9f9e505050505050505050505050505050565b610a4c82826001610c0f565b60018181548110610f4857600080fd5b60009182526020909120600590910201805460018201546002830154600384015460049094015463ffffffff8416955064010000000090930473ffffffffffffffffffffffffffffffffffffffff908116949216926fffffffffffffffffffffffffffffffff91821692918082169170010000000000000000000000000000000090041687565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061104857503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b61107e576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108c868686868686612ce3565b505050505050565b60008054700100000000000000000000000000000000900460ff1660028111156110c0576110c06140fd565b146110f7576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008061110686613318565b9350935093509350600061111c85858585613727565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561118b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111af91906144f3565b9050600189036112a75773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a8461120b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036020013590565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526024830191909152604482015260206064820152608481018a905260a4015b6020604051808303816000875af115801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a19190614510565b506114e6565b600289036112d35773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a848961120b565b600389036112ff5773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a848761120b565b6004890361141b5760006113456fffffffffffffffffffffffffffffffff85167f00000000000000000000000000000000000000000000000000000000000000006137e6565b6007546113529190614529565b61135d906001614529565b905073ffffffffffffffffffffffffffffffffffffffff82166352f0f3ad8b8560405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526004810192909252602482015260c084901b604482015260086064820152608481018b905260a4016020604051808303816000875af11580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114149190614510565b50506114e6565b600589036114b4576040517f52f0f3ad000000000000000000000000000000000000000000000000000000008152600481018a9052602481018390527f000000000000000000000000000000000000000000000000000000000000000060c01b6044820152600860648201526084810188905273ffffffffffffffffffffffffffffffffffffffff8216906352f0f3ad9060a40161125e565b6040517fff137e6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003356060611547610a50565b9050909192565b60008054700100000000000000000000000000000000900460ff16600281111561157a5761157a6140fd565b146115b1576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600182815481106115c6576115c6614415565b60009182526020822060059190910201600481015490925061161190700100000000000000000000000000000000900460401c67ffffffffffffffff165b67ffffffffffffffff1690565b600483015490915060009061164390700100000000000000000000000000000000900467ffffffffffffffff16611604565b61164d9042614541565b9050677fffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000060011c16611687828461456a565b67ffffffffffffffff16116116c8576040517ff2440b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526004602052604090208054851580156116e8575060055460ff165b1561171f576040517ff1a9458100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015801561172c57508515155b15611791578454640100000000900473ffffffffffffffffffffffffffffffffffffffff166000811561175f578161177b565b600187015473ffffffffffffffffffffffffffffffffffffffff165b9050611787818861389b565b5050505050505050565b60006fffffffffffffffffffffffffffffffff815b838110156118d75760008582815481106117c2576117c2614415565b6000918252602080832090910154808352600490915260409091205490915015611818576040517f9a07664600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001828154811061182d5761182d614415565b600091825260209091206005909102018054909150640100000000900473ffffffffffffffffffffffffffffffffffffffff16158015611886575060048101546fffffffffffffffffffffffffffffffff908116908516115b156118c4576001810154600482015473ffffffffffffffffffffffffffffffffffffffff90911695506fffffffffffffffffffffffffffffffff1693505b5050806118d090614596565b90506117a6565b5061191f73ffffffffffffffffffffffffffffffffffffffff8316156118fd5782611919565b600188015473ffffffffffffffffffffffffffffffffffffffff165b8861389b565b86547fffffffffffffffff0000000000000000000000000000000000000000ffffffff1664010000000073ffffffffffffffffffffffffffffffffffffffff841602178755600088815260046020526040812061197b916140c3565b8760000361178757600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050505050505050565b606060006119ef84367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003614529565b90508267ffffffffffffffff1667ffffffffffffffff811115611a1457611a146145ce565b6040519080825280601f01601f191660200182016040528015611a3e576020820181803683370190505b509150828160208401375092915050565b60008054700100000000000000000000000000000000900460ff166002811115611a7b57611a7b6140fd565b14611ab2576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018481548110611ac757611ac7614415565b600091825260208083206040805160e0810182526005909402909101805463ffffffff808216865273ffffffffffffffffffffffffffffffffffffffff6401000000009092048216948601949094526001820154169184019190915260028101546fffffffffffffffffffffffffffffffff90811660608501526003820154608085015260049091015480821660a0850181905270010000000000000000000000000000000090910490911660c0840152919350909190611b8c9083908690613a3016565b90506000611c2c826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169050861580611c6e5750611c6b7f00000000000000000000000000000000000000000000000000000000000000006002614529565b81145b8015611c78575084155b15611caf576040517fa42637bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115611d09576040517f56f57b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d347f00000000000000000000000000000000000000000000000000000000000000006001614529565b8103611d4657611d4686888588613a38565b34611d5083610d42565b14611d87576040517f8620aa1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b835160009063ffffffff90811614611de7576001856000015163ffffffff1681548110611db657611db6614415565b906000526020600020906005020160040160109054906101000a90046fffffffffffffffffffffffffffffffff1690505b60c0850151600090611e029067ffffffffffffffff16611604565b67ffffffffffffffff1642611e2c611604856fffffffffffffffffffffffffffffffff1660401c90565b67ffffffffffffffff16611e409190614529565b611e4a91906145fd565b90507f000000000000000000000000000000000000000000000000000000000000000060011c677fffffffffffffff1667ffffffffffffffff82161115611ebd576040517f3381d11400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604082901b421760008a8152608087901b6fffffffffffffffffffffffffffffffff8d1617602052604081209192509060008181526003602052604090205490915060ff1615611f3b576040517f80497e3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060016040518060e001604052808d63ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001346fffffffffffffffffffffffffffffffff1681526020018c8152602001886fffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060c08201518160040160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050600460008c8152602001908152602001600020600180805490506121d091906145fd565b81546001810183556000928352602083200155604080517fd0e30db0000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263d0e30db09234926004808301939282900301818588803b15801561226857600080fd5b505af115801561227c573d6000803e3d6000fd5b50506040513393508d92508e91507f9b3245740ec3b155098a55be84957a4da13eaf7f14a8bc6f53126c0b9350f2be90600090a45050505050505050505050565b600554610100900460ff16156122ff576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f7258a80700000000000000000000000000000000000000000000000000000000815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637258a807906024016040805180830381865afa1580156123b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d79190614614565b909250905081612413576040517f6a6bc3b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082018252838152602001829052600683905560078290558190367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90030135116124c5576040517ff40239db000000000000000000000000000000000000000000000000000000008152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560048201526024015b60405180910390fd5b60663611156124dc5763c407e0256000526004601cfd5b6040805160e08101825263ffffffff808252600060208301818152328486019081526fffffffffffffffffffffffffffffffff34818116606088019081527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c90033560808901908152600160a08a0181815242861660c08c0190815282548084018455928a529a5160059092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681018054995173ffffffffffffffffffffffffffffffffffffffff908116640100000000027fffffffffffffffff000000000000000000000000000000000000000000000000909b1694909c16939093179890981790915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf787018054918a167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8860180549185167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909216919091179055517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9850155915195518116700100000000000000000000000000000000029516949094177fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa9091015583517fd0e30db000000000000000000000000000000000000000000000000000000000815293517f00000000000000000000000000000000000000000000000000000000000000009092169363d0e30db093926004828101939282900301818588803b15801561276a57600080fd5b505af115801561277e573d6000803e3d6000fd5b50506000805467ffffffffffffffff42167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009091161790555050600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055505050565b6fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff1060031b176000821361284857631615e6386000526004601cfd5b7ff8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffff6f8421084210842108cc6318c6db6d54be83831c1c601f161a1890811b609f90811c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506029190037d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202612a8157637c5f487d6000526004601cfd5b50670de0b6b3a7640000919091020490565b600081600019048311820215612ab15763bac65e5b6000526004601cfd5b50670de0b6b3a764000091020490565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdc0d0570925a462d78213612aef57919050565b680755bf798b4a1bf1e58212612b0d5763a37bfec96000526004601cfd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b6000612cda670de0b6b3a764000083612cc1866127e9565b612ccb9190614638565b612cd591906146f4565b612ac1565b90505b92915050565b60008054700100000000000000000000000000000000900460ff166002811115612d0f57612d0f6140fd565b14612d46576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018781548110612d5b57612d5b614415565b6000918252602082206005919091020160048101549092506fffffffffffffffffffffffffffffffff16908715821760011b9050612dba7f00000000000000000000000000000000000000000000000000000000000000006001614529565b612e56826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1614612e97576040517f5f53dd9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808915612f8657612eea7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006145fd565b6001901b612f09846fffffffffffffffffffffffffffffffff16613bf0565b67ffffffffffffffff16612f1d919061475c565b15612f5a57612f51612f4260016fffffffffffffffffffffffffffffffff8716614770565b865463ffffffff166000613c96565b60030154612f7c565b7f00000000000000000000000000000000000000000000000000000000000000005b9150849050612fb0565b60038501549150612fad612f426fffffffffffffffffffffffffffffffff86166001614799565b90505b600882901b60088a8a604051612fc79291906147c4565b6040518091039020901b14613008576040517f696550ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006130138c613d7a565b90506000613022836003015490565b6040517fe14ced320000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e14ced329061309c908f908f908f908f908a9060040161481d565b6020604051808303816000875af11580156130bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130df9190614510565b60048501549114915060009060029061318a906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b613226896fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b6132309190614541565b61323a9190614857565b67ffffffffffffffff161590508115158103613282576040517ffb4e40dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8754640100000000900473ffffffffffffffffffffffffffffffffffffffff16156132d9576040517f9071e6af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505085547fffffffffffffffff0000000000000000000000000000000000000000ffffffff163364010000000002179095555050505050505050505050565b600080600080600085905060006001828154811061333857613338614415565b600091825260209091206004600590920201908101549091507f00000000000000000000000000000000000000000000000000000000000000009061340f906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1611613450576040517fb34b5c2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815b60048301547f000000000000000000000000000000000000000000000000000000000000000090613517906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff16925082111561359357825463ffffffff1661355d7f00000000000000000000000000000000000000000000000000000000000000006001614529565b8303613567578391505b6001818154811061357a5761357a614415565b9060005260206000209060050201935080945050613454565b600481810154908401546fffffffffffffffffffffffffffffffff91821691166000816fffffffffffffffffffffffffffffffff166135fc6135e7856fffffffffffffffffffffffffffffffff1660011c90565b6fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1614905080156136c3576000613634836fffffffffffffffffffffffffffffffff16613bf0565b67ffffffffffffffff16111561369757600061366e61366660016fffffffffffffffffffffffffffffffff8616614770565b896001613c96565b6003810154600490910154909c506fffffffffffffffffffffffffffffffff169a5061369d9050565b6006549a505b600386015460048701549099506fffffffffffffffffffffffffffffffff169750613719565b60006136e56136666fffffffffffffffffffffffffffffffff85166001614799565b6003808901546004808b015492840154930154909e506fffffffffffffffffffffffffffffffff9182169d50919b50169850505b505050505050509193509193565b60006fffffffffffffffffffffffffffffffff8416810361378d5782826040516020016137709291909182526fffffffffffffffffffffffffffffffff16602082015260400190565b6040516020818303038152906040528051906020012090506137de565b60408051602081018790526fffffffffffffffffffffffffffffffff8087169282019290925260608101859052908316608082015260a0016040516020818303038152906040528051906020012090505b949350505050565b600080613873847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1690508083036001841b600180831b0386831b17039250505092915050565b60028101546fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000001810161390b576040517ff1a9458100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280830180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff17905573ffffffffffffffffffffffffffffffffffffffff8416600090815260209190915260408120805483929061397e908490614529565b90915550506040517f7eee288d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690637eee288d90604401600060405180830381600087803b158015613a1357600080fd5b505af1158015613a27573d6000803e3d6000fd5b50505050505050565b151760011b90565b6000613a576fffffffffffffffffffffffffffffffff84166001614799565b90506000613a6782866001613c96565b9050600086901a8380613b5a5750613aa060027f000000000000000000000000000000000000000000000000000000000000000061475c565b6004830154600290613b44906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b613b4e9190614857565b67ffffffffffffffff16145b15613bb25760ff811660011480613b74575060ff81166002145b613bad576040517ff40239db000000000000000000000000000000000000000000000000000000008152600481018890526024016124bc565b613a27565b60ff811615613a27576040517ff40239db000000000000000000000000000000000000000000000000000000008152600481018890526024016124bc565b600080613c7d837e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b600167ffffffffffffffff919091161b90920392915050565b60008082613cdf57613cda6fffffffffffffffffffffffffffffffff86167f0000000000000000000000000000000000000000000000000000000000000000613da9565b613cfa565b613cfa856fffffffffffffffffffffffffffffffff16613f67565b905060018481548110613d0f57613d0f614415565b906000526020600020906005020191505b60048201546fffffffffffffffffffffffffffffffff828116911614613d7257815460018054909163ffffffff16908110613d5d57613d5d614415565b90600052602060002090600502019150613d20565b509392505050565b6000806000806000613d8b86613318565b9350935093509350613d9f84848484613727565b9695505050505050565b600081613e48846fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1611613e89576040517fb34b5c2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613e9283613f67565b905081613f31826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1611612cdd57612cda613f4e836001614529565b6fffffffffffffffffffffffffffffffff831690614013565b60008119600183011681613ffb827e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169390931c8015179392505050565b6000806140a0847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169050808303600180821b0385821b179250505092915050565b50805460008255906000526020600020908101906140e191906140e4565b50565b5b808211156140f957600081556001016140e5565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160038310614167577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000806040838503121561418057600080fd5b50508035926020909101359150565b6000815180845260005b818110156141b557602081850181015186830182015201614199565b818111156141c7576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000612cda602083018461418f565b73ffffffffffffffffffffffffffffffffffffffff811681146140e157600080fd5b60006020828403121561424157600080fd5b813561424c8161420d565b9392505050565b8035801515811461426357600080fd5b919050565b60008060006060848603121561427d57600080fd5b833592506020840135915061429460408501614253565b90509250925092565b6000602082840312156142af57600080fd5b81356fffffffffffffffffffffffffffffffff8116811461424c57600080fd5b6000602082840312156142e157600080fd5b5035919050565b60008083601f8401126142fa57600080fd5b50813567ffffffffffffffff81111561431257600080fd5b60208301915083602082850101111561432a57600080fd5b9250929050565b6000806000806000806080878903121561434a57600080fd5b8635955061435a60208801614253565b9450604087013567ffffffffffffffff8082111561437757600080fd5b6143838a838b016142e8565b9096509450606089013591508082111561439c57600080fd5b506143a989828a016142e8565b979a9699509497509295939492505050565b6000806000606084860312156143d057600080fd5b505081359360208301359350604090920135919050565b63ffffffff8416815282602082015260606040820152600061440c606083018461418f565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826144b1576144b1614444565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156144ee576144ee614473565b500290565b60006020828403121561450557600080fd5b815161424c8161420d565b60006020828403121561452257600080fd5b5051919050565b6000821982111561453c5761453c614473565b500190565b600067ffffffffffffffff8381169083168181101561456257614562614473565b039392505050565b600067ffffffffffffffff80831681851680830382111561458d5761458d614473565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036145c7576145c7614473565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008282101561460f5761460f614473565b500390565b6000806040838503121561462757600080fd5b505080516020909101519092909150565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561467957614679614473565b7f800000000000000000000000000000000000000000000000000000000000000060008712868205881281841616156146b4576146b4614473565b600087129250878205871284841616156146d0576146d0614473565b878505871281841616156146e6576146e6614473565b505050929093029392505050565b60008261470357614703614444565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f80000000000000000000000000000000000000000000000000000000000000008314161561475757614757614473565b500590565b60008261476b5761476b614444565b500690565b60006fffffffffffffffffffffffffffffffff8381169083168181101561456257614562614473565b60006fffffffffffffffffffffffffffffffff80831681851680830382111561458d5761458d614473565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006148316060830187896147d4565b82810360208401526148448186886147d4565b9150508260408301529695505050505050565b600067ffffffffffffffff8084168061487257614872614444565b9216919091069291505056fea164736f6c634300080f000a","sourceMap":"1197:3185:160:-:0;;;2605:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3002:9;3025:17;3056:13;3083:11;3108:13;3135:3;3152:5;3171:20;3205:10;5084:13:159;5069:11;:28;5065:60;;5106:19;;-1:-1:-1;;;5106:19:159;;;;;;;;;;;5065:60;5136:21;;;;;;5167:37;;;;;-1:-1:-1;5214:30:159;;;;5254:25;;;;;-1:-1:-1;;;;;5289:29:159;;;-1:-1:-1;;;;;5328:8:159;;;;;5346:12;;;;;5368:44;;;;;5422:24;;;;;3240:20:160;;::::1;;::::0;3270:24:::1;;::::0;-1:-1:-1;1197:3185:160;;-1:-1:-1;;;;;;;;1197:3185:160;14:190:350;106:13;;-1:-1:-1;;;;;148:31:350;;138:42;;128:70;;194:1;191;184:12;128:70;14:190;;;:::o;209:1359::-;529:6;537;545;553;561;569;577;585;593;601;609:7;663:3;651:9;642:7;638:23;634:33;631:53;;;680:1;677;670:12;631:53;712:9;706:16;762:10;755:5;751:22;744:5;741:33;731:61;;788:1;785;778:12;731:61;811:5;801:15;;;856:2;845:9;841:18;835:25;825:35;;900:2;889:9;885:18;879:25;869:35;;944:2;933:9;929:18;923:25;913:35;;993:3;982:9;978:19;972:26;1058:1;1054;1050:2;1046:10;1042:18;1033:7;1029:32;1020:7;1017:45;1007:73;;1076:1;1073;1066:12;1007:73;1099:7;-1:-1:-1;1125:63:350;1183:3;1168:19;;1125:63;:::i;:::-;1115:73;;1207:63;1265:3;1254:9;1250:19;1207:63;:::i;:::-;1197:73;;1289:63;1347:3;1336:9;1332:19;1289:63;:::i;:::-;1279:73;;1392:3;1381:9;1377:19;1371:26;1361:36;;1416:63;1474:3;1463:9;1459:19;1416:63;:::i;:::-;1406:73;;1499:63;1557:3;1546:9;1542:19;1499:63;:::i;:::-;1488:74;;209:1359;;;;;;;;;;;;;;:::o;:::-;1197:3185:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106101e75760003560e01c80638b85902b1161010e578063d5d44d80116100a7578063ec5e630811610079578063fa24f74311610061578063fa24f74314610759578063fa315aa91461077d578063fdffbb28146107b057005b8063ec5e630814610706578063f8f43ff61461073957005b8063d5d44d8014610653578063d6ae3cd514610680578063d8cc1a3c146106b3578063e1f0c376146106d357005b8063c395e1ca116100e0578063c395e1ca14610575578063c55cd0c714610595578063c6f0308c146105a8578063cf09e0d01461063257005b80638b85902b146104845780638d450a95146104c4578063bbdc02db146104f7578063bcef3b551461053857005b806357da950e116101805780636361506d116101525780636361506d1461041257806370872aa5146104525780638129fc1c146104675780638980e0cc1461046f57005b806357da950e1461039a578063609d3334146103ca57806360e27464146103df578063632247ea146103ff57005b806335fef567116101b957806335fef567146102aa5780633a768463146102bd5780633fc8cef31461031157806354fd4d501461034457005b806319effeb4146101f0578063200d2ed21461023b57806325fc2ace146102765780632810e1d61461029557005b366101ee57005b005b3480156101fc57600080fd5b5060005461021d9068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561024757600080fd5b5060005461026990700100000000000000000000000000000000900460ff1681565b604051610232919061412c565b34801561028257600080fd5b506006545b604051908152602001610232565b3480156102a157600080fd5b506102696107c3565b6101ee6102b836600461416d565b610a40565b3480156102c957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610232565b34801561031d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102ec565b34801561035057600080fd5b5061038d6040518060400160405280600581526020017f302e392e3000000000000000000000000000000000000000000000000000000081525081565b60405161023291906141fa565b3480156103a657600080fd5b506006546007546103b5919082565b60408051928352602083019190915201610232565b3480156103d657600080fd5b5061038d610a50565b3480156103eb57600080fd5b506101ee6103fa36600461422f565b610a63565b6101ee61040d366004614268565b610c0f565b34801561041e57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360200135610287565b34801561045e57600080fd5b50600754610287565b6101ee610cc9565b34801561047b57600080fd5b50600154610287565b34801561049057600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360400135610287565b3480156104d057600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b34801561050357600080fd5b5060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610232565b34801561054457600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900335610287565b34801561058157600080fd5b5061028761059036600461429d565b610d42565b6101ee6105a336600461416d565b610f2c565b3480156105b457600080fd5b506105c86105c33660046142cf565b610f38565b6040805163ffffffff909816885273ffffffffffffffffffffffffffffffffffffffff968716602089015295909416948601949094526fffffffffffffffffffffffffffffffff9182166060860152608085015291821660a08401521660c082015260e001610232565b34801561063e57600080fd5b5060005461021d9067ffffffffffffffff1681565b34801561065f57600080fd5b5061028761066e36600461422f565b60026020526000908152604090205481565b34801561068c57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b3480156106bf57600080fd5b506101ee6106ce366004614331565b610fcf565b3480156106df57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061021d565b34801561071257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b34801561074557600080fd5b506101ee6107543660046143bb565b611094565b34801561076557600080fd5b5061076e6114f1565b604051610232939291906143e7565b34801561078957600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610287565b6101ee6107be3660046142cf565b61154e565b600080600054700100000000000000000000000000000000900460ff1660028111156107f1576107f16140fd565b14610828576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460ff16610864576040517f9a07664600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008154811061089057610890614415565b6000918252602090912060059091020154640100000000900473ffffffffffffffffffffffffffffffffffffffff16146108cb5760016108ce565b60025b6000805467ffffffffffffffff421668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff82168117835592935083927fffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffff000000000000000000ffffffffffffffff9091161770010000000000000000000000000000000083600281111561097f5761097f6140fd565b021790556002811115610994576109946140fd565b6040517f5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da6090600090a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663838c2d1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a2557600080fd5b505af1158015610a39573d6000803e3d6000fd5b5050505090565b610a4c82826000610c0f565b5050565b6060610a5e604060206119b8565b905090565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040812080549082905590819003610ac8576040517f17bfe5f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063f3fef3a390604401600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610bca576040519150601f19603f3d011682016040523d82523d6000602084013e610bcf565b606091505b5050905080610c0a576040517f83e6cc6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480610c8857503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b610cbe576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c0a838383611a4f565b3273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d38576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d406122bd565b565b600080610de1836fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1690507f0000000000000000000000000000000000000000000000000000000000000000811115610e47576040517f56f57b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b642e90edd00062061a80630bebc2006000610e6283836144a2565b9050670de0b6b3a76400006000610e99827f00000000000000000000000000000000000000000000000000000000000000006144b6565b90506000610eb7610eb2670de0b6b3a7640000866144b6565b6127e9565b90506000610ec58484612a44565b90506000610ed38383612a93565b90506000610ee082612ac1565b90506000610eff82610efa670de0b6b3a76400008f6144b6565b612ca9565b90506000610f0d8b83612a93565b9050610f19818d6144b6565b9f9e505050505050505050505050505050565b610a4c82826001610c0f565b60018181548110610f4857600080fd5b60009182526020909120600590910201805460018201546002830154600384015460049094015463ffffffff8416955064010000000090930473ffffffffffffffffffffffffffffffffffffffff908116949216926fffffffffffffffffffffffffffffffff91821692918082169170010000000000000000000000000000000090041687565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061104857503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b61107e576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108c868686868686612ce3565b505050505050565b60008054700100000000000000000000000000000000900460ff1660028111156110c0576110c06140fd565b146110f7576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008061110686613318565b9350935093509350600061111c85858585613727565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561118b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111af91906144f3565b9050600189036112a75773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a8461120b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036020013590565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526024830191909152604482015260206064820152608481018a905260a4015b6020604051808303816000875af115801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a19190614510565b506114e6565b600289036112d35773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a848961120b565b600389036112ff5773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a848761120b565b6004890361141b5760006113456fffffffffffffffffffffffffffffffff85167f00000000000000000000000000000000000000000000000000000000000000006137e6565b6007546113529190614529565b61135d906001614529565b905073ffffffffffffffffffffffffffffffffffffffff82166352f0f3ad8b8560405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526004810192909252602482015260c084901b604482015260086064820152608481018b905260a4016020604051808303816000875af11580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114149190614510565b50506114e6565b600589036114b4576040517f52f0f3ad000000000000000000000000000000000000000000000000000000008152600481018a9052602481018390527f000000000000000000000000000000000000000000000000000000000000000060c01b6044820152600860648201526084810188905273ffffffffffffffffffffffffffffffffffffffff8216906352f0f3ad9060a40161125e565b6040517fff137e6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003356060611547610a50565b9050909192565b60008054700100000000000000000000000000000000900460ff16600281111561157a5761157a6140fd565b146115b1576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600182815481106115c6576115c6614415565b60009182526020822060059190910201600481015490925061161190700100000000000000000000000000000000900460401c67ffffffffffffffff165b67ffffffffffffffff1690565b600483015490915060009061164390700100000000000000000000000000000000900467ffffffffffffffff16611604565b61164d9042614541565b9050677fffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000060011c16611687828461456a565b67ffffffffffffffff16116116c8576040517ff2440b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526004602052604090208054851580156116e8575060055460ff165b1561171f576040517ff1a9458100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015801561172c57508515155b15611791578454640100000000900473ffffffffffffffffffffffffffffffffffffffff166000811561175f578161177b565b600187015473ffffffffffffffffffffffffffffffffffffffff165b9050611787818861389b565b5050505050505050565b60006fffffffffffffffffffffffffffffffff815b838110156118d75760008582815481106117c2576117c2614415565b6000918252602080832090910154808352600490915260409091205490915015611818576040517f9a07664600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001828154811061182d5761182d614415565b600091825260209091206005909102018054909150640100000000900473ffffffffffffffffffffffffffffffffffffffff16158015611886575060048101546fffffffffffffffffffffffffffffffff908116908516115b156118c4576001810154600482015473ffffffffffffffffffffffffffffffffffffffff90911695506fffffffffffffffffffffffffffffffff1693505b5050806118d090614596565b90506117a6565b5061191f73ffffffffffffffffffffffffffffffffffffffff8316156118fd5782611919565b600188015473ffffffffffffffffffffffffffffffffffffffff165b8861389b565b86547fffffffffffffffff0000000000000000000000000000000000000000ffffffff1664010000000073ffffffffffffffffffffffffffffffffffffffff841602178755600088815260046020526040812061197b916140c3565b8760000361178757600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050505050505050565b606060006119ef84367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003614529565b90508267ffffffffffffffff1667ffffffffffffffff811115611a1457611a146145ce565b6040519080825280601f01601f191660200182016040528015611a3e576020820181803683370190505b509150828160208401375092915050565b60008054700100000000000000000000000000000000900460ff166002811115611a7b57611a7b6140fd565b14611ab2576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018481548110611ac757611ac7614415565b600091825260208083206040805160e0810182526005909402909101805463ffffffff808216865273ffffffffffffffffffffffffffffffffffffffff6401000000009092048216948601949094526001820154169184019190915260028101546fffffffffffffffffffffffffffffffff90811660608501526003820154608085015260049091015480821660a0850181905270010000000000000000000000000000000090910490911660c0840152919350909190611b8c9083908690613a3016565b90506000611c2c826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169050861580611c6e5750611c6b7f00000000000000000000000000000000000000000000000000000000000000006002614529565b81145b8015611c78575084155b15611caf576040517fa42637bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115611d09576040517f56f57b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d347f00000000000000000000000000000000000000000000000000000000000000006001614529565b8103611d4657611d4686888588613a38565b34611d5083610d42565b14611d87576040517f8620aa1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b835160009063ffffffff90811614611de7576001856000015163ffffffff1681548110611db657611db6614415565b906000526020600020906005020160040160109054906101000a90046fffffffffffffffffffffffffffffffff1690505b60c0850151600090611e029067ffffffffffffffff16611604565b67ffffffffffffffff1642611e2c611604856fffffffffffffffffffffffffffffffff1660401c90565b67ffffffffffffffff16611e409190614529565b611e4a91906145fd565b90507f000000000000000000000000000000000000000000000000000000000000000060011c677fffffffffffffff1667ffffffffffffffff82161115611ebd576040517f3381d11400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604082901b421760008a8152608087901b6fffffffffffffffffffffffffffffffff8d1617602052604081209192509060008181526003602052604090205490915060ff1615611f3b576040517f80497e3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060016040518060e001604052808d63ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001346fffffffffffffffffffffffffffffffff1681526020018c8152602001886fffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060c08201518160040160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050600460008c8152602001908152602001600020600180805490506121d091906145fd565b81546001810183556000928352602083200155604080517fd0e30db0000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263d0e30db09234926004808301939282900301818588803b15801561226857600080fd5b505af115801561227c573d6000803e3d6000fd5b50506040513393508d92508e91507f9b3245740ec3b155098a55be84957a4da13eaf7f14a8bc6f53126c0b9350f2be90600090a45050505050505050505050565b600554610100900460ff16156122ff576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f7258a80700000000000000000000000000000000000000000000000000000000815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637258a807906024016040805180830381865afa1580156123b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d79190614614565b909250905081612413576040517f6a6bc3b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082018252838152602001829052600683905560078290558190367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90030135116124c5576040517ff40239db000000000000000000000000000000000000000000000000000000008152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560048201526024015b60405180910390fd5b60663611156124dc5763c407e0256000526004601cfd5b6040805160e08101825263ffffffff808252600060208301818152328486019081526fffffffffffffffffffffffffffffffff34818116606088019081527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c90033560808901908152600160a08a0181815242861660c08c0190815282548084018455928a529a5160059092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681018054995173ffffffffffffffffffffffffffffffffffffffff908116640100000000027fffffffffffffffff000000000000000000000000000000000000000000000000909b1694909c16939093179890981790915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf787018054918a167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8860180549185167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909216919091179055517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9850155915195518116700100000000000000000000000000000000029516949094177fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa9091015583517fd0e30db000000000000000000000000000000000000000000000000000000000815293517f00000000000000000000000000000000000000000000000000000000000000009092169363d0e30db093926004828101939282900301818588803b15801561276a57600080fd5b505af115801561277e573d6000803e3d6000fd5b50506000805467ffffffffffffffff42167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009091161790555050600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055505050565b6fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff1060031b176000821361284857631615e6386000526004601cfd5b7ff8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffff6f8421084210842108cc6318c6db6d54be83831c1c601f161a1890811b609f90811c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506029190037d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202612a8157637c5f487d6000526004601cfd5b50670de0b6b3a7640000919091020490565b600081600019048311820215612ab15763bac65e5b6000526004601cfd5b50670de0b6b3a764000091020490565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdc0d0570925a462d78213612aef57919050565b680755bf798b4a1bf1e58212612b0d5763a37bfec96000526004601cfd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b6000612cda670de0b6b3a764000083612cc1866127e9565b612ccb9190614638565b612cd591906146f4565b612ac1565b90505b92915050565b60008054700100000000000000000000000000000000900460ff166002811115612d0f57612d0f6140fd565b14612d46576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018781548110612d5b57612d5b614415565b6000918252602082206005919091020160048101549092506fffffffffffffffffffffffffffffffff16908715821760011b9050612dba7f00000000000000000000000000000000000000000000000000000000000000006001614529565b612e56826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1614612e97576040517f5f53dd9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808915612f8657612eea7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006145fd565b6001901b612f09846fffffffffffffffffffffffffffffffff16613bf0565b67ffffffffffffffff16612f1d919061475c565b15612f5a57612f51612f4260016fffffffffffffffffffffffffffffffff8716614770565b865463ffffffff166000613c96565b60030154612f7c565b7f00000000000000000000000000000000000000000000000000000000000000005b9150849050612fb0565b60038501549150612fad612f426fffffffffffffffffffffffffffffffff86166001614799565b90505b600882901b60088a8a604051612fc79291906147c4565b6040518091039020901b14613008576040517f696550ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006130138c613d7a565b90506000613022836003015490565b6040517fe14ced320000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e14ced329061309c908f908f908f908f908a9060040161481d565b6020604051808303816000875af11580156130bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130df9190614510565b60048501549114915060009060029061318a906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b613226896fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b6132309190614541565b61323a9190614857565b67ffffffffffffffff161590508115158103613282576040517ffb4e40dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8754640100000000900473ffffffffffffffffffffffffffffffffffffffff16156132d9576040517f9071e6af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505085547fffffffffffffffff0000000000000000000000000000000000000000ffffffff163364010000000002179095555050505050505050505050565b600080600080600085905060006001828154811061333857613338614415565b600091825260209091206004600590920201908101549091507f00000000000000000000000000000000000000000000000000000000000000009061340f906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1611613450576040517fb34b5c2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815b60048301547f000000000000000000000000000000000000000000000000000000000000000090613517906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff16925082111561359357825463ffffffff1661355d7f00000000000000000000000000000000000000000000000000000000000000006001614529565b8303613567578391505b6001818154811061357a5761357a614415565b9060005260206000209060050201935080945050613454565b600481810154908401546fffffffffffffffffffffffffffffffff91821691166000816fffffffffffffffffffffffffffffffff166135fc6135e7856fffffffffffffffffffffffffffffffff1660011c90565b6fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1614905080156136c3576000613634836fffffffffffffffffffffffffffffffff16613bf0565b67ffffffffffffffff16111561369757600061366e61366660016fffffffffffffffffffffffffffffffff8616614770565b896001613c96565b6003810154600490910154909c506fffffffffffffffffffffffffffffffff169a5061369d9050565b6006549a505b600386015460048701549099506fffffffffffffffffffffffffffffffff169750613719565b60006136e56136666fffffffffffffffffffffffffffffffff85166001614799565b6003808901546004808b015492840154930154909e506fffffffffffffffffffffffffffffffff9182169d50919b50169850505b505050505050509193509193565b60006fffffffffffffffffffffffffffffffff8416810361378d5782826040516020016137709291909182526fffffffffffffffffffffffffffffffff16602082015260400190565b6040516020818303038152906040528051906020012090506137de565b60408051602081018790526fffffffffffffffffffffffffffffffff8087169282019290925260608101859052908316608082015260a0016040516020818303038152906040528051906020012090505b949350505050565b600080613873847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1690508083036001841b600180831b0386831b17039250505092915050565b60028101546fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000001810161390b576040517ff1a9458100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280830180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff17905573ffffffffffffffffffffffffffffffffffffffff8416600090815260209190915260408120805483929061397e908490614529565b90915550506040517f7eee288d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690637eee288d90604401600060405180830381600087803b158015613a1357600080fd5b505af1158015613a27573d6000803e3d6000fd5b50505050505050565b151760011b90565b6000613a576fffffffffffffffffffffffffffffffff84166001614799565b90506000613a6782866001613c96565b9050600086901a8380613b5a5750613aa060027f000000000000000000000000000000000000000000000000000000000000000061475c565b6004830154600290613b44906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b613b4e9190614857565b67ffffffffffffffff16145b15613bb25760ff811660011480613b74575060ff81166002145b613bad576040517ff40239db000000000000000000000000000000000000000000000000000000008152600481018890526024016124bc565b613a27565b60ff811615613a27576040517ff40239db000000000000000000000000000000000000000000000000000000008152600481018890526024016124bc565b600080613c7d837e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b600167ffffffffffffffff919091161b90920392915050565b60008082613cdf57613cda6fffffffffffffffffffffffffffffffff86167f0000000000000000000000000000000000000000000000000000000000000000613da9565b613cfa565b613cfa856fffffffffffffffffffffffffffffffff16613f67565b905060018481548110613d0f57613d0f614415565b906000526020600020906005020191505b60048201546fffffffffffffffffffffffffffffffff828116911614613d7257815460018054909163ffffffff16908110613d5d57613d5d614415565b90600052602060002090600502019150613d20565b509392505050565b6000806000806000613d8b86613318565b9350935093509350613d9f84848484613727565b9695505050505050565b600081613e48846fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1611613e89576040517fb34b5c2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613e9283613f67565b905081613f31826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1611612cdd57612cda613f4e836001614529565b6fffffffffffffffffffffffffffffffff831690614013565b60008119600183011681613ffb827e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169390931c8015179392505050565b6000806140a0847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169050808303600180821b0385821b179250505092915050565b50805460008255906000526020600020908101906140e191906140e4565b50565b5b808211156140f957600081556001016140e5565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160038310614167577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000806040838503121561418057600080fd5b50508035926020909101359150565b6000815180845260005b818110156141b557602081850181015186830182015201614199565b818111156141c7576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000612cda602083018461418f565b73ffffffffffffffffffffffffffffffffffffffff811681146140e157600080fd5b60006020828403121561424157600080fd5b813561424c8161420d565b9392505050565b8035801515811461426357600080fd5b919050565b60008060006060848603121561427d57600080fd5b833592506020840135915061429460408501614253565b90509250925092565b6000602082840312156142af57600080fd5b81356fffffffffffffffffffffffffffffffff8116811461424c57600080fd5b6000602082840312156142e157600080fd5b5035919050565b60008083601f8401126142fa57600080fd5b50813567ffffffffffffffff81111561431257600080fd5b60208301915083602082850101111561432a57600080fd5b9250929050565b6000806000806000806080878903121561434a57600080fd5b8635955061435a60208801614253565b9450604087013567ffffffffffffffff8082111561437757600080fd5b6143838a838b016142e8565b9096509450606089013591508082111561439c57600080fd5b506143a989828a016142e8565b979a9699509497509295939492505050565b6000806000606084860312156143d057600080fd5b505081359360208301359350604090920135919050565b63ffffffff8416815282602082015260606040820152600061440c606083018461418f565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826144b1576144b1614444565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156144ee576144ee614473565b500290565b60006020828403121561450557600080fd5b815161424c8161420d565b60006020828403121561452257600080fd5b5051919050565b6000821982111561453c5761453c614473565b500190565b600067ffffffffffffffff8381169083168181101561456257614562614473565b039392505050565b600067ffffffffffffffff80831681851680830382111561458d5761458d614473565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036145c7576145c7614473565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008282101561460f5761460f614473565b500390565b6000806040838503121561462757600080fd5b505080516020909101519092909150565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561467957614679614473565b7f800000000000000000000000000000000000000000000000000000000000000060008712868205881281841616156146b4576146b4614473565b600087129250878205871284841616156146d0576146d0614473565b878505871281841616156146e6576146e6614473565b505050929093029392505050565b60008261470357614703614444565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f80000000000000000000000000000000000000000000000000000000000000008314161561475757614757614473565b500590565b60008261476b5761476b614444565b500690565b60006fffffffffffffffffffffffffffffffff8381169083168181101561456257614562614473565b60006fffffffffffffffffffffffffffffffff80831681851680830382111561458d5761458d614473565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006148316060830187896147d4565b82810360208401526148448186886147d4565b9150508260408301529695505050505050565b600067ffffffffffffffff8084168061487257614872614444565b9216919091069291505056fea164736f6c634300080f000a","sourceMap":"1197:3185:160:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2896:27:159;;;;;;;;;;-1:-1:-1;2896:27:159;;;;;;;;;;;;;;220:18:350;208:31;;;190:50;;178:2;163:18;2896:27:159;;;;;;;;2963:24;;;;;;;;;;-1:-1:-1;2963:24:159;;;;;;;;;;;;;;;;;;:::i;24310:135::-;;;;;;;;;;-1:-1:-1;24415:18:159;:23;24310:135;;;1018:25:350;;;1006:2;991:18;24310:135:159;846:203:350;18544:907:159;;;;;;;;;;;;;:::i;15650:119::-;;;;;;:::i;:::-;;:::i;31838:79::-;;;;;;;;;;-1:-1:-1;31908:2:159;31838:79;;;1531:42:350;1519:55;;;1501:74;;1489:2;1474:18;31838:79:159;1334:247:350;31982:88:159;;;;;;;;;;-1:-1:-1;32059:4:159;31982:88;;3968:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3862:36::-;;;;;;;;;;-1:-1:-1;3862:36:159;;;;;;;;;;;;;2800:25:350;;;2856:2;2841:18;;2834:34;;;;2773:18;3862:36:159;2600:274:350;23580:234:159;;;;;;;;;;;;;:::i;30210:671::-;;;;;;;;;;-1:-1:-1;30210:671:159;;;;;:::i;:::-;;:::i;3925:171:160:-;;;;;;:::i;:::-;;:::i;17868:114:159:-;;;;;;;;;;-1:-1:-1;3765:14:187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;17969:4:159;1632:22:187;1619:36;17868:114:159;23580:234;24110:156;;;;;;;;;;-1:-1:-1;24227:32:159;;24110:156;;4137:243:160;;;:::i;27582:101:159:-;;;;;;;;;;-1:-1:-1;27660:9:159;:16;27582:101;;18026:124;;;;;;;;;;-1:-1:-1;3765:14:187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;18138:4:159;1632:22:187;1619:36;18026:124:159;23580:234;31167:130;;;;;;;;;;-1:-1:-1;31273:17:159;31167:130;;18397:108;;;;;;;;;;-1:-1:-1;18397:108:159;;4622:10:350;18489:9:159;4610:23:350;4592:42;;4580:2;4565:18;18397:108:159;4417:223:350;23416:125:159;;;;;;;;;;-1:-1:-1;3765:14:187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;1619:36;23416:125:159;23580:234;27899:2171;;;;;;;;;;-1:-1:-1;27899:2171:159;;;;;:::i;:::-;;:::i;15488:118::-;;;;;;:::i;:::-;;:::i;3075:28::-;;;;;;;;;;-1:-1:-1;3075:28:159;;;;;:::i;:::-;;:::i;:::-;;;;5593:10:350;5581:23;;;5563:42;;5624;5702:15;;;5697:2;5682:18;;5675:43;5754:15;;;;5734:18;;;5727:43;;;;5789:34;5859:15;;;5854:2;5839:18;;5832:43;5906:3;5891:19;;5884:35;5956:15;;;5950:3;5935:19;;5928:44;6009:15;6003:3;5988:19;;5981:44;5550:3;5535:19;3075:28:159;5166:865:350;2800:26:159;;;;;;;;;;-1:-1:-1;2800:26:159;;;;;;;;3170:41;;;;;;;;;;-1:-1:-1;3170:41:159;;;;;:::i;:::-;;;;;;;;;;;;;;32159:105;;;;;;;;;;-1:-1:-1;32246:11:159;32159:105;;3345:269:160;;;;;;;;;;-1:-1:-1;3345:269:160;;;;;:::i;:::-;;:::i;31668:117:159:-;;;;;;;;;;-1:-1:-1;31765:13:159;31668:117;;31511:108;;;;;;;;;;-1:-1:-1;31601:11:159;31511:108;;15813:2011;;;;;;;;;;-1:-1:-1;15813:2011:159;;;;;:::i;:::-;;:::i;23853:213::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;31347:117::-;;;;;;;;;;-1:-1:-1;31443:14:159;31347:117;;19495:3882;;;;;;:::i;:::-;;:::i;18544:907::-;18581:18;;18703:6;;;;;;;:32;;;;;;;;:::i;:::-;;18699:64;;18744:19;;;;;;;;;;;;;;18699:64;18877:21;;;;18872:57;;18907:22;;;;;;;;;;;;;;18872:57;19055:1;19019:38;;:9;19029:1;19019:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;:38;:94;;19087:26;19019:94;;;19060:24;19019:94;19123:10;:52;;;19158:15;19123:52;;;;;;;;;;19009:104;;-1:-1:-1;19009:104:159;;19305:16;;;;;;;;19009:104;19305:16;;;;;;;;:::i;:::-;;;;;19296:26;;;;;;;;:::i;:::-;;;;;;;;19400:21;:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18544:907;:::o;15650:119::-;15729:33;15734:12;15748:6;15756:5;15729:4;:33::i;:::-;15650:119;;:::o;23580:234::-;23622:23;23780:27;23796:4;23802;23780:15;:27::i;:::-;23767:40;;23580:234;:::o;30210:671::-;30383:18;;;30357:23;30383:18;;;:6;:18;;;;;;;30411:22;;;;30383:18;30507:20;;;30503:75;;30550:17;;;;;;;;;;;;;;30503:75;30655:42;;;;;:13;8623:55:350;;;30655:42:159;;;8605:74:350;8695:18;;;8688:34;;;30655:4:159;:13;;;;8578:18:350;;30655:42:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30758:12;30775:10;:15;;30799;30775:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30757:66;;;30838:7;30833:41;;30854:20;;;;;;;;;;;;;;30833:41;30260:621;;30210:671;:::o;3925:171:160:-;1654:10;:22;1668:8;1654:22;;;:50;;-1:-1:-1;1680:10:160;:24;1694:10;1680:24;;1654:50;1648:100;;1728:9;;;;;;;;;;;;;;1648:100;4043:46:::1;4054:15;4071:6;4079:9;4043:10;:46::i;4137:243::-:0;4266:9;:21;4279:8;4266:21;;4262:43;;4296:9;;;;;;;;;;;;;;4262:43;4355:18;:16;:18::i;:::-;4137:243::o;27899:2171:159:-;27965:21;27998:13;28022:17;:9;:15;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;28022:17:159;28014:26;;27998:42;;28062:14;28054:5;:22;28050:54;;;28085:19;;;;;;;;;;;;;;28050:54;28195:8;28238:7;28280:11;28170:22;29047:31;28238:7;28280:11;29047:31;:::i;:::-;29035:43;-1:-1:-1;2458:4:95;29088:9:159;29143:38;2458:4:95;29143:14:159;:38;:::i;:::-;29131:50;-1:-1:-1;29278:11:159;29300:58;29331:25;2458:4:95;29331:1:159;:25;:::i;:::-;29300:23;:58::i;:::-;29278:81;;29436:14;29453:30;29478:1;29481;29453:24;:30::i;:::-;29436:47;;29617:17;29637:37;29662:3;29667:6;29637:24;:37::i;:::-;29617:57;;29684:11;29698:43;29730:9;29698:24;:43::i;:::-;29684:57;-1:-1:-1;29796:13:159;29812:69;29684:57;29850:29;2458:4:95;29850:5:159;:29;:::i;:::-;29812:24;:69::i;:::-;29796:85;;29891:19;29913:57;29938:14;29962:6;29913:24;:57::i;:::-;29891:79;-1:-1:-1;30035:28:159;29891:79;30035:14;:28;:::i;:::-;30019:44;27899:2171;-1:-1:-1;;;;;;;;;;;;;;;27899:2171:159:o;15488:118::-;15567:32;15572:12;15586:6;15594:4;15567;:32::i;3075:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3075:28:159;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3345:269:160:-;1654:10;:22;1668:8;1654:22;;;:50;;-1:-1:-1;1680:10:160;:24;1694:10;1680:24;;1654:50;1648:100;;1728:9;;;;;;;;;;;;;;1648:100;3553:54:::1;3564:11;3577:9;3588:10;;3600:6;;3553:10;:54::i;:::-;3345:269:::0;;;;;;:::o;15813:2011:159:-;16016:22;16006:6;;;;;;;:32;;;;;;;;:::i;:::-;;16002:64;;16047:19;;;;;;;;;;;;;;16002:64;16078:14;16094:20;16116:14;16132:20;16168:45;16200:12;16168:31;:45::i;:::-;16077:136;;;;;;;;16223:9;16235:66;16256:8;16266:11;16279:8;16289:11;16235:20;:66::i;:::-;16223:78;;16312:22;16337:2;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16312:36;;5133:4:190;16362:6:159;:39;16358:1460;;16454:20;;;;16475:6;16483:4;16495:14;3765::187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;17969:4:159;1632:22:187;1619:36;3475:5:172;3370:126;16495:14:159;16454:73;;;;;;;;;;;;;10228:25:350;;;;10269:18;;;10262:34;;;;10312:18;;;10305:34;16511:2:159;10355:18:350;;;10348:34;10398:19;;;10391:35;;;10200:19;;16454:73:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16358:1460;;;5254:4:190;16548:6:159;:47;16544:1274;;16668:20;;;;16689:6;16697:4;16709:8;:14;3370:126:172;16544:1274:159;5375:4:190;16762:6:159;:47;16758:1060;;16881:20;;;;16902:6;16910:4;16922:8;:14;3370:126:172;16758:1060:159;5504:4:190;16975:6:159;:51;16971:847;;17306:16;17360:35;:22;;;17383:11;17360:22;:35::i;:::-;17325:32;;:70;;;;:::i;:::-;:74;;17398:1;17325:74;:::i;:::-;17306:93;-1:-1:-1;17414:20:159;;;;17435:6;17443:4;17414:83;;;;;;;;;;;;;10228:25:350;;;;10269:18;;;10262:34;17475:4:159;17463:16;;;10312:18:350;;;10305:34;17482:1:159;10355:18:350;;;10348:34;10398:19;;;10391:35;;;10200:19;;17414:83:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17028:480;16971:847;;;5601:4:190;17518:6:159;:35;17514:304;;17664:86;;;;;;;;10228:25:350;;;10269:18;;;10262:34;;;17713:11:159;17728:4;17713:19;10312:18:350;;;10305:34;17735:1:159;10355:18:350;;;10348:34;10398:19;;;10391:35;;;17664:20:159;;;;;;10200:19:350;;17664:86:159;9960:472:350;17514:304:159;17788:19;;;;;;;;;;;;;;17514:304;15903:1921;;;;;;15813:2011;;;:::o;23853:213::-;18489:9;3765:14:187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;1619:36;23934:23:159;24048:11;:9;:11::i;:::-;24035:24;;23853:213;;;:::o;19495:3882::-;19667:22;19657:6;;;;;;;:32;;;;;;;;:::i;:::-;;19653:64;;19698:19;;;;;;;;;;;;;;19653:64;19728:24;19755:9;19765:11;19755:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;19905:12;;;;19755:22;;-1:-1:-1;19905:29:159;;:12;;;1135:4:172;1131:17;;;19905:23:159;:27;;3475:5:172;3370:126;19905:29:159;19999:12;;;;19876:58;;-1:-1:-1;19944:26:159;;19999:30;;:12;;;1624:28:172;;19999:24:159;1368:300:172;19999:30:159;19973:56;;19980:15;19973:56;:::i;:::-;19944:85;-1:-1:-1;20088:24:159;:13;20111:1;20088:24;;20043:41;19944:85;20043:19;:41;:::i;:::-;:69;;;20039:124;;20135:17;;;;;;;;;;;;;;20039:124;20173:34;20210:21;;;:8;:21;;;;;20271:23;;20361:16;;:41;;;;-1:-1:-1;20381:21:159;;;;20361:41;20357:101;;;20425:22;;;;;;;;;;;;;;20357:101;20620:24;;:44;;;;-1:-1:-1;20648:16:159;;;20620:44;20616:725;;;21153:18;;;;;;;21131:19;21205:25;;:57;;21251:11;21205:57;;;21233:15;;;;;;21205:57;21185:77;;21276:34;21292:9;21303:6;21276:15;:34::i;:::-;21324:7;;;;;;;19495:3882;:::o;20616:725::-;21409:17;21490;21409;21518:1132;21542:19;21538:1;:23;21518:1132;;;21582:22;21607:16;21624:1;21607:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;21727:24;;;:8;:24;;;;;;;:31;21607:19;;-1:-1:-1;21727:36:159;21723:71;;21772:22;;;;;;;;;;;;;;21723:71;21809:23;21835:9;21845:14;21835:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;22450:17;;21835:25;;-1:-1:-1;22450:17:159;;;:31;:17;:31;:79;;;;-1:-1:-1;22509:14:159;;;;;;;;22485:19;;;:44;22450:79;22446:194;;;22561:14;;;;22611;;;;22561;;;;;-1:-1:-1;22611:14:159;;;-1:-1:-1;22446:194:159;21568:1082;;21563:3;;;;:::i;:::-;;;21518:1132;;;-1:-1:-1;22858:78:159;22874:23;;;;:53;;22918:9;22874:53;;;22900:15;;;;;;22874:53;22929:6;22858:15;:78::i;:::-;23108:30;;;;;;;;;;;;-1:-1:-1;23201:21:159;;;23108:18;23201:21;;;;;23194:28;;;:::i;:::-;23300:11;23315:1;23300:16;23296:75;;23332:21;:28;;;;23356:4;23332:28;;;19555:3822;;;;;;;19495:3882;:::o;2440:295:187:-;2522:16;2550:14;2567:37;2595:9;3765:14;3761:22;;;3748:36;3742:4;3738:47;3718:68;;2567:37;:::i;:::-;2550:54;;2630:6;2620:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2620:17:187;;2614:23;;2712:6;2704;2693:8;2688:3;2684:18;2671:48;2657:72;2440:295;;;;:::o;10674:4770:159:-;10875:22;10865:6;;;;;;;:32;;;;;;;;:::i;:::-;;10861:64;;10906:19;;;;;;;;;;;;;;10861:64;11016:23;11042:9;11052:15;11042:26;;;;;;;;:::i;:::-;;;;;;;;;11016:52;;;;;;;;11042:26;;;;;;;11016:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11016:52:159;;11042:26;11397:25;;11016:52;;11412:9;;11397:14;:25;:::i;:::-;11373:49;;11432:25;11460:20;:12;:18;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;11460:20:159;11432:48;;;-1:-1:-1;11827:20:159;;;:60;;-1:-1:-1;11872:15:159;:11;11886:1;11872:15;:::i;:::-;11851:17;:36;11827:60;11826:76;;;;;11893:9;11892:10;11826:76;11822:137;;;11925:23;;;;;;;;;;;;;;11822:137;12320:14;12300:17;:34;12296:66;;;12343:19;;;;;;;;;;;;;;12296:66;12590:15;:11;12604:1;12590:15;:::i;:::-;12569:17;:36;12565:138;;12621:71;12646:6;12654:15;12671:9;12682;12621:24;:71::i;:::-;12826:9;12793:29;12809:12;12793:15;:29::i;:::-;:42;12789:76;;12844:21;;;;;;;;;;;;;;12789:76;13056:18;;13020:22;;13078:16;13056:38;;;;13052:123;;13129:9;13139:6;:18;;;13129:29;;;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;;;;;;;;;;13110:54;;13052:123;13758:12;;;;13407:21;;13758:30;;1624:28:172;;13758:24:159;1368:300:172;13758:30:159;13553:235;;13740:15;13553:33;:27;:16;:25;;1135:4:172;1131:17;;913:251;13553:33:159;:202;;;;;;:::i;:::-;:235;;;;:::i;:::-;13407:405;-1:-1:-1;13982:13:159;14005:1;13982:24;;;:17;13961:16;;:45;13957:77;;;14015:19;;;;;;;;;;;;;;13957:77;14136:15;668:4:172;664:20;;;14204:15:159;661:36:172;14506:19:159;758:20:170;;;811:3;807:19;;;832:34;828:56;;804:81;798:4;791:95;929:4;913:21;;14136:86:159;;-1:-1:-1;14506:19:159;14592:17;;;;:6;:17;;;;;;14506:72;;-1:-1:-1;14592:17:159;;14588:50;;;14618:20;;;;;;;;;;;;;;14588:50;14668:4;14648:6;:17;14655:9;14648:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;14716:9;14744:366;;;;;;;;14792:15;14744:366;;;;;;14908:1;14744:366;;;;;;14938:10;14744:366;;;;;;14980:9;14744:366;;;;;;15015:6;14744:366;;;;15049:12;14744:366;;;;;;15086:9;14744:366;;;;;14716:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15189:8;:25;15198:15;15189:25;;;;;;;;;;;15239:1;15220:9;:16;;;;:20;;;;:::i;:::-;15189:52;;;;;;;-1:-1:-1;15189:52:159;;;;;;;;15281:34;;;;;;;;:12;:4;:12;;;;15302:9;;15281:34;;;;;-1:-1:-1;15281:34:159;;;;;15302:9;15281:12;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15396:41:159;;15426:10;;-1:-1:-1;15418:6:159;;-1:-1:-1;15401:15:159;;-1:-1:-1;15396:41:159;;;;;10766:4678;;;;;;;;10674:4770;;;:::o;24694:2821::-;25384:11;;;;;;;25380:44;;;25404:20;;;;;;;;;;;;;;25380:44;25514:40;;;;;;25544:9;4610:23:350;25514:40:159;;;4592:42:350;25476:9:159;;;;25514:29;:21;:29;;;;4565:18:350;;25514:40:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25475:79;;-1:-1:-1;25475:79:159;-1:-1:-1;25475:79:159;25651:57;;25688:20;;;;;;;;;;;;;;25651:57;25781:58;;;;;;;;;;;;;;;;25760:18;:79;;;;;;;25781:58;;3765:14:187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;1632:22;1619:36;26008:34:159;26004:79;;26051:32;;;;;3765:14:187;3761:22;;;3748:36;3742:4;3738:47;3718:68;;1619:36;26051:32:159;;;1018:25:350;991:18;;26051:32:159;;;;;;;;26004:79;26635:4;26619:14;26616:24;26613:191;;;26744:10;26738:4;26731:24;26785:4;26779;26772:18;26613:191;26882:366;;;;;;;;26923:16;26882:366;;;-1:-1:-1;26882:366:159;;;;;;27008:9;26882:366;;;;;;;27049:9;26882:366;;;;;;;;;3761:22:187;3765:14;3761:22;;;3748:36;3742:4;3738:47;3718:68;;1619:36;26882:366:159;;;;;;26854:9;26882:366;;;;;;27215:15;26882:366;;;;;;;;26854:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27298:34;;;;;;;:4;:12;;;;;;27049:9;26854:404;27298:34;;;;-1:-1:-1;27298:34:159;;;;;27049:9;27298:12;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27388:9:159;:51;;;27422:15;27388:51;;;;;;;;-1:-1:-1;;27490:11:159;:18;;;;27388:51;27490:18;;;-1:-1:-1;;;24694:2821:159:o;11843:3927:95:-;12373:34;12370:41;-1:-1:-1;12367:1:95;12363:49;12466:9;;;12446:18;12443:33;12440:1;12436:41;12430:48;12524:9;;;12512:10;12509:25;12506:1;12502:33;12496:40;12578:9;;;12570:6;12567:21;12564:1;12560:29;12554:36;12630:9;;;12624:4;12621:19;12618:1;12614:27;12608:34;11891:8;12739:9;;12729:135;;12781:10;12775:4;12768:24;12845:4;12839;12832:18;12729:135;13016:66;12962:34;12951:9;;;12947:50;12941:4;12937:61;12932:151;12925:159;13210:9;;;13205:3;13201:19;;;14173:31;14169:39;;14272:9;;13660:2;14264:18;;;14230:32;14226:57;14348:9;;14340:18;;14305:33;14301:58;14424:9;;14416:18;;14381:33;14377:58;14500:9;;14492:18;;14457:33;14453:58;14575:9;;14567:18;;14533:32;14529:57;14648:9;;14640:18;;14608:30;14604:55;13672:31;13668:59;;13664:67;;13656:76;;13606:32;13602:131;13598:139;;13590:148;;13540:32;13536:203;13532:211;;13524:220;;13430:349;;13809:9;;13801:18;;13797:57;;13884:9;;13876:18;;;13872:57;;13951:9;;;13947:55;;15131:10;15261:43;15257:51;15499:11;;;15426:71;15422:89;15418:97;15595:72;15591:80;15747:3;15743:11;;11843:3927::o;5293:468::-;5354:9;5574:16;5568:23;;5586:3;5559:33;5552:41;5545:49;;5535:173;;5627:10;5621:4;5614:24;5689:4;5683;5676:18;5535:173;-1:-1:-1;5737:3:95;5730:11;;;;5726:19;;5293:468::o;2809:424::-;2870:9;3063:1;3059;3055:6;3051:14;3048:1;3045:21;3042:1;3038:29;3035:145;;;3099:10;3093:4;3086:24;3161:4;3155;3148:18;3035:145;-1:-1:-1;3213:3:95;3202:9;;3198:19;;2809:424::o;8260:3448::-;8309:8;8504:21;8499:1;:26;8495:40;;8260:3448;;;:::o;8495:40::-;8841:21;8838:1;8834:29;8824:164;;8900:10;8894:4;8887:24;8965:4;8959;8952:18;8824:164;9280:7;9274:2;9269:7;;;9268:19;;-1:-1:-1;9551:8:95;9619:2;9575:29;9564:7;;;9563:41;9607:7;9563:51;9562:59;;9647:29;9643:33;;9639:37;;;10328:35;;;10383:5;;9959:2;10382:13;;;10399:32;10381:50;10451:5;;10450:13;;10449:51;;10520:5;;10519:13;;10536:34;10518:52;10590:5;;10589:13;;10588:53;;10661:5;;10660:13;;10677:35;10659:53;9965:32;9898:31;9894:35;;9949:5;;9948:13;;9947:50;;;10022:5;;;:40;;10082:5;10081:13;;;10098:35;10080:53;10151:5;;;10160:40;10151:50;11079:10;11607:49;11594:62;11669:3;:7;;;;11593:84;;;;;;-1:-1:-1;;8260:3448:95:o;7938:186::-;7997:6;8081:36;2458:4;8100:1;8089:8;8095:1;8089:5;:8::i;:::-;:12;;;;:::i;:::-;8088:28;;;;:::i;:::-;8081:6;:36::i;:::-;8074:43;;7938:186;;;;;:::o;5921:4442:159:-;6204:22;6194:6;;;;;;;:32;;;;;;;;:::i;:::-;;6190:64;;6235:19;;;;;;;;;;;;;;6190:64;6345:24;6372:9;6382:11;6372:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;6478:15;;;;6372:22;;-1:-1:-1;6478:15:159;;;8377:17:171;;8374:32;;8371:1;8367:40;6550:44:159;-1:-1:-1;6729:18:159;:14;6746:1;6729:18;:::i;:::-;6710:15;:7;:13;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;6710:15:159;:37;;;6706:65;;6756:15;;;;;;;;;;;;;;6706:65;6847:19;6876:27;6917:9;6913:1343;;;7648:28;7665:11;7648:14;:28;:::i;:::-;7642:1;:35;;7616:22;:7;:20;;;:22::i;:::-;:62;;;;;;:::i;:::-;7615:69;:211;;7739:81;7772:19;7790:1;7772:13;;;:19;:::i;:::-;7794:18;;;;;7739;:81::i;:::-;:87;;;7615:211;;;7703:17;7615:211;7599:227;;7919:6;7907:18;;6913:1343;;;8126:12;;;;;-1:-1:-1;8164:81:159;8197:19;:13;;;8215:1;8197:19;:::i;8164:81::-;8152:93;;6913:1343;8652:1;8629:13;:24;;8624:1;8609:10;;8599:21;;;;;;;:::i;:::-;;;;;;;;:26;;:54;8595:84;;8662:17;;;;;;;;;;;;;;8595:84;8750:9;8762:30;8780:11;8762:17;:30::i;:::-;8750:42;;9765:14;9825:21;:9;:15;;;3475:5:172;3370:126;9825:21:159;9782:39;;;;;:2;:7;;;;;:39;;9790:10;;;;9802:6;;;;9810:4;;9782:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9900:18;;;;9782:64;;;-1:-1:-1;9856:20:159;;9930:1;;9900:26;;:18;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;9900:26:159;9880:17;:9;:15;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;9880:17:159;:46;;;;:::i;:::-;9879:52;;;;:::i;:::-;:57;;;;-1:-1:-1;9950:28:159;;;;;9946:52;;9987:11;;;;;;;;;;;;;;9946:52;10092:18;;;;;:32;:18;:32;10088:60;;10133:15;;;;;;;;;;;;;;10088:60;-1:-1:-1;;10325:31:159;;;;10346:10;10325:31;;;;;;-1:-1:-1;;;;;;;;;;;5921:4442:159:o;37036:3468::-;37140:20;37162:21;37185:20;37207:21;37281:16;37300:6;37281:25;;37316:23;37342:9;37352:8;37342:19;;;;;;;;:::i;:::-;;;;;;;;;37484:14;37342:19;;;;;37484:14;;;;37342:19;;-1:-1:-1;37510:11:159;;37484:22;;:14;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;37484:22:159;:37;;;37480:67;;37530:17;;;;;;;;;;;;;;37480:67;37898:20;37962:5;37977:571;38000:14;;;;38026:11;;38000:22;;:14;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;38000:22:159;37985:37;;;;;37984:53;37977:571;;;38075:17;;;;38418:15;:11;38075:17;38418:15;:::i;:::-;38402:12;:31;38398:58;;38451:5;38435:21;;38398:58;38479:9;38489:11;38479:22;;;;;;;;:::i;:::-;;;;;;;;;;;38471:30;;38526:11;38515:22;;38039:509;37977:571;;;38861:22;;;;;38885:14;;;;38861:22;;;;;38885:14;38816:20;38885:14;38927:45;;:26;:20;:11;:18;;3943:1:171;3939:17;;3818:154;38927:20:159;:24;;3475:5:172;3370:126;38927:26:159;:45;;;38910:62;;39467:9;39463:1035;;;39806:1;39779:24;:9;:22;;;:24::i;:::-;:28;;;39775:349;;;39827:26;39856:70;39889:19;39907:1;39889:13;;;:19;:::i;:::-;39911:8;39921:4;39856:18;:70::i;:::-;39978:14;;;;39994:17;;;;;39978:14;;-1:-1:-1;39994:17:159;;;-1:-1:-1;39775:349:159;;-1:-1:-1;39775:349:159;;40079:18;:23;40051:58;;39775:349;40171:11;;;;40184:14;;;;40171:11;;-1:-1:-1;40184:14:159;;;-1:-1:-1;39463:1035:159;;;40230:26;40259:70;40292:19;:13;;;40310:1;40292:19;:::i;40259:70::-;40377:11;;;;;40390:14;;;;;40453;;;;40469:17;;;40377:11;;-1:-1:-1;40390:14:159;;;;;-1:-1:-1;40453:14:159;;-1:-1:-1;40469:17:159;;-1:-1:-1;;39463:1035:159;37234:3270;;;;;;;37036:3468;;;;;:::o;41444:655::-;41639:10;41857:16;;;:23;;41853:240;;41935:9;41946:12;41924:35;;;;;;;;15644:25:350;;;15717:34;15705:47;15700:2;15685:18;;15678:75;15632:2;15617:18;;15413:346;41924:35:159;;;;;;;;;;;;;41914:46;;;;;;41896:65;;41853:240;;;42020:60;;;;;;16109:25:350;;;16153:34;16223:15;;;16203:18;;;16196:43;;;;16255:18;;;16248:34;;;16318:15;;;16298:18;;;16291:43;16081:19;;42020:60:159;;;;;;;;;;;;42010:71;;;;;;41992:90;;41853:240;41444:655;;;;;;:::o;5154:336:171:-;5236:19;5267:11;5281:16;5287:9;1996:66;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;5281:16;5267:30;;;;5362:3;5351:9;5347:19;5471:1;5460:9;5456:17;5451:1;5447;5436:9;5432:17;5428:25;5416:9;5405;5401:25;5398:56;5394:80;5379:95;;;5316:168;5154:336;;;;:::o;32655:473:159:-;32848:12;;;;;;32874:25;;;32870:60;;32908:22;;;;;;;;;;;;;;32870:60;32940:12;;;;:32;;;;2725:17;32940:32;;;33027:18;;;32940:12;33027:18;;;;;;;;;;;:26;;33049:4;;32940:12;33027:26;;33049:4;;33027:26;:::i;:::-;;;;-1:-1:-1;;33092:29:159;;;;;:11;8623:55:350;;;33092:29:159;;;8605:74:350;8695:18;;;8688:34;;;33092:4:159;:11;;;;8578:18:350;;33092:29:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32736:392;32655:473;;:::o;8236:187:171:-;8377:17;8374:32;8371:1;8367:40;;8236:187::o;33347:1977:159:-;34099:24;34140:20;:14;;;34159:1;34140:20;:::i;:::-;34099:62;;34171:26;34200:80;34227:15;34252:10;34273:4;34200:18;:80::i;:::-;34171:109;-1:-1:-1;34290:14:159;34313:19;;;34348:9;;:61;;-1:-1:-1;34394:15:159;34408:1;34394:11;:15;:::i;:::-;34361:17;;;;34389:1;;34361:25;;:17;;1996:66:171;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;34361:25:159;:29;;;;:::i;:::-;:48;;;34348:61;34344:974;;;34887:36;;;4686:1:190;34887:36:159;;:74;;-1:-1:-1;34927:34:159;;;4780:1:190;34927:34:159;34887:74;34881:154;;34989:31;;;;;;;;1018:25:350;;;991:18;;34989:31:159;846:203:350;34881:154:159;34344:974;;;35055:34;;;;35051:267;;35276:31;;;;;;;;1018:25:350;;;991:18;;35276:31:159;846:203:350;2585:362:171;2650:20;2824:11;2838:16;2844:9;1996:66;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;2838:16;2928:1;2824:30;;;;;2919:11;2904:27;;;;2585:362;-1:-1:-1;;2585:362:171:o;35844:677:159:-;35994:27;36093:25;36121:7;:71;;36154:38;:25;;;36180:11;36154:25;:38::i;:::-;36121:71;;;36131:20;:4;:18;;;:20::i;:::-;36093:99;;36360:9;36370:6;36360:17;;;;;;;;:::i;:::-;;;;;;;;;;;36348:29;;36387:128;36394:18;;;;36422:20;;;;36394:18;;:50;36387:128;;36482:21;;36472:9;:32;;:9;;36482:21;;;36472:32;;;;;;:::i;:::-;;;;;;;;;;;36460:44;;36387:128;;;36027:494;35844:677;;;;;:::o;40758:319::-;40829:10;40852:14;40868:20;40890:14;40906:20;40942:44;40974:11;40942:31;:44::i;:::-;40851:135;;;;;;;;41004:66;41025:8;41035:11;41048:8;41058:11;41004:20;:66::i;:::-;40996:74;40758:319;-1:-1:-1;;;;;;40758:319:159:o;7021:794:171:-;7170:18;7311:20;7290:17;:9;:15;;1996:66;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;7290:17;:41;;;7286:71;;7340:17;;;;;;;;;;;;;;7286:71;7423:24;7437:9;7423:13;:24::i;:::-;7411:36;;7704:20;7683:17;:9;:15;;1996:66;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;7683:17;:41;;;7679:130;;7752:46;7773:24;:20;7796:1;7773:24;:::i;:::-;7752:20;;;;;:46::i;5792:710::-;5858:18;6021:14;;6052:1;6037:17;;6017:38;5858:18;6156:10;6017:38;1996:66;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;6156:10;6142:24;;6365:19;;;;6476:9;;6470:16;;5792:710;-1:-1:-1;;;5792:710:171:o;4393:313::-;4475:20;4507:11;4521:16;4527:9;1996:66;1948:20;1270:18;1267:46;-1:-1:-1;1264:1:171;1260:54;1371:22;;;1359:10;1356:38;1353:1;1349:46;1338:58;1489:22;;;1555:1;1551:17;;;1537:32;1613:1;1609:17;;;1595:32;1671:1;1667:17;;;1653:32;1729:1;1725:17;;;1711:32;1787:2;1783:18;;;1769:33;1933:36;1928:3;1924:46;1894:190;1842:260;;1041:1077;4521:16;4507:30;;;;4602:3;4591:9;4587:19;4687:1;4683;4672:9;4668:17;4664:25;4652:9;4641;4637:25;4634:56;4619:71;;;4556:144;4393:313;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;251:184:350:-;303:77;300:1;293:88;400:4;397:1;390:15;424:4;421:1;414:15;440:401;588:2;573:18;;621:1;610:13;;600:201;;657:77;654:1;647:88;758:4;755:1;748:15;786:4;783:1;776:15;600:201;810:25;;;440:401;:::o;1054:275::-;1149:6;1157;1210:2;1198:9;1189:7;1185:23;1181:32;1178:52;;;1226:1;1223;1216:12;1178:52;-1:-1:-1;;1249:23:350;;;1319:2;1304:18;;;1291:32;;-1:-1:-1;1054:275:350:o;1839:531::-;1881:3;1919:5;1913:12;1946:6;1941:3;1934:19;1971:1;1981:162;1995:6;1992:1;1989:13;1981:162;;;2057:4;2113:13;;;2109:22;;2103:29;2085:11;;;2081:20;;2074:59;2010:12;1981:162;;;2161:6;2158:1;2155:13;2152:87;;;2227:1;2220:4;2211:6;2206:3;2202:16;2198:27;2191:38;2152:87;-1:-1:-1;2284:2:350;2272:15;2289:66;2268:88;2259:98;;;;2359:4;2255:109;;1839:531;-1:-1:-1;;1839:531:350:o;2375:220::-;2524:2;2513:9;2506:21;2487:4;2544:45;2585:2;2574:9;2570:18;2562:6;2544:45;:::i;3102:154::-;3188:42;3181:5;3177:54;3170:5;3167:65;3157:93;;3246:1;3243;3236:12;3261:247;3320:6;3373:2;3361:9;3352:7;3348:23;3344:32;3341:52;;;3389:1;3386;3379:12;3341:52;3428:9;3415:23;3447:31;3472:5;3447:31;:::i;:::-;3497:5;3261:247;-1:-1:-1;;;3261:247:350:o;3513:160::-;3578:20;;3634:13;;3627:21;3617:32;;3607:60;;3663:1;3660;3653:12;3607:60;3513:160;;;:::o;3678:343::-;3779:6;3787;3795;3848:2;3836:9;3827:7;3823:23;3819:32;3816:52;;;3864:1;3861;3854:12;3816:52;3900:9;3887:23;3877:33;;3957:2;3946:9;3942:18;3929:32;3919:42;;3980:35;4011:2;4000:9;3996:18;3980:35;:::i;:::-;3970:45;;3678:343;;;;;:::o;4645:331::-;4734:6;4787:2;4775:9;4766:7;4762:23;4758:32;4755:52;;;4803:1;4800;4793:12;4755:52;4842:9;4829:23;4892:34;4885:5;4881:46;4874:5;4871:57;4861:85;;4942:1;4939;4932:12;4981:180;5040:6;5093:2;5081:9;5072:7;5068:23;5064:32;5061:52;;;5109:1;5106;5099:12;5061:52;-1:-1:-1;5132:23:350;;4981:180;-1:-1:-1;4981:180:350:o;6036:347::-;6087:8;6097:6;6151:3;6144:4;6136:6;6132:17;6128:27;6118:55;;6169:1;6166;6159:12;6118:55;-1:-1:-1;6192:20:350;;6235:18;6224:30;;6221:50;;;6267:1;6264;6257:12;6221:50;6304:4;6296:6;6292:17;6280:29;;6356:3;6349:4;6340:6;6332;6328:19;6324:30;6321:39;6318:59;;;6373:1;6370;6363:12;6318:59;6036:347;;;;;:::o;6388:854::-;6493:6;6501;6509;6517;6525;6533;6586:3;6574:9;6565:7;6561:23;6557:33;6554:53;;;6603:1;6600;6593:12;6554:53;6639:9;6626:23;6616:33;;6668:35;6699:2;6688:9;6684:18;6668:35;:::i;:::-;6658:45;;6754:2;6743:9;6739:18;6726:32;6777:18;6818:2;6810:6;6807:14;6804:34;;;6834:1;6831;6824:12;6804:34;6873:58;6923:7;6914:6;6903:9;6899:22;6873:58;:::i;:::-;6950:8;;-1:-1:-1;6847:84:350;-1:-1:-1;7038:2:350;7023:18;;7010:32;;-1:-1:-1;7054:16:350;;;7051:36;;;7083:1;7080;7073:12;7051:36;;7122:60;7174:7;7163:8;7152:9;7148:24;7122:60;:::i;:::-;6388:854;;;;-1:-1:-1;6388:854:350;;-1:-1:-1;6388:854:350;;7201:8;;6388:854;-1:-1:-1;;;6388:854:350:o;7483:316::-;7560:6;7568;7576;7629:2;7617:9;7608:7;7604:23;7600:32;7597:52;;;7645:1;7642;7635:12;7597:52;-1:-1:-1;;7668:23:350;;;7738:2;7723:18;;7710:32;;-1:-1:-1;7789:2:350;7774:18;;;7761:32;;7483:316;-1:-1:-1;7483:316:350:o;7804:433::-;8075:10;8067:6;8063:23;8052:9;8045:42;8123:6;8118:2;8107:9;8103:18;8096:34;8166:2;8161;8150:9;8146:18;8139:30;8026:4;8186:45;8227:2;8216:9;8212:18;8204:6;8186:45;:::i;:::-;8178:53;7804:433;-1:-1:-1;;;;;7804:433:350:o;8242:184::-;8294:77;8291:1;8284:88;8391:4;8388:1;8381:15;8415:4;8412:1;8405:15;8943:184;8995:77;8992:1;8985:88;9092:4;9089:1;9082:15;9116:4;9113:1;9106:15;9132:184;9184:77;9181:1;9174:88;9281:4;9278:1;9271:15;9305:4;9302:1;9295:15;9321:120;9361:1;9387;9377:35;;9392:18;;:::i;:::-;-1:-1:-1;9426:9:350;;9321:120::o;9446:228::-;9486:7;9612:1;9544:66;9540:74;9537:1;9534:81;9529:1;9522:9;9515:17;9511:105;9508:131;;;9619:18;;:::i;:::-;-1:-1:-1;9659:9:350;;9446:228::o;9679:276::-;9774:6;9827:2;9815:9;9806:7;9802:23;9798:32;9795:52;;;9843:1;9840;9833:12;9795:52;9875:9;9869:16;9894:31;9919:5;9894:31;:::i;10437:184::-;10507:6;10560:2;10548:9;10539:7;10535:23;10531:32;10528:52;;;10576:1;10573;10566:12;10528:52;-1:-1:-1;10599:16:350;;10437:184;-1:-1:-1;10437:184:350:o;10626:128::-;10666:3;10697:1;10693:6;10690:1;10687:13;10684:39;;;10703:18;;:::i;:::-;-1:-1:-1;10739:9:350;;10626:128::o;11235:229::-;11274:4;11303:18;11371:10;;;;11341;;11393:12;;;11390:38;;;11408:18;;:::i;:::-;11445:13;;11235:229;-1:-1:-1;;;11235:229:350:o;11469:236::-;11508:3;11536:18;11581:2;11578:1;11574:10;11611:2;11608:1;11604:10;11642:3;11638:2;11634:12;11629:3;11626:21;11623:47;;;11650:18;;:::i;:::-;11686:13;;11469:236;-1:-1:-1;;;;11469:236:350:o;11710:195::-;11749:3;11780:66;11773:5;11770:77;11767:103;;11850:18;;:::i;:::-;-1:-1:-1;11897:1:350;11886:13;;11710:195::o;11910:184::-;11962:77;11959:1;11952:88;12059:4;12056:1;12049:15;12083:4;12080:1;12073:15;12099:125;12139:4;12167:1;12164;12161:8;12158:34;;;12172:18;;:::i;:::-;-1:-1:-1;12209:9:350;;12099:125::o;12229:271::-;12334:6;12342;12395:2;12383:9;12374:7;12370:23;12366:32;12363:52;;;12411:1;12408;12401:12;12363:52;-1:-1:-1;;12434:16:350;;12490:2;12475:18;;;12469:25;12434:16;;12469:25;;-1:-1:-1;12229:271:350:o;12505:655::-;12544:7;12576:66;12668:1;12665;12661:9;12696:1;12693;12689:9;12741:1;12737:2;12733:10;12730:1;12727:17;12722:2;12718;12714:11;12710:35;12707:61;;;12748:18;;:::i;:::-;12787:66;12879:1;12876;12872:9;12926:1;12922:2;12917:11;12914:1;12910:19;12905:2;12901;12897:11;12893:37;12890:63;;;12933:18;;:::i;:::-;12979:1;12976;12972:9;12962:19;;13026:1;13022:2;13017:11;13014:1;13010:19;13005:2;13001;12997:11;12993:37;12990:63;;;13033:18;;:::i;:::-;13098:1;13094:2;13089:11;13086:1;13082:19;13077:2;13073;13069:11;13065:37;13062:63;;;13105:18;;:::i;:::-;-1:-1:-1;;;13145:9:350;;;;;12505:655;-1:-1:-1;;;12505:655:350:o;13165:308::-;13204:1;13230;13220:35;;13235:18;;:::i;:::-;13352:66;13349:1;13346:73;13277:66;13274:1;13271:73;13267:153;13264:179;;;13423:18;;:::i;:::-;-1:-1:-1;13457:10:350;;13165:308::o;13478:112::-;13510:1;13536;13526:35;;13541:18;;:::i;:::-;-1:-1:-1;13575:9:350;;13478:112::o;13595:246::-;13635:4;13664:34;13748:10;;;;13718;;13770:12;;;13767:38;;;13785:18;;:::i;13846:253::-;13886:3;13914:34;13975:2;13972:1;13968:10;14005:2;14002:1;13998:10;14036:3;14032:2;14028:12;14023:3;14020:21;14017:47;;;14044:18;;:::i;14104:271::-;14287:6;14279;14274:3;14261:33;14243:3;14313:16;;14338:13;;;14313:16;14104:271;-1:-1:-1;14104:271:350:o;14380:325::-;14468:6;14463:3;14456:19;14520:6;14513:5;14506:4;14501:3;14497:14;14484:43;;14572:1;14565:4;14556:6;14551:3;14547:16;14543:27;14536:38;14438:3;14694:4;14624:66;14619:2;14611:6;14607:15;14603:88;14598:3;14594:98;14590:109;14583:116;;14380:325;;;;:::o;14710:502::-;14951:2;14940:9;14933:21;14914:4;14977:61;15034:2;15023:9;15019:18;15011:6;15003;14977:61;:::i;:::-;15086:9;15078:6;15074:22;15069:2;15058:9;15054:18;15047:50;15114:49;15156:6;15148;15140;15114:49;:::i;:::-;15106:57;;;15199:6;15194:2;15183:9;15179:18;15172:34;14710:502;;;;;;;;:::o;15217:191::-;15248:1;15274:18;15319:2;15316:1;15312:10;15341:3;15331:37;;15348:18;;:::i;:::-;15386:10;;15382:20;;;;;15217:191;-1:-1:-1;;15217:191:350:o","linkReferences":{},"immutableReferences":{"94380":[{"start":1235,"length":32},{"start":12124,"length":32}],"94383":[{"start":1932,"length":32},{"start":3567,"length":32},{"start":3701,"length":32},{"start":7345,"length":32},{"start":11668,"length":32},{"start":11974,"length":32}],"94386":[{"start":1813,"length":32},{"start":4897,"length":32},{"start":7237,"length":32},{"start":7438,"length":32},{"start":11941,"length":32},{"start":13139,"length":32},{"start":13403,"length":32},{"start":13623,"length":32},{"start":14972,"length":32},{"start":15542,"length":32}],"94390":[{"start":1762,"length":32},{"start":5722,"length":32},{"start":7758,"length":32}],"94394":[{"start":716,"length":32},{"start":4386,"length":32},{"start":12362,"length":32}],"94398":[{"start":1294,"length":32},{"start":5363,"length":32},{"start":9004,"length":32}],"94402":[{"start":800,"length":32},{"start":2836,"length":32},{"start":8739,"length":32},{"start":10020,"length":32},{"start":14799,"length":32}],"94406":[{"start":2495,"length":32},{"start":9069,"length":32}],"94409":[{"start":1679,"length":32},{"start":5209,"length":32}],"96513":[{"start":3111,"length":32},{"start":3297,"length":32},{"start":4071,"length":32}],"96516":[{"start":3174,"length":32},{"start":4134,"length":32}]}},"methodIdentifiers":{"absolutePrestate()":"8d450a95","addLocalData(uint256,uint256,uint256)":"f8f43ff6","attack(uint256,bytes32)":"c55cd0c7","claimCredit(address)":"60e27464","claimData(uint256)":"c6f0308c","claimDataLen()":"8980e0cc","createdAt()":"cf09e0d0","credit(address)":"d5d44d80","defend(uint256,bytes32)":"35fef567","extraData()":"609d3334","gameData()":"fa24f743","gameDuration()":"e1f0c376","gameType()":"bbdc02db","getRequiredBond(uint128)":"c395e1ca","initialize()":"8129fc1c","l1Head()":"6361506d","l2BlockNumber()":"8b85902b","l2ChainId()":"d6ae3cd5","maxGameDepth()":"fa315aa9","move(uint256,bytes32,bool)":"632247ea","resolve()":"2810e1d6","resolveClaim(uint256)":"fdffbb28","resolvedAt()":"19effeb4","rootClaim()":"bcef3b55","splitDepth()":"ec5e6308","startingBlockNumber()":"70872aa5","startingOutputRoot()":"57da950e","startingRootHash()":"25fc2ace","status()":"200d2ed2","step(uint256,bool,bytes,bytes)":"d8cc1a3c","version()":"54fd4d50","vm()":"3a768463","weth()":"3fc8cef3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"_gameType\",\"type\":\"uint32\"},{\"internalType\":\"Claim\",\"name\":\"_absolutePrestate\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_maxGameDepth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_splitDepth\",\"type\":\"uint256\"},{\"internalType\":\"Duration\",\"name\":\"_gameDuration\",\"type\":\"uint64\"},{\"internalType\":\"contract IBigStepper\",\"name\":\"_vm\",\"type\":\"address\"},{\"internalType\":\"contract IDelayedWETH\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"contract IAnchorStateRegistry\",\"name\":\"_anchorStateRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AnchorRootNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadAuth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BondTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDefendRootClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimAboveSplit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimAlreadyResolved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClockNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClockTimeExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameDepthExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectBondAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLocalIdent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrestate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSplitDepth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCreditToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfOrderResolution\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedRootClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidStep\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"Claim\",\"name\":\"claim\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"name\":\"Move\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"Resolved\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"absolutePrestate\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"absolutePrestate_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ident\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_execLeafIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partOffset\",\"type\":\"uint256\"}],\"name\":\"addLocalData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_parentIndex\",\"type\":\"uint256\"},{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"claimCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"parentIndex\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"counteredBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"bond\",\"type\":\"uint128\"},{\"internalType\":\"Claim\",\"name\":\"claim\",\"type\":\"bytes32\"},{\"internalType\":\"Position\",\"name\":\"position\",\"type\":\"uint128\"},{\"internalType\":\"Clock\",\"name\":\"clock\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDataLen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createdAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"credit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_parentIndex\",\"type\":\"uint256\"},{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"}],\"name\":\"defend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameData\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameDuration\",\"outputs\":[{\"internalType\":\"Duration\",\"name\":\"gameDuration_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameType\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Position\",\"name\":\"_position\",\"type\":\"uint128\"}],\"name\":\"getRequiredBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredBond_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Head\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"l1Head_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2BlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"l2BlockNumber_\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2ChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"l2ChainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGameDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxGameDepth_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengeIndex\",\"type\":\"uint256\"},{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_isAttack\",\"type\":\"bool\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"status_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimIndex\",\"type\":\"uint256\"}],\"name\":\"resolveClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolvedAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootClaim\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"splitDepth_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startingBlockNumber_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingOutputRoot\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"l2BlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingRootHash\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"startingRootHash_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isAttack\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_stateData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"step\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract IBigStepper\",\"name\":\"vm_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IDelayedWETH\",\"name\":\"weth_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"UnexpectedRootClaim(bytes32)\":[{\"params\":{\"rootClaim\":\"is the claim that was unexpected.\"}}]},\"kind\":\"dev\",\"methods\":{\"addLocalData(uint256,uint256,uint256)\":{\"params\":{\"_execLeafIdx\":\"The index of the leaf claim in an execution subgame that requires the local data for a step.\",\"_ident\":\"The local identifier of the data to post.\",\"_partOffset\":\"The offset of the data to post.\"}},\"attack(uint256,bytes32)\":{\"params\":{\"_claim\":\"The `Claim` at the relative attack position.\",\"_parentIndex\":\"Index of the `Claim` to attack in the `claimData` array.\"}},\"claimCredit(address)\":{\"params\":{\"_recipient\":\"The owner and recipient of the credit.\"}},\"constructor\":{\"params\":{\"_absolutePrestate\":\"The absolute prestate of the instruction trace.\",\"_anchorStateRegistry\":\"The contract that stores the anchor state for each game type.\",\"_challenger\":\"Address that is allowed to challenge instances of this contract.\",\"_gameDuration\":\"The duration of the game.\",\"_gameType\":\"The type ID of the game.\",\"_l2ChainId\":\"Chain ID of the L2 network this contract argues about.\",\"_maxGameDepth\":\"The maximum depth of bisection.\",\"_proposer\":\"Address that is allowed to create instances of this contract.\",\"_splitDepth\":\"The final depth of the output bisection portion of the game.\",\"_vm\":\"An onchain VM that performs single instruction steps on an FPP trace.\",\"_weth\":\"WETH contract for holding ETH.\"}},\"defend(uint256,bytes32)\":{\"params\":{\"_claim\":\"The `Claim` at the relative defense position.\",\"_parentIndex\":\"Index of the claim to defend in the `claimData` array.\"}},\"extraData()\":{\"details\":\"`clones-with-immutable-args` argument #2\",\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\"}},\"gameData()\":{\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\",\"gameType_\":\"The type of proof system being used.\",\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"gameType()\":{\"details\":\"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.\",\"returns\":{\"gameType_\":\"The type of proof system being used.\"}},\"getRequiredBond(uint128)\":{\"params\":{\"_position\":\"The position of the bonded interaction.\"},\"returns\":{\"requiredBond_\":\"The required ETH bond for the given move, in wei.\"}},\"initialize()\":{\"details\":\"This function may only be called once.\"},\"move(uint256,bytes32,bool)\":{\"params\":{\"_challengeIndex\":\"The index of the claim being moved against.\",\"_claim\":\"The claim at the next logical position in the game.\",\"_isAttack\":\"Whether or not the move is an attack or defense.\"}},\"resolve()\":{\"details\":\"May only be called if the `status` is `IN_PROGRESS`.\",\"returns\":{\"status_\":\"The status of the game after resolution.\"}},\"resolveClaim(uint256)\":{\"details\":\"This function must be called bottom-up in the DAG      A subgame is a tree of claims that has a maximum depth of 1.      A subgame root claims is valid if, and only if, all of its child claims are invalid.      At the deepest level in the DAG, a claim is invalid if there's a successful step against it.\",\"params\":{\"_claimIndex\":\"The index of the subgame root claim to resolve.\"}},\"rootClaim()\":{\"details\":\"`clones-with-immutable-args` argument #1\",\"returns\":{\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"step(uint256,bool,bytes,bytes)\":{\"details\":\"This function should point to a fault proof processor in order to execute      a step in the fault proof program on-chain. The interface of the fault proof      processor contract should adhere to the `IBigStepper` interface.\",\"params\":{\"_claimIndex\":\"The index of the challenged claim within `claimData`.\",\"_isAttack\":\"Whether or not the step is an attack or a defense.\",\"_proof\":\"Proof to access memory nodes in the VM's merkle state tree.\",\"_stateData\":\"The stateData of the step is the preimage of the claim at the given        prestate, which is at `_stateIndex` if the move is an attack and `_claimIndex` if        the move is a defense. If the step is an attack on the first instruction, it is        the absolute prestate of the fault proof VM.\"}}},\"title\":\"PermissionedDisputeGame\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"Thrown when a dispute game has already been initialized.\"}],\"AnchorRootNotFound()\":[{\"notice\":\"Thrown when an anchor root is not found for a given game type.\"}],\"BadAuth()\":[{\"notice\":\"Thrown when an unauthorized address attempts to interact with the game.\"}],\"BondTransferFailed()\":[{\"notice\":\"Thrown when the transfer of credit to a recipient account reverts.\"}],\"CannotDefendRootClaim()\":[{\"notice\":\"Thrown when a defense against the root claim is attempted.\"}],\"ClaimAboveSplit()\":[{\"notice\":\"Thrown when a parent output root is attempted to be found on a claim that is in         the output root portion of the tree.\"}],\"ClaimAlreadyExists()\":[{\"notice\":\"Thrown when a claim is attempting to be made that already exists.\"}],\"ClaimAlreadyResolved()\":[{\"notice\":\"Thrown when resolving a claim that has already been resolved.\"}],\"ClockNotExpired()\":[{\"notice\":\"Thrown when the game is attempted to be resolved too early.\"}],\"ClockTimeExceeded()\":[{\"notice\":\"Thrown when a move is attempted to be made after the clock has timed out.\"}],\"DuplicateStep()\":[{\"notice\":\"Thrown when trying to step against a claim for a second time, after it has already been countered with         an instruction step.\"}],\"GameDepthExceeded()\":[{\"notice\":\"Thrown when a move is attempted to be made at or greater than the max depth of the game.\"}],\"GameNotInProgress()\":[{\"notice\":\"Thrown when an action that requires the game to be `IN_PROGRESS` is invoked when         the game is not in progress.\"}],\"IncorrectBondAmount()\":[{\"notice\":\"Thrown when a supplied bond is not equal to the required bond amount to cover the cost of the interaction.\"}],\"InvalidLocalIdent()\":[{\"notice\":\"Thrown when an invalid local identifier is passed to the `addLocalData` function.\"}],\"InvalidParent()\":[{\"notice\":\"Thrown when a step is attempted above the maximum game depth.\"}],\"InvalidPrestate()\":[{\"notice\":\"Thrown when an invalid prestate is supplied to `step`.\"}],\"InvalidSplitDepth()\":[{\"notice\":\"Thrown on deployment if the split depth is greater than or equal to the max         depth of the game.\"}],\"NoCreditToClaim()\":[{\"notice\":\"Thrown when a credit claim is attempted for a value of 0.\"}],\"OutOfOrderResolution()\":[{\"notice\":\"Thrown when resolving claims out of order.\"}],\"UnexpectedRootClaim(bytes32)\":[{\"notice\":\"Thrown when the root claim has an unexpected VM status.         Some games can only start with a root-claim with a specific status.\"}],\"ValidStep()\":[{\"notice\":\"Thrown when a step is made that computes the expected post state correctly.\"}]},\"events\":{\"Move(uint256,bytes32,address)\":{\"notice\":\"Emitted when a new claim is added to the DAG by `claimant`\"},\"Resolved(uint8)\":{\"notice\":\"Emitted when the game is resolved.\"}},\"kind\":\"user\",\"methods\":{\"absolutePrestate()\":{\"notice\":\"Returns the absolute prestate of the instruction trace.\"},\"addLocalData(uint256,uint256,uint256)\":{\"notice\":\"Posts the requested local data to the VM's `PreimageOralce`.\"},\"attack(uint256,bytes32)\":{\"notice\":\"Attack a disagreed upon `Claim`.\"},\"claimCredit(address)\":{\"notice\":\"Claim the credit belonging to the recipient address.\"},\"claimData(uint256)\":{\"notice\":\"An append-only array of all claims made during the dispute game.\"},\"claimDataLen()\":{\"notice\":\"Returns the length of the `claimData` array.\"},\"createdAt()\":{\"notice\":\"The starting timestamp of the game\"},\"credit(address)\":{\"notice\":\"Credited balances for winning participants.\"},\"defend(uint256,bytes32)\":{\"notice\":\"Defend an agreed upon `Claim`.\"},\"extraData()\":{\"notice\":\"Getter for the extra data.\"},\"gameData()\":{\"notice\":\"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation.\"},\"gameDuration()\":{\"notice\":\"Returns the game duration.\"},\"gameType()\":{\"notice\":\"Getter for the game type.\"},\"getRequiredBond(uint128)\":{\"notice\":\"Returns the required bond for a given move kind.\"},\"initialize()\":{\"notice\":\"Initializes the contract.\"},\"l1Head()\":{\"notice\":\"A block hash on the L1 that contains the disputed output root.\"},\"l2BlockNumber()\":{\"notice\":\"The l2BlockNumber of the disputed output root in the `L2OutputOracle`.\"},\"l2ChainId()\":{\"notice\":\"Returns the chain ID of the L2 network this contract argues about.\"},\"maxGameDepth()\":{\"notice\":\"Returns the max game depth.\"},\"move(uint256,bytes32,bool)\":{\"notice\":\"Generic move function, used for both `attack` and `defend` moves.\"},\"resolve()\":{\"notice\":\"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties.\"},\"resolveClaim(uint256)\":{\"notice\":\"Resolves the subgame rooted at the given claim index.\"},\"resolvedAt()\":{\"notice\":\"The timestamp of the game's global resolution.\"},\"rootClaim()\":{\"notice\":\"Getter for the root claim.\"},\"splitDepth()\":{\"notice\":\"Returns the split depth.\"},\"startingBlockNumber()\":{\"notice\":\"Only the starting block number of the game.\"},\"startingOutputRoot()\":{\"notice\":\"The latest finalized output root, serving as the anchor for output bisection.\"},\"startingRootHash()\":{\"notice\":\"Only the starting output root of the game.\"},\"status()\":{\"notice\":\"Returns the current status of the game.\"},\"step(uint256,bool,bytes,bytes)\":{\"notice\":\"Perform an instruction step via an on-chain fault proof processor.\"},\"version()\":{\"notice\":\"Semantic version.\"},\"vm()\":{\"notice\":\"Returns the address of the VM.\"},\"weth()\":{\"notice\":\"Returns the WETH contract for holding ETH.\"}},\"notice\":\"PermissionedDisputeGame is a contract that inherits from `FaultDisputeGame`, and contains two roles:         - The `challenger` role, which is allowed to challenge a dispute.         - The `proposer` role, which is allowed to create proposals and participate in their game.         This contract exists as a way for networks to support the fault proof iteration of the OptimismPortal         contract without needing to support a fully permissionless system. Permissionless systems can introduce         costs that certain networks may not wish to support. This contract can also be used as a fallback mechanism         in case of a failure in the permissionless fault proof system in the stage one release.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dispute/PermissionedDisputeGame.sol\":\"PermissionedDisputeGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"src/cannon/interfaces/IPreimageOracle.sol\":{\"keccak256\":\"0x7bda0156571b468cf0e22321945655f2dacd7082f440f742aa4612b36b388a9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ba53777c65987bc20faa7731476c779e7794a58bafb40191a25275a05e3f8af\",\"dweb:/ipfs/QmbxQwE2BC9aabTruDqkd2CLojwq7G9i2rkWKv46Wucae1\"]},\"src/dispute/FaultDisputeGame.sol\":{\"keccak256\":\"0x095d22e683f20a4e5a0541968a9bd98e70a4db81d2adfbde5d9918b45501d55c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c60431da74c7e4e51be69ece49a0b92afd483c9020c2e7c726ad179e785199f9\",\"dweb:/ipfs/QmSExbitxvKi6miC7o4UFZD6ssV2LGr7jJxWPY3jg3rvwX\"]},\"src/dispute/PermissionedDisputeGame.sol\":{\"keccak256\":\"0xe899f76ac3937f07a08824544e346263589df2f43005388102d061166c317c0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d349766115acf5aca66d36bccddd54891945503bf04d41887204bcac21a94654\",\"dweb:/ipfs/QmUYxtRVNPGi4N4Ffg3sG75sBvmjbBpj1GCKFGDtk7XUTQ\"]},\"src/dispute/interfaces/IAnchorStateRegistry.sol\":{\"keccak256\":\"0x5fd05f2482d149668897e54f92d556a0c3512aa35b51ba800ef15d18dd490cb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://689d621bc5c43a41d5232980f0eceecd7a3d8aa99438dfd9fed5f73d5ecd2887\",\"dweb:/ipfs/QmQ5jw54TkdxLuLFti6JZown54rGQ3m3Q93pvnVU1j1HRj\"]},\"src/dispute/interfaces/IBigStepper.sol\":{\"keccak256\":\"0xc92ee3069677b903826c83d5b4e46e3be462f9ccf1d95e72a12b1052e3451f0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f93692bd3c8d9533ab8024ce2df6d880328826d1a92fdb9cf45301e2d0c65884\",\"dweb:/ipfs/QmUcmbjTw9gnCUNasgmQjVbSgcCPKZ1FQyA31dH4k5Nc75\"]},\"src/dispute/interfaces/IDelayedWETH.sol\":{\"keccak256\":\"0x0bb035e9bbb411696841ea292eeed6d4463c3c3eee7d6c5d8e38a101e8a4ff04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0477cf2c137392d35081f23bfd7f3565881767dcb1489a62e7e80b3c178cfce8\",\"dweb:/ipfs/QmTjALjrHg5rvhjfCKPmXLTgkMNneECWaqoarunSoVS37G\"]},\"src/dispute/interfaces/IDisputeGame.sol\":{\"keccak256\":\"0x3a324ac81162fed73b9b9e78bef9cb08dd9dd2563289b843c25ca3bc61fab3b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07468a6f4863d2e729cc5348c22ab2c20aa3d0a82ad9ee23f0121a2d0c0e087d\",\"dweb:/ipfs/QmYniMhZBtREzRf6G1fDssLbREFdMBcKCcJ2mt3GbkC87S\"]},\"src/dispute/interfaces/IDisputeGameFactory.sol\":{\"keccak256\":\"0x204d89d38d4dc0db40fbf898d95e639ac5608810a5a5506a3d80d71177648bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71e5c0ff04f409f30ca4f8ebfae1592c6ca495e315b059f969d11812e6e84dbd\",\"dweb:/ipfs/QmaNKkhkJv7qHzX6bKB3LjpWBupfMPLhoATUGx1HRTLtXh\"]},\"src/dispute/interfaces/IFaultDisputeGame.sol\":{\"keccak256\":\"0x57257f3fcdf56a3ec906fc7dba4b4c914330bd7f0d5cabea77a99692c410dad7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9308a4d42e0556e0f48985b1fee7ab71b1ece11bb347c220cd787012e4a6aff3\",\"dweb:/ipfs/QmUYrMcwTpqMtVqFhfebkAJ3dSJNBXix5fFn2KNZRQBfK7\"]},\"src/dispute/interfaces/IInitializable.sol\":{\"keccak256\":\"0xbc553af6501a972850a98fc6284943f8e95a5183a7b4f64198c16fca2338c9dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1f1c422ce4a9e72f0bbdec36434206da4af3a32d38f922acab957942e994ce5\",\"dweb:/ipfs/QmNQGWBceLxx1CKSMLfwTM584q8UCgUpF4rrFe8pdbWYtj\"]},\"src/dispute/interfaces/IWETH.sol\":{\"keccak256\":\"0x681482892d7283baeb0c55178ff0654db694ada095972b7447cff1d4bbe2d557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a02b310db3ed444a77451ed0951366e0a44be8c4d3b214eacc61e07e0262855c\",\"dweb:/ipfs/QmaQfom7LazaxFzYmhQv6NeR5pGHQV4qBn5fNjx2GrEjKu\"]},\"src/dispute/lib/LibGameId.sol\":{\"keccak256\":\"0x9a9f30500da6eb7eeaa7193515dc5e45dc479f09ae7d522a07283c0fb5f4bfa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be113d8198d5822385de3d6ff3d7b3e8241993484aa95604ffaf38c2d33f40e0\",\"dweb:/ipfs/QmY9mHC52fqc4gAFYCGobNyuP4TqugQgs8o1kTF33t17Hc\"]},\"src/dispute/lib/LibHashing.sol\":{\"keccak256\":\"0x5a072cd028094eee55acb84ed8d08d7422b1fb46658b7e043e916781530a383b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b67e54f1318f1fd67b28b16c6861a56e27217c26a12aaea5c446e2ec53143920\",\"dweb:/ipfs/QmVLSTP3PwXzRkR3A4qV9fjZhca9v8J1EnEYuVGUsSirAq\"]},\"src/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0xfeb49b2421dbacc775aa27adf3b7803ebf84b47ac8f5b9fbc372bd9c45b76504\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95dc9d09fc4dbb4a7d7ffa70cb275277635d4fd1554421a65fd2e1329fddb059\",\"dweb:/ipfs/QmVGHtM3ABWEBFETvAz6sBucirsRfuTrn2CdiUBH1nt3un\"]},\"src/dispute/lib/LibUDT.sol\":{\"keccak256\":\"0x42cd5a022686434153142b10871ff07e7ed27d32c28d5285f5d2cc6b7de1510c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06e460b40977e0668dd27fcc4dd5496e24561e5e9c64cf812e077e2d5db60ffa\",\"dweb:/ipfs/QmTrbrc7ykFhLmtEdKWq9sANRbuDMvjqthUNxtEkW3vTGg\"]},\"src/libraries/Clone.sol\":{\"keccak256\":\"0x5893eb0f0cb5ab0ed0db1ba47ce78de2362610864368a71963615334f3f5a829\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://6bda119dc186663e7f67bcadb72263b4af023b2e1bff5aff559e86ceed339d1a\",\"dweb:/ipfs/QmdqZyX8GMptLderaZW8cEeoKy5doNhW6jkTX2SySn1a8e\"]},\"src/libraries/DisputeErrors.sol\":{\"keccak256\":\"0x42ea16547770cf8b3fcd0190a5fce1e1186defb1a0b641590dfd3a85d339f42f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://123aa78b13b38b764b1b38373bb6b86a92a8ac24f2135efc54a3599ae915cfe5\",\"dweb:/ipfs/QmSVBonKaGYprZPHbFGcFMK3vBTxk2u7YGxF9VCVVrfhzi\"]},\"src/libraries/DisputeTypes.sol\":{\"keccak256\":\"0x1a0103e1b54c2c982aa97bbf1e9c3c04b18a643c9f7eb9dd1e821594882438c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a895615bd84f9ac5270220c6380f836d0781c7d35a9049de18efa93fcd37352b\",\"dweb:/ipfs/QmNvwHGWU9zBmhv9fweUpmKaAuSD6qKmguMypF4wwbmaFe\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"GameType","name":"_gameType","type":"uint32"},{"internalType":"Claim","name":"_absolutePrestate","type":"bytes32"},{"internalType":"uint256","name":"_maxGameDepth","type":"uint256"},{"internalType":"uint256","name":"_splitDepth","type":"uint256"},{"internalType":"Duration","name":"_gameDuration","type":"uint64"},{"internalType":"contract IBigStepper","name":"_vm","type":"address"},{"internalType":"contract IDelayedWETH","name":"_weth","type":"address"},{"internalType":"contract IAnchorStateRegistry","name":"_anchorStateRegistry","type":"address"},{"internalType":"uint256","name":"_l2ChainId","type":"uint256"},{"internalType":"address","name":"_proposer","type":"address"},{"internalType":"address","name":"_challenger","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AlreadyInitialized"},{"inputs":[],"type":"error","name":"AnchorRootNotFound"},{"inputs":[],"type":"error","name":"BadAuth"},{"inputs":[],"type":"error","name":"BondTransferFailed"},{"inputs":[],"type":"error","name":"CannotDefendRootClaim"},{"inputs":[],"type":"error","name":"ClaimAboveSplit"},{"inputs":[],"type":"error","name":"ClaimAlreadyExists"},{"inputs":[],"type":"error","name":"ClaimAlreadyResolved"},{"inputs":[],"type":"error","name":"ClockNotExpired"},{"inputs":[],"type":"error","name":"ClockTimeExceeded"},{"inputs":[],"type":"error","name":"DuplicateStep"},{"inputs":[],"type":"error","name":"GameDepthExceeded"},{"inputs":[],"type":"error","name":"GameNotInProgress"},{"inputs":[],"type":"error","name":"IncorrectBondAmount"},{"inputs":[],"type":"error","name":"InvalidLocalIdent"},{"inputs":[],"type":"error","name":"InvalidParent"},{"inputs":[],"type":"error","name":"InvalidPrestate"},{"inputs":[],"type":"error","name":"InvalidSplitDepth"},{"inputs":[],"type":"error","name":"NoCreditToClaim"},{"inputs":[],"type":"error","name":"OutOfOrderResolution"},{"inputs":[{"internalType":"Claim","name":"rootClaim","type":"bytes32"}],"type":"error","name":"UnexpectedRootClaim"},{"inputs":[],"type":"error","name":"ValidStep"},{"inputs":[{"internalType":"uint256","name":"parentIndex","type":"uint256","indexed":true},{"internalType":"Claim","name":"claim","type":"bytes32","indexed":true},{"internalType":"address","name":"claimant","type":"address","indexed":true}],"type":"event","name":"Move","anonymous":false},{"inputs":[{"internalType":"enum GameStatus","name":"status","type":"uint8","indexed":true}],"type":"event","name":"Resolved","anonymous":false},{"inputs":[],"stateMutability":"payable","type":"fallback"},{"inputs":[],"stateMutability":"view","type":"function","name":"absolutePrestate","outputs":[{"internalType":"Claim","name":"absolutePrestate_","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"_ident","type":"uint256"},{"internalType":"uint256","name":"_execLeafIdx","type":"uint256"},{"internalType":"uint256","name":"_partOffset","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addLocalData"},{"inputs":[{"internalType":"uint256","name":"_parentIndex","type":"uint256"},{"internalType":"Claim","name":"_claim","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"attack"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimCredit"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"claimData","outputs":[{"internalType":"uint32","name":"parentIndex","type":"uint32"},{"internalType":"address","name":"counteredBy","type":"address"},{"internalType":"address","name":"claimant","type":"address"},{"internalType":"uint128","name":"bond","type":"uint128"},{"internalType":"Claim","name":"claim","type":"bytes32"},{"internalType":"Position","name":"position","type":"uint128"},{"internalType":"Clock","name":"clock","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"claimDataLen","outputs":[{"internalType":"uint256","name":"len_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"createdAt","outputs":[{"internalType":"Timestamp","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"credit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_parentIndex","type":"uint256"},{"internalType":"Claim","name":"_claim","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"defend"},{"inputs":[],"stateMutability":"pure","type":"function","name":"extraData","outputs":[{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameData","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"},{"internalType":"Claim","name":"rootClaim_","type":"bytes32"},{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameDuration","outputs":[{"internalType":"Duration","name":"gameDuration_","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameType","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"}]},{"inputs":[{"internalType":"Position","name":"_position","type":"uint128"}],"stateMutability":"view","type":"function","name":"getRequiredBond","outputs":[{"internalType":"uint256","name":"requiredBond_","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"pure","type":"function","name":"l1Head","outputs":[{"internalType":"Hash","name":"l1Head_","type":"bytes32"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"l2BlockNumber","outputs":[{"internalType":"uint256","name":"l2BlockNumber_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"l2ChainId","outputs":[{"internalType":"uint256","name":"l2ChainId_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxGameDepth","outputs":[{"internalType":"uint256","name":"maxGameDepth_","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_challengeIndex","type":"uint256"},{"internalType":"Claim","name":"_claim","type":"bytes32"},{"internalType":"bool","name":"_isAttack","type":"bool"}],"stateMutability":"payable","type":"function","name":"move"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resolve","outputs":[{"internalType":"enum GameStatus","name":"status_","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"_claimIndex","type":"uint256"}],"stateMutability":"payable","type":"function","name":"resolveClaim"},{"inputs":[],"stateMutability":"view","type":"function","name":"resolvedAt","outputs":[{"internalType":"Timestamp","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"rootClaim","outputs":[{"internalType":"Claim","name":"rootClaim_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"splitDepth","outputs":[{"internalType":"uint256","name":"splitDepth_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"startingBlockNumber","outputs":[{"internalType":"uint256","name":"startingBlockNumber_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"startingOutputRoot","outputs":[{"internalType":"Hash","name":"root","type":"bytes32"},{"internalType":"uint256","name":"l2BlockNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"startingRootHash","outputs":[{"internalType":"Hash","name":"startingRootHash_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"status","outputs":[{"internalType":"enum GameStatus","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"_claimIndex","type":"uint256"},{"internalType":"bool","name":"_isAttack","type":"bool"},{"internalType":"bytes","name":"_stateData","type":"bytes"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"step"},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"vm","outputs":[{"internalType":"contract IBigStepper","name":"vm_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"weth","outputs":[{"internalType":"contract IDelayedWETH","name":"weth_","type":"address"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"addLocalData(uint256,uint256,uint256)":{"params":{"_execLeafIdx":"The index of the leaf claim in an execution subgame that requires the local data for a step.","_ident":"The local identifier of the data to post.","_partOffset":"The offset of the data to post."}},"attack(uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative attack position.","_parentIndex":"Index of the `Claim` to attack in the `claimData` array."}},"claimCredit(address)":{"params":{"_recipient":"The owner and recipient of the credit."}},"constructor":{"params":{"_absolutePrestate":"The absolute prestate of the instruction trace.","_anchorStateRegistry":"The contract that stores the anchor state for each game type.","_challenger":"Address that is allowed to challenge instances of this contract.","_gameDuration":"The duration of the game.","_gameType":"The type ID of the game.","_l2ChainId":"Chain ID of the L2 network this contract argues about.","_maxGameDepth":"The maximum depth of bisection.","_proposer":"Address that is allowed to create instances of this contract.","_splitDepth":"The final depth of the output bisection portion of the game.","_vm":"An onchain VM that performs single instruction steps on an FPP trace.","_weth":"WETH contract for holding ETH."}},"defend(uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative defense position.","_parentIndex":"Index of the claim to defend in the `claimData` array."}},"extraData()":{"details":"`clones-with-immutable-args` argument #2","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"getRequiredBond(uint128)":{"params":{"_position":"The position of the bonded interaction."},"returns":{"requiredBond_":"The required ETH bond for the given move, in wei."}},"initialize()":{"details":"This function may only be called once."},"move(uint256,bytes32,bool)":{"params":{"_challengeIndex":"The index of the claim being moved against.","_claim":"The claim at the next logical position in the game.","_isAttack":"Whether or not the move is an attack or defense."}},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolveClaim(uint256)":{"details":"This function must be called bottom-up in the DAG      A subgame is a tree of claims that has a maximum depth of 1.      A subgame root claims is valid if, and only if, all of its child claims are invalid.      At the deepest level in the DAG, a claim is invalid if there's a successful step against it.","params":{"_claimIndex":"The index of the subgame root claim to resolve."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #1","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"step(uint256,bool,bytes,bytes)":{"details":"This function should point to a fault proof processor in order to execute      a step in the fault proof program on-chain. The interface of the fault proof      processor contract should adhere to the `IBigStepper` interface.","params":{"_claimIndex":"The index of the challenged claim within `claimData`.","_isAttack":"Whether or not the step is an attack or a defense.","_proof":"Proof to access memory nodes in the VM's merkle state tree.","_stateData":"The stateData of the step is the preimage of the claim at the given        prestate, which is at `_stateIndex` if the move is an attack and `_claimIndex` if        the move is a defense. If the step is an attack on the first instruction, it is        the absolute prestate of the fault proof VM."}}},"version":1},"userdoc":{"kind":"user","methods":{"absolutePrestate()":{"notice":"Returns the absolute prestate of the instruction trace."},"addLocalData(uint256,uint256,uint256)":{"notice":"Posts the requested local data to the VM's `PreimageOralce`."},"attack(uint256,bytes32)":{"notice":"Attack a disagreed upon `Claim`."},"claimCredit(address)":{"notice":"Claim the credit belonging to the recipient address."},"claimData(uint256)":{"notice":"An append-only array of all claims made during the dispute game."},"claimDataLen()":{"notice":"Returns the length of the `claimData` array."},"createdAt()":{"notice":"The starting timestamp of the game"},"credit(address)":{"notice":"Credited balances for winning participants."},"defend(uint256,bytes32)":{"notice":"Defend an agreed upon `Claim`."},"extraData()":{"notice":"Getter for the extra data."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameDuration()":{"notice":"Returns the game duration."},"gameType()":{"notice":"Getter for the game type."},"getRequiredBond(uint128)":{"notice":"Returns the required bond for a given move kind."},"initialize()":{"notice":"Initializes the contract."},"l1Head()":{"notice":"A block hash on the L1 that contains the disputed output root."},"l2BlockNumber()":{"notice":"The l2BlockNumber of the disputed output root in the `L2OutputOracle`."},"l2ChainId()":{"notice":"Returns the chain ID of the L2 network this contract argues about."},"maxGameDepth()":{"notice":"Returns the max game depth."},"move(uint256,bytes32,bool)":{"notice":"Generic move function, used for both `attack` and `defend` moves."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolveClaim(uint256)":{"notice":"Resolves the subgame rooted at the given claim index."},"resolvedAt()":{"notice":"The timestamp of the game's global resolution."},"rootClaim()":{"notice":"Getter for the root claim."},"splitDepth()":{"notice":"Returns the split depth."},"startingBlockNumber()":{"notice":"Only the starting block number of the game."},"startingOutputRoot()":{"notice":"The latest finalized output root, serving as the anchor for output bisection."},"startingRootHash()":{"notice":"Only the starting output root of the game."},"status()":{"notice":"Returns the current status of the game."},"step(uint256,bool,bytes,bytes)":{"notice":"Perform an instruction step via an on-chain fault proof processor."},"version()":{"notice":"Semantic version."},"vm()":{"notice":"Returns the address of the VM."},"weth()":{"notice":"Returns the WETH contract for holding ETH."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/dispute/PermissionedDisputeGame.sol":"PermissionedDisputeGame"},"evmVersion":"london","libraries":{}},"sources":{"lib/solady/src/utils/FixedPointMathLib.sol":{"keccak256":"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160","urls":["bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260","dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"],"license":"MIT"},"src/cannon/interfaces/IPreimageOracle.sol":{"keccak256":"0x7bda0156571b468cf0e22321945655f2dacd7082f440f742aa4612b36b388a9f","urls":["bzz-raw://5ba53777c65987bc20faa7731476c779e7794a58bafb40191a25275a05e3f8af","dweb:/ipfs/QmbxQwE2BC9aabTruDqkd2CLojwq7G9i2rkWKv46Wucae1"],"license":"MIT"},"src/dispute/FaultDisputeGame.sol":{"keccak256":"0x095d22e683f20a4e5a0541968a9bd98e70a4db81d2adfbde5d9918b45501d55c","urls":["bzz-raw://c60431da74c7e4e51be69ece49a0b92afd483c9020c2e7c726ad179e785199f9","dweb:/ipfs/QmSExbitxvKi6miC7o4UFZD6ssV2LGr7jJxWPY3jg3rvwX"],"license":"MIT"},"src/dispute/PermissionedDisputeGame.sol":{"keccak256":"0xe899f76ac3937f07a08824544e346263589df2f43005388102d061166c317c0e","urls":["bzz-raw://d349766115acf5aca66d36bccddd54891945503bf04d41887204bcac21a94654","dweb:/ipfs/QmUYxtRVNPGi4N4Ffg3sG75sBvmjbBpj1GCKFGDtk7XUTQ"],"license":"MIT"},"src/dispute/interfaces/IAnchorStateRegistry.sol":{"keccak256":"0x5fd05f2482d149668897e54f92d556a0c3512aa35b51ba800ef15d18dd490cb3","urls":["bzz-raw://689d621bc5c43a41d5232980f0eceecd7a3d8aa99438dfd9fed5f73d5ecd2887","dweb:/ipfs/QmQ5jw54TkdxLuLFti6JZown54rGQ3m3Q93pvnVU1j1HRj"],"license":"MIT"},"src/dispute/interfaces/IBigStepper.sol":{"keccak256":"0xc92ee3069677b903826c83d5b4e46e3be462f9ccf1d95e72a12b1052e3451f0a","urls":["bzz-raw://f93692bd3c8d9533ab8024ce2df6d880328826d1a92fdb9cf45301e2d0c65884","dweb:/ipfs/QmUcmbjTw9gnCUNasgmQjVbSgcCPKZ1FQyA31dH4k5Nc75"],"license":"MIT"},"src/dispute/interfaces/IDelayedWETH.sol":{"keccak256":"0x0bb035e9bbb411696841ea292eeed6d4463c3c3eee7d6c5d8e38a101e8a4ff04","urls":["bzz-raw://0477cf2c137392d35081f23bfd7f3565881767dcb1489a62e7e80b3c178cfce8","dweb:/ipfs/QmTjALjrHg5rvhjfCKPmXLTgkMNneECWaqoarunSoVS37G"],"license":"MIT"},"src/dispute/interfaces/IDisputeGame.sol":{"keccak256":"0x3a324ac81162fed73b9b9e78bef9cb08dd9dd2563289b843c25ca3bc61fab3b6","urls":["bzz-raw://07468a6f4863d2e729cc5348c22ab2c20aa3d0a82ad9ee23f0121a2d0c0e087d","dweb:/ipfs/QmYniMhZBtREzRf6G1fDssLbREFdMBcKCcJ2mt3GbkC87S"],"license":"MIT"},"src/dispute/interfaces/IDisputeGameFactory.sol":{"keccak256":"0x204d89d38d4dc0db40fbf898d95e639ac5608810a5a5506a3d80d71177648bda","urls":["bzz-raw://71e5c0ff04f409f30ca4f8ebfae1592c6ca495e315b059f969d11812e6e84dbd","dweb:/ipfs/QmaNKkhkJv7qHzX6bKB3LjpWBupfMPLhoATUGx1HRTLtXh"],"license":"MIT"},"src/dispute/interfaces/IFaultDisputeGame.sol":{"keccak256":"0x57257f3fcdf56a3ec906fc7dba4b4c914330bd7f0d5cabea77a99692c410dad7","urls":["bzz-raw://9308a4d42e0556e0f48985b1fee7ab71b1ece11bb347c220cd787012e4a6aff3","dweb:/ipfs/QmUYrMcwTpqMtVqFhfebkAJ3dSJNBXix5fFn2KNZRQBfK7"],"license":"MIT"},"src/dispute/interfaces/IInitializable.sol":{"keccak256":"0xbc553af6501a972850a98fc6284943f8e95a5183a7b4f64198c16fca2338c9dc","urls":["bzz-raw://b1f1c422ce4a9e72f0bbdec36434206da4af3a32d38f922acab957942e994ce5","dweb:/ipfs/QmNQGWBceLxx1CKSMLfwTM584q8UCgUpF4rrFe8pdbWYtj"],"license":"MIT"},"src/dispute/interfaces/IWETH.sol":{"keccak256":"0x681482892d7283baeb0c55178ff0654db694ada095972b7447cff1d4bbe2d557","urls":["bzz-raw://a02b310db3ed444a77451ed0951366e0a44be8c4d3b214eacc61e07e0262855c","dweb:/ipfs/QmaQfom7LazaxFzYmhQv6NeR5pGHQV4qBn5fNjx2GrEjKu"],"license":"MIT"},"src/dispute/lib/LibGameId.sol":{"keccak256":"0x9a9f30500da6eb7eeaa7193515dc5e45dc479f09ae7d522a07283c0fb5f4bfa6","urls":["bzz-raw://be113d8198d5822385de3d6ff3d7b3e8241993484aa95604ffaf38c2d33f40e0","dweb:/ipfs/QmY9mHC52fqc4gAFYCGobNyuP4TqugQgs8o1kTF33t17Hc"],"license":"MIT"},"src/dispute/lib/LibHashing.sol":{"keccak256":"0x5a072cd028094eee55acb84ed8d08d7422b1fb46658b7e043e916781530a383b","urls":["bzz-raw://b67e54f1318f1fd67b28b16c6861a56e27217c26a12aaea5c446e2ec53143920","dweb:/ipfs/QmVLSTP3PwXzRkR3A4qV9fjZhca9v8J1EnEYuVGUsSirAq"],"license":"MIT"},"src/dispute/lib/LibPosition.sol":{"keccak256":"0xfeb49b2421dbacc775aa27adf3b7803ebf84b47ac8f5b9fbc372bd9c45b76504","urls":["bzz-raw://95dc9d09fc4dbb4a7d7ffa70cb275277635d4fd1554421a65fd2e1329fddb059","dweb:/ipfs/QmVGHtM3ABWEBFETvAz6sBucirsRfuTrn2CdiUBH1nt3un"],"license":"MIT"},"src/dispute/lib/LibUDT.sol":{"keccak256":"0x42cd5a022686434153142b10871ff07e7ed27d32c28d5285f5d2cc6b7de1510c","urls":["bzz-raw://06e460b40977e0668dd27fcc4dd5496e24561e5e9c64cf812e077e2d5db60ffa","dweb:/ipfs/QmTrbrc7ykFhLmtEdKWq9sANRbuDMvjqthUNxtEkW3vTGg"],"license":"MIT"},"src/libraries/Clone.sol":{"keccak256":"0x5893eb0f0cb5ab0ed0db1ba47ce78de2362610864368a71963615334f3f5a829","urls":["bzz-raw://6bda119dc186663e7f67bcadb72263b4af023b2e1bff5aff559e86ceed339d1a","dweb:/ipfs/QmdqZyX8GMptLderaZW8cEeoKy5doNhW6jkTX2SySn1a8e"],"license":"BSD"},"src/libraries/DisputeErrors.sol":{"keccak256":"0x42ea16547770cf8b3fcd0190a5fce1e1186defb1a0b641590dfd3a85d339f42f","urls":["bzz-raw://123aa78b13b38b764b1b38373bb6b86a92a8ac24f2135efc54a3599ae915cfe5","dweb:/ipfs/QmSVBonKaGYprZPHbFGcFMK3vBTxk2u7YGxF9VCVVrfhzi"],"license":"MIT"},"src/libraries/DisputeTypes.sol":{"keccak256":"0x1a0103e1b54c2c982aa97bbf1e9c3c04b18a643c9f7eb9dd1e821594882438c6","urls":["bzz-raw://a895615bd84f9ac5270220c6380f836d0781c7d35a9049de18efa93fcd37352b","dweb:/ipfs/QmNvwHGWU9zBmhv9fweUpmKaAuSD6qKmguMypF4wwbmaFe"],"license":"MIT"},"src/libraries/Types.sol":{"keccak256":"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4","urls":["bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e","dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":94429,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"createdAt","offset":0,"slot":"0","type":"t_userDefinedValueType(Timestamp)99908"},{"astId":94433,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"resolvedAt","offset":8,"slot":"0","type":"t_userDefinedValueType(Timestamp)99908"},{"astId":94437,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"status","offset":16,"slot":"0","type":"t_enum(GameStatus)99924"},{"astId":94442,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claimData","offset":0,"slot":"1","type":"t_array(t_struct(ClaimData)97051_storage)dyn_storage"},{"astId":94447,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"credit","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":94453,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claims","offset":0,"slot":"3","type":"t_mapping(t_userDefinedValueType(ClaimHash)99904,t_bool)"},{"astId":94459,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"subgames","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"},{"astId":94462,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"subgameAtRootResolved","offset":0,"slot":"5","type":"t_bool"},{"astId":94465,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"initialized","offset":1,"slot":"5","type":"t_bool"},{"astId":94469,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"startingOutputRoot","offset":0,"slot":"6","type":"t_struct(OutputRoot)99930_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(ClaimData)97051_storage)dyn_storage":{"encoding":"dynamic_array","label":"struct IFaultDisputeGame.ClaimData[]","numberOfBytes":"32","base":"t_struct(ClaimData)97051_storage"},"t_array(t_uint256)dyn_storage":{"encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(GameStatus)99924":{"encoding":"inplace","label":"enum GameStatus","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_userDefinedValueType(ClaimHash)99904,t_bool)":{"encoding":"mapping","key":"t_userDefinedValueType(ClaimHash)99904","label":"mapping(ClaimHash => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(ClaimData)97051_storage":{"encoding":"inplace","label":"struct IFaultDisputeGame.ClaimData","numberOfBytes":"160","members":[{"astId":97035,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"parentIndex","offset":0,"slot":"0","type":"t_uint32"},{"astId":97037,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"counteredBy","offset":4,"slot":"0","type":"t_address"},{"astId":97039,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claimant","offset":0,"slot":"1","type":"t_address"},{"astId":97041,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"bond","offset":0,"slot":"2","type":"t_uint128"},{"astId":97044,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claim","offset":0,"slot":"3","type":"t_userDefinedValueType(Claim)99902"},{"astId":97047,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"position","offset":0,"slot":"4","type":"t_userDefinedValueType(Position)99916"},{"astId":97050,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"clock","offset":16,"slot":"4","type":"t_userDefinedValueType(Clock)99914"}]},"t_struct(OutputRoot)99930_storage":{"encoding":"inplace","label":"struct OutputRoot","numberOfBytes":"64","members":[{"astId":99927,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"root","offset":0,"slot":"0","type":"t_userDefinedValueType(Hash)99900"},{"astId":99929,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"l2BlockNumber","offset":0,"slot":"1","type":"t_uint256"}]},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_userDefinedValueType(Claim)99902":{"encoding":"inplace","label":"Claim","numberOfBytes":"32"},"t_userDefinedValueType(ClaimHash)99904":{"encoding":"inplace","label":"ClaimHash","numberOfBytes":"32"},"t_userDefinedValueType(Clock)99914":{"encoding":"inplace","label":"Clock","numberOfBytes":"16"},"t_userDefinedValueType(Hash)99900":{"encoding":"inplace","label":"Hash","numberOfBytes":"32"},"t_userDefinedValueType(Position)99916":{"encoding":"inplace","label":"Position","numberOfBytes":"16"},"t_userDefinedValueType(Timestamp)99908":{"encoding":"inplace","label":"Timestamp","numberOfBytes":"8"}}},"userdoc":{"version":1,"kind":"user","methods":{"absolutePrestate()":{"notice":"Returns the absolute prestate of the instruction trace."},"addLocalData(uint256,uint256,uint256)":{"notice":"Posts the requested local data to the VM's `PreimageOralce`."},"attack(uint256,bytes32)":{"notice":"Attack a disagreed upon `Claim`."},"claimCredit(address)":{"notice":"Claim the credit belonging to the recipient address."},"claimData(uint256)":{"notice":"An append-only array of all claims made during the dispute game."},"claimDataLen()":{"notice":"Returns the length of the `claimData` array."},"createdAt()":{"notice":"The starting timestamp of the game"},"credit(address)":{"notice":"Credited balances for winning participants."},"defend(uint256,bytes32)":{"notice":"Defend an agreed upon `Claim`."},"extraData()":{"notice":"Getter for the extra data."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameDuration()":{"notice":"Returns the game duration."},"gameType()":{"notice":"Getter for the game type."},"getRequiredBond(uint128)":{"notice":"Returns the required bond for a given move kind."},"initialize()":{"notice":"Initializes the contract."},"l1Head()":{"notice":"A block hash on the L1 that contains the disputed output root."},"l2BlockNumber()":{"notice":"The l2BlockNumber of the disputed output root in the `L2OutputOracle`."},"l2ChainId()":{"notice":"Returns the chain ID of the L2 network this contract argues about."},"maxGameDepth()":{"notice":"Returns the max game depth."},"move(uint256,bytes32,bool)":{"notice":"Generic move function, used for both `attack` and `defend` moves."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolveClaim(uint256)":{"notice":"Resolves the subgame rooted at the given claim index."},"resolvedAt()":{"notice":"The timestamp of the game's global resolution."},"rootClaim()":{"notice":"Getter for the root claim."},"splitDepth()":{"notice":"Returns the split depth."},"startingBlockNumber()":{"notice":"Only the starting block number of the game."},"startingOutputRoot()":{"notice":"The latest finalized output root, serving as the anchor for output bisection."},"startingRootHash()":{"notice":"Only the starting output root of the game."},"status()":{"notice":"Returns the current status of the game."},"step(uint256,bool,bytes,bytes)":{"notice":"Perform an instruction step via an on-chain fault proof processor."},"version()":{"notice":"Semantic version."},"vm()":{"notice":"Returns the address of the VM."},"weth()":{"notice":"Returns the WETH contract for holding ETH."}},"events":{"Move(uint256,bytes32,address)":{"notice":"Emitted when a new claim is added to the DAG by `claimant`"},"Resolved(uint8)":{"notice":"Emitted when the game is resolved."}},"errors":{"AlreadyInitialized()":[{"notice":"Thrown when a dispute game has already been initialized."}],"AnchorRootNotFound()":[{"notice":"Thrown when an anchor root is not found for a given game type."}],"BadAuth()":[{"notice":"Thrown when an unauthorized address attempts to interact with the game."}],"BondTransferFailed()":[{"notice":"Thrown when the transfer of credit to a recipient account reverts."}],"CannotDefendRootClaim()":[{"notice":"Thrown when a defense against the root claim is attempted."}],"ClaimAboveSplit()":[{"notice":"Thrown when a parent output root is attempted to be found on a claim that is in         the output root portion of the tree."}],"ClaimAlreadyExists()":[{"notice":"Thrown when a claim is attempting to be made that already exists."}],"ClaimAlreadyResolved()":[{"notice":"Thrown when resolving a claim that has already been resolved."}],"ClockNotExpired()":[{"notice":"Thrown when the game is attempted to be resolved too early."}],"ClockTimeExceeded()":[{"notice":"Thrown when a move is attempted to be made after the clock has timed out."}],"DuplicateStep()":[{"notice":"Thrown when trying to step against a claim for a second time, after it has already been countered with         an instruction step."}],"GameDepthExceeded()":[{"notice":"Thrown when a move is attempted to be made at or greater than the max depth of the game."}],"GameNotInProgress()":[{"notice":"Thrown when an action that requires the game to be `IN_PROGRESS` is invoked when         the game is not in progress."}],"IncorrectBondAmount()":[{"notice":"Thrown when a supplied bond is not equal to the required bond amount to cover the cost of the interaction."}],"InvalidLocalIdent()":[{"notice":"Thrown when an invalid local identifier is passed to the `addLocalData` function."}],"InvalidParent()":[{"notice":"Thrown when a step is attempted above the maximum game depth."}],"InvalidPrestate()":[{"notice":"Thrown when an invalid prestate is supplied to `step`."}],"InvalidSplitDepth()":[{"notice":"Thrown on deployment if the split depth is greater than or equal to the max         depth of the game."}],"NoCreditToClaim()":[{"notice":"Thrown when a credit claim is attempted for a value of 0."}],"OutOfOrderResolution()":[{"notice":"Thrown when resolving claims out of order."}],"UnexpectedRootClaim(bytes32)":[{"notice":"Thrown when the root claim has an unexpected VM status.         Some games can only start with a root-claim with a specific status."}],"ValidStep()":[{"notice":"Thrown when a step is made that computes the expected post state correctly."}]},"notice":"PermissionedDisputeGame is a contract that inherits from `FaultDisputeGame`, and contains two roles:         - The `challenger` role, which is allowed to challenge a dispute.         - The `proposer` role, which is allowed to create proposals and participate in their game.         This contract exists as a way for networks to support the fault proof iteration of the OptimismPortal         contract without needing to support a fully permissionless system. Permissionless systems can introduce         costs that certain networks may not wish to support. This contract can also be used as a fallback mechanism         in case of a failure in the permissionless fault proof system in the stage one release."},"devdoc":{"version":1,"kind":"dev","methods":{"addLocalData(uint256,uint256,uint256)":{"params":{"_execLeafIdx":"The index of the leaf claim in an execution subgame that requires the local data for a step.","_ident":"The local identifier of the data to post.","_partOffset":"The offset of the data to post."}},"attack(uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative attack position.","_parentIndex":"Index of the `Claim` to attack in the `claimData` array."}},"claimCredit(address)":{"params":{"_recipient":"The owner and recipient of the credit."}},"constructor":{"params":{"_absolutePrestate":"The absolute prestate of the instruction trace.","_anchorStateRegistry":"The contract that stores the anchor state for each game type.","_challenger":"Address that is allowed to challenge instances of this contract.","_gameDuration":"The duration of the game.","_gameType":"The type ID of the game.","_l2ChainId":"Chain ID of the L2 network this contract argues about.","_maxGameDepth":"The maximum depth of bisection.","_proposer":"Address that is allowed to create instances of this contract.","_splitDepth":"The final depth of the output bisection portion of the game.","_vm":"An onchain VM that performs single instruction steps on an FPP trace.","_weth":"WETH contract for holding ETH."}},"defend(uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative defense position.","_parentIndex":"Index of the claim to defend in the `claimData` array."}},"extraData()":{"details":"`clones-with-immutable-args` argument #2","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"getRequiredBond(uint128)":{"params":{"_position":"The position of the bonded interaction."},"returns":{"requiredBond_":"The required ETH bond for the given move, in wei."}},"initialize()":{"details":"This function may only be called once."},"move(uint256,bytes32,bool)":{"params":{"_challengeIndex":"The index of the claim being moved against.","_claim":"The claim at the next logical position in the game.","_isAttack":"Whether or not the move is an attack or defense."}},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolveClaim(uint256)":{"details":"This function must be called bottom-up in the DAG      A subgame is a tree of claims that has a maximum depth of 1.      A subgame root claims is valid if, and only if, all of its child claims are invalid.      At the deepest level in the DAG, a claim is invalid if there's a successful step against it.","params":{"_claimIndex":"The index of the subgame root claim to resolve."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #1","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"step(uint256,bool,bytes,bytes)":{"details":"This function should point to a fault proof processor in order to execute      a step in the fault proof program on-chain. The interface of the fault proof      processor contract should adhere to the `IBigStepper` interface.","params":{"_claimIndex":"The index of the challenged claim within `claimData`.","_isAttack":"Whether or not the step is an attack or a defense.","_proof":"Proof to access memory nodes in the VM's merkle state tree.","_stateData":"The stateData of the step is the preimage of the claim at the given        prestate, which is at `_stateIndex` if the move is an attack and `_claimIndex` if        the move is a defense. If the step is an attack on the first instruction, it is        the absolute prestate of the fault proof VM."}}},"errors":{"UnexpectedRootClaim(bytes32)":[{"params":{"rootClaim":"is the claim that was unexpected."}}]},"title":"PermissionedDisputeGame"},"id":160}