{"abi":[{"type":"constructor","inputs":[{"name":"_optimistInviter","type":"address","internalType":"contract OptimistInviter"},{"name":"_name","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"CLAIMABLE_INVITE_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"EIP712_DOMAIN_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"consumeNonce","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"currentNonce","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimableInviteStructHash","inputs":[{"name":"_claimableInvite","type":"tuple","internalType":"struct OptimistInviter.ClaimableInvite","components":[{"name":"issuer","type":"address","internalType":"address"},{"name":"nonce","type":"bytes32","internalType":"bytes32"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"getClaimableInviteWithNewNonce","inputs":[{"name":"_issuer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct OptimistInviter.ClaimableInvite","components":[{"name":"issuer","type":"address","internalType":"address"},{"name":"nonce","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getDigest","inputs":[{"name":"_claimableInvite","type":"tuple","internalType":"struct OptimistInviter.ClaimableInvite","components":[{"name":"issuer","type":"address","internalType":"address"},{"name":"nonce","type":"bytes32","internalType":"bytes32"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getDigestWithEIP712Domain","inputs":[{"name":"_claimableInvite","type":"tuple","internalType":"struct OptimistInviter.ClaimableInvite","components":[{"name":"issuer","type":"address","internalType":"address"},{"name":"nonce","type":"bytes32","internalType":"bytes32"}]},{"name":"_name","type":"bytes","internalType":"bytes"},{"name":"_version","type":"bytes","internalType":"bytes"},{"name":"_chainid","type":"uint256","internalType":"uint256"},{"name":"_verifyingContract","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"optimistInviter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract OptimistInviter"}],"stateMutability":"view"}],"bytecode":{"object":"0x60806040523480156200001157600080fd5b5060405162000d3138038062000d3183398101604081905262000034916200007c565b600080546001600160a01b0319166001600160a01b03841617905560016200005d82826200020b565b505050620002d7565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200009057600080fd5b82516001600160a01b0381168114620000a857600080fd5b602084810151919350906001600160401b0380821115620000c857600080fd5b818601915086601f830112620000dd57600080fd5b815181811115620000f257620000f262000066565b604051601f8201601f19908116603f011681019083821181831017156200011d576200011d62000066565b8160405282815289868487010111156200013657600080fd5b600093505b828410156200015a57848401860151818501870152928501926200013b565b828411156200016c5760008684830101525b8096505050505050509250929050565b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020657600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b5050505b505050565b81516001600160401b0381111562000227576200022762000066565b6200023f816200023884546200017c565b84620001b8565b602080601f8311600181146200027757600084156200025e5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a85788860151825594840194600190910190840162000287565b5085821015620002c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610a4a80620002e76000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"437:3808:314:-:0;;;1255:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1332:15;:34;;-1:-1:-1;;;;;;1332:34:314;-1:-1:-1;;;;;1332:34:314;;;;;-1:-1:-1;1376:12:314;1383:5;-1:-1:-1;1376:12:314;:::i;:::-;;1255:140;;437:3808;;14:127:350;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1280;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;364:16;;-1:-1:-1;;;;;409:31:350;;399:42;;389:70;;455:1;452;445:12;389:70;502:2;533:18;;;527:25;478:5;;-1:-1:-1;502:2:350;-1:-1:-1;;;;;601:14:350;;;598:34;;;628:1;625;618:12;598:34;666:6;655:9;651:22;641:32;;711:7;704:4;700:2;696:13;692:27;682:55;;733:1;730;723:12;682:55;762:2;756:9;784:2;780;777:10;774:36;;;790:18;;:::i;:::-;865:2;859:9;833:2;919:13;;-1:-1:-1;;915:22:350;;;939:2;911:31;907:40;895:53;;;963:18;;;983:22;;;960:46;957:72;;;1009:18;;:::i;:::-;1049:10;1045:2;1038:22;1084:2;1076:6;1069:18;1124:7;1119:2;1114;1110;1106:11;1102:20;1099:33;1096:53;;;1145:1;1142;1135:12;1096:53;1167:1;1158:10;;1177:129;1191:2;1188:1;1185:9;1177:129;;;1279:10;;;1275:19;;1269:26;1248:14;;;1244:23;;1237:59;1202:10;;;;1177:129;;;1324:2;1321:1;1318:9;1315:80;;;1383:1;1378:2;1373;1365:6;1361:15;1357:24;1350:35;1315:80;1414:6;1404:16;;;;;;;;146:1280;;;;;:::o;1431:380::-;1510:1;1506:12;;;;1553;;;1574:61;;1628:4;1620:6;1616:17;1606:27;;1574:61;1681:2;1673:6;1670:14;1650:18;1647:38;1644:161;;1727:10;1722:3;1718:20;1715:1;1708:31;1762:4;1759:1;1752:15;1790:4;1787:1;1780:15;1644:161;;1431:380;;;:::o;1942:545::-;2044:2;2039:3;2036:11;2033:448;;;2080:1;2105:5;2101:2;2094:17;2150:4;2146:2;2136:19;2220:2;2208:10;2204:19;2201:1;2197:27;2191:4;2187:38;2256:4;2244:10;2241:20;2238:47;;;-1:-1:-1;2279:4:350;2238:47;2334:2;2329:3;2325:12;2322:1;2318:20;2312:4;2308:31;2298:41;;2389:82;2407:2;2400:5;2397:13;2389:82;;;2452:17;;;2433:1;2422:13;2389:82;;;2393:3;;;2033:448;1942:545;;;:::o;2663:1352::-;2783:10;;-1:-1:-1;;;;;2805:30:350;;2802:56;;;2838:18;;:::i;:::-;2867:97;2957:6;2917:38;2949:4;2943:11;2917:38;:::i;:::-;2911:4;2867:97;:::i;:::-;3019:4;;3083:2;3072:14;;3100:1;3095:663;;;;3802:1;3819:6;3816:89;;;-1:-1:-1;3871:19:350;;;3865:26;3816:89;-1:-1:-1;;2620:1:350;2616:11;;;2612:24;2608:29;2598:40;2644:1;2640:11;;;2595:57;3918:81;;3065:944;;3095:663;1889:1;1882:14;;;1926:4;1913:18;;-1:-1:-1;;3131:20:350;;;3249:236;3263:7;3260:1;3257:14;3249:236;;;3352:19;;;3346:26;3331:42;;3444:27;;;;3412:1;3400:14;;;;3279:19;;3249:236;;;3253:3;3513:6;3504:7;3501:19;3498:201;;;3574:19;;;3568:26;-1:-1:-1;;3657:1:350;3653:14;;;3669:3;3649:24;3645:37;3641:42;3626:58;3611:74;;3498:201;-1:-1:-1;;;;;3745:1:350;3729:14;;;3725:22;3712:36;;-1:-1:-1;2663:1352:350:o;:::-;437:3808:314;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"437:3808:314:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3674:569;;;;;;:::i;:::-;;:::i;:::-;;;2607:25:350;;;2595:2;2580:18;3674:569:314;;;;;;;;1111:18;;;:::i;:::-;;;;;;;:::i;2770:340::-;;;;;;:::i;:::-;;:::i;2060:119::-;;;:::i;2388:193::-;;;;;;:::i;:::-;;:::i;:::-;;;;4043:13:350;;4058:42;4039:62;4021:81;;4158:4;4146:17;;;4140:24;4118:20;;;4111:54;;;;3994:18;2388:193:314;3805:366:350;1221:27:314;;;;;;536:110;;588:58;536:110;;754:152;;811:95;754:152;;981:38;;;;;;;;;;;;4560:42:350;4548:55;;;4530:74;;4518:2;4503:18;981:38:314;4358:252:350;1572:274:314;;;;;;:::i;:::-;;:::i;3674:569::-;4055:16;;;;;;;;;;4073:19;;;;;;4020:103;;;811:95;4020:103;;;5399:25:350;;;;5440:18;;5433:34;;;;5483:18;;;5476:34;5526:18;;;5519:34;;;5602:42;5590:55;;5569:19;;;5562:84;3948:7:314;;;;5371:19:350;;4020:103:314;;;;;;;;;;;;3997:136;;;;;;3971:162;;4150:86;4172:15;4189:46;4218:16;4189:46;;;;;;;;;;:::i;:::-;8677:57:61;;7736:66:350;8677:57:61;;;7724:79:350;7819:11;;;7812:27;;;7855:12;;;7848:28;;;8641:7:61;;7892:12:350;;8677:57:61;;;;;;;;;;;;8667:68;;;;;;8660:75;;8548:194;;;;;4150:86:314;4143:93;3674:569;-1:-1:-1;;;;;;;3674:569:314:o;1111:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2770:340::-;2869:7;2895:208;2934:16;2970:4;2895:208;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2995:15:314;;;:32;;;;;;;;:15;;;;;-1:-1:-1;2995:30:314;;-1:-1:-1;2995:32:314;;;;;-1:-1:-1;2995:32:314;;;;;;:15;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3077:15;;3042:13;;3077:15;;2895:25;:208::i;:::-;2888:215;2770:340;-1:-1:-1;;2770:340:314:o;2060:119::-;2155:12;:14;;2100:7;;;2155:14;;;:::i;:::-;;;;;2144:26;;;;;;2607:25:350;;2595:2;2580:18;;2461:177;2144:26:314;;;;;;;;;;;;;2134:37;;;;;;2119:53;;2060:119;:::o;2388:193::-;-1:-1:-1;;;;;;;;;;;;;;;;;2518:56:314;;;;;;;;2550:7;2518:56;;;;;;2559:14;:12;:14::i;:::-;2518:56;;2511:63;2388:193;-1:-1:-1;;2388:193:314:o;1572:274::-;1790:23;;1815:22;;;;;1752:86;;1712:7;;1752:86;;588:58;;1790:23;;1752:86;7295:25:350;;;7368:42;7356:55;;;;7351:2;7336:18;;7329:83;7443:2;7428:18;;7421:34;7283:2;7268:18;;7093:368;1752:86:314;;;;;;;;;;;;;1742:97;;;;;;1735:104;;1572:274;;;:::o;14:163:350:-;82:5;127:2;118:6;113:3;109:16;105:25;102:45;;;143:1;140;133:12;102:45;-1:-1:-1;165:6:350;14:163;-1:-1:-1;14:163:350:o;182:184::-;234:77;231:1;224:88;331:4;328:1;321:15;355:4;352:1;345:15;371:334;442:2;436:9;498:2;488:13;;503:66;484:86;472:99;;601:18;586:34;;622:22;;;583:62;580:88;;;648:18;;:::i;:::-;684:2;677:22;371:334;;-1:-1:-1;371:334:350:o;710:245::-;758:4;791:18;783:6;780:30;777:56;;;813:18;;:::i;:::-;-1:-1:-1;870:2:350;858:15;875:66;854:88;944:4;850:99;;710:245::o;960:462::-;1002:5;1055:3;1048:4;1040:6;1036:17;1032:27;1022:55;;1073:1;1070;1063:12;1022:55;1109:6;1096:20;1140:48;1156:31;1184:2;1156:31;:::i;:::-;1140:48;:::i;:::-;1213:2;1204:7;1197:19;1259:3;1252:4;1247:2;1239:6;1235:15;1231:26;1228:35;1225:55;;;1276:1;1273;1266:12;1225:55;1341:2;1334:4;1326:6;1322:17;1315:4;1306:7;1302:18;1289:55;1389:1;1364:16;;;1382:4;1360:27;1353:38;;;;1368:7;960:462;-1:-1:-1;;;960:462:350:o;1427:196::-;1495:20;;1555:42;1544:54;;1534:65;;1524:93;;1613:1;1610;1603:12;1524:93;1427:196;;;:::o;1628:828::-;1778:6;1786;1794;1802;1810;1863:3;1851:9;1842:7;1838:23;1834:33;1831:53;;;1880:1;1877;1870:12;1831:53;1903:62;1957:7;1946:9;1903:62;:::i;:::-;1893:72;;2016:2;2005:9;2001:18;1988:32;2039:18;2080:2;2072:6;2069:14;2066:34;;;2096:1;2093;2086:12;2066:34;2119:49;2160:7;2151:6;2140:9;2136:22;2119:49;:::i;:::-;2109:59;;2221:2;2210:9;2206:18;2193:32;2177:48;;2250:2;2240:8;2237:16;2234:36;;;2266:1;2263;2256:12;2234:36;;2289:51;2332:7;2321:8;2310:9;2306:24;2289:51;:::i;:::-;2279:61;;;2387:3;2376:9;2372:19;2359:33;2349:43;;2411:39;2445:3;2434:9;2430:19;2411:39;:::i;:::-;2401:49;;1628:828;;;;;;;;:::o;2643:258::-;2715:1;2725:113;2739:6;2736:1;2733:13;2725:113;;;2815:11;;;2809:18;2796:11;;;2789:39;2761:2;2754:10;2725:113;;;2856:6;2853:1;2850:13;2847:48;;;2891:1;2882:6;2877:3;2873:16;2866:27;2847:48;;2643:258;;;:::o;2906:442::-;3055:2;3044:9;3037:21;3018:4;3087:6;3081:13;3130:6;3125:2;3114:9;3110:18;3103:34;3146:66;3205:6;3200:2;3189:9;3185:18;3180:2;3172:6;3168:15;3146:66;:::i;:::-;3264:2;3252:15;3269:66;3248:88;3233:104;;;;3339:2;3229:113;;2906:442;-1:-1:-1;;2906:442:350:o;3353:256::-;3449:6;3502:2;3490:9;3481:7;3477:23;3473:32;3470:52;;;3518:1;3515;3508:12;3470:52;3541:62;3595:7;3584:9;3541:62;:::i;:::-;3531:72;3353:256;-1:-1:-1;;;3353:256:350:o;3614:186::-;3673:6;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;4615:520::-;4709:6;4762:2;4750:9;4741:7;4737:23;4733:32;4730:52;;;4778:1;4775;4768:12;4730:52;4811:2;4805:9;4853:2;4845:6;4841:15;4922:6;4910:10;4907:22;4886:18;4874:10;4871:34;4868:62;4865:88;;;4933:18;;:::i;:::-;4969:2;4962:22;5008:29;5027:9;5008:29;:::i;:::-;5000:6;4993:45;5099:2;5088:9;5084:18;5071:32;5066:2;5058:6;5054:15;5047:57;5123:6;5113:16;;;4615:520;;;;:::o;5657:437::-;5736:1;5732:12;;;;5779;;;5800:61;;5854:4;5846:6;5842:17;5832:27;;5800:61;5907:2;5899:6;5896:14;5876:18;5873:38;5870:218;;5944:77;5941:1;5934:88;6045:4;6042:1;6035:15;6073:4;6070:1;6063:15;6099:635;6179:6;6232:2;6220:9;6211:7;6207:23;6203:32;6200:52;;;6248:1;6245;6238:12;6200:52;6281:9;6275:16;6314:18;6306:6;6303:30;6300:50;;;6346:1;6343;6336:12;6300:50;6369:22;;6422:4;6414:13;;6410:27;-1:-1:-1;6400:55:350;;6451:1;6448;6441:12;6400:55;6480:2;6474:9;6505:48;6521:31;6549:2;6521:31;:::i;6505:48::-;6576:2;6569:5;6562:17;6616:7;6611:2;6606;6602;6598:11;6594:20;6591:33;6588:53;;;6637:1;6634;6627:12;6588:53;6650:54;6701:2;6696;6689:5;6685:14;6680:2;6676;6672:11;6650:54;:::i;:::-;6723:5;6099:635;-1:-1:-1;;;;;6099:635:350:o;6739:349::-;6778:3;6809:66;6802:5;6799:77;6796:257;;6909:77;6906:1;6899:88;7010:4;7007:1;7000:15;7038:4;7035:1;7028:15;6796:257;-1:-1:-1;7080:1:350;7069:13;;6739:349::o","linkReferences":{}},"methodIdentifiers":{"CLAIMABLE_INVITE_TYPEHASH()":"c4fc453d","EIP712_DOMAIN_TYPEHASH()":"c7977be7","consumeNonce()":"34b15118","currentNonce()":"adb610a3","getClaimableInviteStructHash((address,bytes32))":"eb1df626","getClaimableInviteWithNewNonce(address)":"8ebe24e5","getDigest((address,bytes32))":"1c6e7f25","getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)":"019a4f49","name()":"06fdde03","optimistInviter()":"d1829907"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract OptimistInviter\",\"name\":\"_optimistInviter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CLAIMABLE_INVITE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumeNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"}],\"name\":\"getClaimableInviteStructHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"getClaimableInviteWithNewNonce\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_version\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_verifyingContract\",\"type\":\"address\"}],\"name\":\"getDigestWithEIP712Domain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimistInviter\",\"outputs\":[{\"internalType\":\"contract OptimistInviter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"consumeNonce()\":{\"returns\":{\"_0\":\"Nonce that should be used as part of ClaimableInvite.\"}},\"getClaimableInviteStructHash((address,bytes32))\":{\"params\":{\"_claimableInvite\":\"ClaimableInvite struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 typed struct hash.\"}},\"getClaimableInviteWithNewNonce(address)\":{\"params\":{\"_issuer\":\"Issuer to include in the ClaimableInvite.\"},\"returns\":{\"_0\":\"ClaimableInvite that can be hashed & signed.\"}},\"getDigest((address,bytes32))\":{\"params\":{\"_claimableInvite\":\"ClaimableInvite struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}},\"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)\":{\"params\":{\"_chainid\":\"Chain ID to use in the EIP712 domain.\",\"_claimableInvite\":\"ClaimableInvite struct to hash.\",\"_name\":\"Contract name to use in the EIP712 domain.\",\"_verifyingContract\":\"Address to use in the EIP712 domain.\",\"_version\":\"Contract version to use in the EIP712 domain.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLAIMABLE_INVITE_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the ClaimableInvite type.\"},\"EIP712_DOMAIN_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the EIP712Domain type that is included as part of the signature.\"},\"consumeNonce()\":{\"notice\":\"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces.\"},\"currentNonce()\":{\"notice\":\"Keeps track of current nonce to generate new nonces for each invite.\"},\"getClaimableInviteStructHash((address,bytes32))\":{\"notice\":\"Returns the hash of the struct ClaimableInvite.\"},\"getClaimableInviteWithNewNonce(address)\":{\"notice\":\"Returns a ClaimableInvite with the issuer and current nonce.\"},\"getDigest((address,bytes32))\":{\"notice\":\"Computes the EIP712 digest with default correct parameters.\"},\"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)\":{\"notice\":\"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail.\"},\"name()\":{\"notice\":\"OptimistInviter contract name. Used to construct the EIP-712 domain.\"},\"optimistInviter()\":{\"notice\":\"Address of OptimistInviter contract we are testing.\"}},\"notice\":\"Simple helper contract that helps with testing flow and signature for         OptimistInviter contract. Made this a separate contract instead of including         in OptimistInviter.t.sol for reusability.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/OptimistInviterHelper.sol\":\"OptimistInviterHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x756accab2fc86dbe076dc340af05c06c732815392a8cbab6524dc971d4957208\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4bf7f1a162318d31c39a4d34d46ada80cdacd51c24a110f411ec245c1b6a4ef\",\"dweb:/ipfs/QmScehXXWTKDnUr9ohMb1o8zButujNP9SDAWRSnDy6jpdK\"]},\"src/periphery/op-nft/OptimistInviter.sol\":{\"keccak256\":\"0x9d798824a1bdd45ffc46123f3fd8fd1e7855a05df52dcfc134f5f10db6fa57eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bc646a72c4db3f3b68c5935cfd8d067897af83f7d788c2cdeb47bf9f3ced2c9\",\"dweb:/ipfs/QmQjRhFArSuWgMmCbS8ZLrAr1njHort2dMBpa1eDx4Geu7\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"test/mocks/OptimistInviterHelper.sol\":{\"keccak256\":\"0x37b0384a78d2fd80b07ab3e85f2b435f50ab384704a3ff43816844777e218a15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56b1f2bc10927cfcd6883733a5863383803ef96f899802cd853f23fea351d77e\",\"dweb:/ipfs/QmfRrNFqU83SUoUGEWnBhCBc2YjAwSMSXp7c2vdo7vjE5p\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract OptimistInviter","name":"_optimistInviter","type":"address"},{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"view","type":"function","name":"CLAIMABLE_INVITE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"EIP712_DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"consumeNonce","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"currentNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct OptimistInviter.ClaimableInvite","name":"_claimableInvite","type":"tuple","components":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"nonce","type":"bytes32"}]}],"stateMutability":"pure","type":"function","name":"getClaimableInviteStructHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"getClaimableInviteWithNewNonce","outputs":[{"internalType":"struct OptimistInviter.ClaimableInvite","name":"","type":"tuple","components":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"nonce","type":"bytes32"}]}]},{"inputs":[{"internalType":"struct OptimistInviter.ClaimableInvite","name":"_claimableInvite","type":"tuple","components":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"nonce","type":"bytes32"}]}],"stateMutability":"view","type":"function","name":"getDigest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct OptimistInviter.ClaimableInvite","name":"_claimableInvite","type":"tuple","components":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"nonce","type":"bytes32"}]},{"internalType":"bytes","name":"_name","type":"bytes"},{"internalType":"bytes","name":"_version","type":"bytes"},{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_verifyingContract","type":"address"}],"stateMutability":"pure","type":"function","name":"getDigestWithEIP712Domain","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"optimistInviter","outputs":[{"internalType":"contract OptimistInviter","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"consumeNonce()":{"returns":{"_0":"Nonce that should be used as part of ClaimableInvite."}},"getClaimableInviteStructHash((address,bytes32))":{"params":{"_claimableInvite":"ClaimableInvite struct to hash."},"returns":{"_0":"EIP-712 typed struct hash."}},"getClaimableInviteWithNewNonce(address)":{"params":{"_issuer":"Issuer to include in the ClaimableInvite."},"returns":{"_0":"ClaimableInvite that can be hashed & signed."}},"getDigest((address,bytes32))":{"params":{"_claimableInvite":"ClaimableInvite struct to hash."},"returns":{"_0":"EIP-712 compatible digest."}},"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)":{"params":{"_chainid":"Chain ID to use in the EIP712 domain.","_claimableInvite":"ClaimableInvite struct to hash.","_name":"Contract name to use in the EIP712 domain.","_verifyingContract":"Address to use in the EIP712 domain.","_version":"Contract version to use in the EIP712 domain."},"returns":{"_0":"EIP-712 compatible digest."}}},"version":1},"userdoc":{"kind":"user","methods":{"CLAIMABLE_INVITE_TYPEHASH()":{"notice":"EIP712 typehash for the ClaimableInvite type."},"EIP712_DOMAIN_TYPEHASH()":{"notice":"EIP712 typehash for the EIP712Domain type that is included as part of the signature."},"consumeNonce()":{"notice":"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."},"currentNonce()":{"notice":"Keeps track of current nonce to generate new nonces for each invite."},"getClaimableInviteStructHash((address,bytes32))":{"notice":"Returns the hash of the struct ClaimableInvite."},"getClaimableInviteWithNewNonce(address)":{"notice":"Returns a ClaimableInvite with the issuer and current nonce."},"getDigest((address,bytes32))":{"notice":"Computes the EIP712 digest with default correct parameters."},"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)":{"notice":"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."},"name()":{"notice":"OptimistInviter contract name. Used to construct the EIP-712 domain."},"optimistInviter()":{"notice":"Address of OptimistInviter contract we are testing."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"test/mocks/OptimistInviterHelper.sol":"OptimistInviterHelper"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol":{"keccak256":"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863","urls":["bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c","dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol":{"keccak256":"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc","urls":["bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb","dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol":{"keccak256":"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc","urls":["bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94","dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"keccak256":"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544","urls":["bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e","dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10","urls":["bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487","dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3","urls":["bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638","dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5","urls":["bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900","dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol":{"keccak256":"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81","urls":["bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b","dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"],"license":"MIT"},"src/periphery/op-nft/AttestationStation.sol":{"keccak256":"0x756accab2fc86dbe076dc340af05c06c732815392a8cbab6524dc971d4957208","urls":["bzz-raw://a4bf7f1a162318d31c39a4d34d46ada80cdacd51c24a110f411ec245c1b6a4ef","dweb:/ipfs/QmScehXXWTKDnUr9ohMb1o8zButujNP9SDAWRSnDy6jpdK"],"license":"MIT"},"src/periphery/op-nft/OptimistInviter.sol":{"keccak256":"0x9d798824a1bdd45ffc46123f3fd8fd1e7855a05df52dcfc134f5f10db6fa57eb","urls":["bzz-raw://7bc646a72c4db3f3b68c5935cfd8d067897af83f7d788c2cdeb47bf9f3ced2c9","dweb:/ipfs/QmQjRhFArSuWgMmCbS8ZLrAr1njHort2dMBpa1eDx4Geu7"],"license":"MIT"},"src/periphery/op-nft/libraries/OptimistConstants.sol":{"keccak256":"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c","urls":["bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268","dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"},"test/mocks/OptimistInviterHelper.sol":{"keccak256":"0x37b0384a78d2fd80b07ab3e85f2b435f50ab384704a3ff43816844777e218a15","urls":["bzz-raw://56b1f2bc10927cfcd6883733a5863383803ef96f899802cd853f23fea351d77e","dweb:/ipfs/QmfRrNFqU83SUoUGEWnBhCBc2YjAwSMSXp7c2vdo7vjE5p"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":191719,"contract":"test/mocks/OptimistInviterHelper.sol:OptimistInviterHelper","label":"optimistInviter","offset":0,"slot":"0","type":"t_contract(OptimistInviter)104907"},{"astId":191722,"contract":"test/mocks/OptimistInviterHelper.sol:OptimistInviterHelper","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":191725,"contract":"test/mocks/OptimistInviterHelper.sol:OptimistInviterHelper","label":"currentNonce","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_contract(OptimistInviter)104907":{"encoding":"inplace","label":"contract OptimistInviter","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"version":1,"kind":"user","methods":{"CLAIMABLE_INVITE_TYPEHASH()":{"notice":"EIP712 typehash for the ClaimableInvite type."},"EIP712_DOMAIN_TYPEHASH()":{"notice":"EIP712 typehash for the EIP712Domain type that is included as part of the signature."},"consumeNonce()":{"notice":"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."},"currentNonce()":{"notice":"Keeps track of current nonce to generate new nonces for each invite."},"getClaimableInviteStructHash((address,bytes32))":{"notice":"Returns the hash of the struct ClaimableInvite."},"getClaimableInviteWithNewNonce(address)":{"notice":"Returns a ClaimableInvite with the issuer and current nonce."},"getDigest((address,bytes32))":{"notice":"Computes the EIP712 digest with default correct parameters."},"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)":{"notice":"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."},"name()":{"notice":"OptimistInviter contract name. Used to construct the EIP-712 domain."},"optimistInviter()":{"notice":"Address of OptimistInviter contract we are testing."}},"notice":"Simple helper contract that helps with testing flow and signature for         OptimistInviter contract. Made this a separate contract instead of including         in OptimistInviter.t.sol for reusability."},"devdoc":{"version":1,"kind":"dev","methods":{"consumeNonce()":{"returns":{"_0":"Nonce that should be used as part of ClaimableInvite."}},"getClaimableInviteStructHash((address,bytes32))":{"params":{"_claimableInvite":"ClaimableInvite struct to hash."},"returns":{"_0":"EIP-712 typed struct hash."}},"getClaimableInviteWithNewNonce(address)":{"params":{"_issuer":"Issuer to include in the ClaimableInvite."},"returns":{"_0":"ClaimableInvite that can be hashed & signed."}},"getDigest((address,bytes32))":{"params":{"_claimableInvite":"ClaimableInvite struct to hash."},"returns":{"_0":"EIP-712 compatible digest."}},"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)":{"params":{"_chainid":"Chain ID to use in the EIP712 domain.","_claimableInvite":"ClaimableInvite struct to hash.","_name":"Contract name to use in the EIP712 domain.","_verifyingContract":"Address to use in the EIP712 domain.","_version":"Contract version to use in the EIP712 domain."},"returns":{"_0":"EIP-712 compatible digest."}}}},"id":314}