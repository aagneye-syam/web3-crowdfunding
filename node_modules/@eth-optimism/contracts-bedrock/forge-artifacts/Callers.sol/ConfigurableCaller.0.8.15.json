{"abi":[{"type":"fallback","stateMutability":"nonpayable"},{"type":"function","name":"call","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDoRevert","inputs":[{"name":"_doRevert","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPayload","inputs":[{"name":"_payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTarget","inputs":[{"name":"_target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"WhatHappened","inputs":[{"name":"success","type":"bool","indexed":false,"internalType":"bool"},{"name":"returndata","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x60806040526000805460ff1916600117905534801561001d57600080fd5b506106958061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806328b5e32b146100c0578063776d1a01146100c8578063781dd75014610122578063deb3cdf214610161575b60005460ff16156100be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064015b60405180910390fd5b005b6100be610174565b6100be6100d63660046102bb565b6000805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6100be6101303660046102f8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6100be61016f36600461031a565b6102ae565b60005460ff16156101e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064016100b5565b600080546040518291610100900473ffffffffffffffffffffffffffffffffffffffff1690610212906001906103df565b6000604051808303816000865af19150503d806000811461024f576040519150601f19603f3d011682016040523d82523d6000602084013e610254565b606091505b50915091507f2106b16c04ed7c28102e8f5bae2a81f8f969346efa3d397f8dd488794385d414828260405161028a929190610473565b60405180910390a18180156102a157815160208301f35b815160208301fd5b505050565b60016102a982848361056d565b6000602082840312156102cd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102f157600080fd5b9392505050565b60006020828403121561030a57600080fd5b813580151581146102f157600080fd5b6000806020838503121561032d57600080fd5b823567ffffffffffffffff8082111561034557600080fd5b818501915085601f83011261035957600080fd5b81358181111561036857600080fd5b86602082850101111561037a57600080fd5b60209290920196919550909350505050565b600181811c908216806103a057607f821691505b6020821081036103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008083546103ed8161038c565b60018281168015610405576001811461043857610467565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450610467565b8760005260208060002060005b8581101561045e5781548a820152908401908201610445565b50505082870194505b50929695505050505050565b821515815260006020604081840152835180604085015260005b818110156104a95785810183015185820160600152820161048d565b818111156104bb576000606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201606001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156102a957600081815260208120601f850160051c810160208610156105465750805b601f850160051c820191505b8181101561056557828155600101610552565b505050505050565b67ffffffffffffffff831115610585576105856104f0565b61059983610593835461038c565b8361051f565b6000601f8411600181146105eb57600085156105b55750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610681565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561063a578685013582556020948501946001909201910161061a565b5086821015610675577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea164736f6c634300080f000a","sourceMap":"992:1409:310:-:0;;;1026:20;;;-1:-1:-1;;1026:20:310;1042:4;1026:20;;;992:1409;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806328b5e32b146100c0578063776d1a01146100c8578063781dd75014610122578063deb3cdf214610161575b60005460ff16156100be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064015b60405180910390fd5b005b6100be610174565b6100be6100d63660046102bb565b6000805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6100be6101303660046102f8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6100be61016f36600461031a565b6102ae565b60005460ff16156101e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064016100b5565b600080546040518291610100900473ffffffffffffffffffffffffffffffffffffffff1690610212906001906103df565b6000604051808303816000865af19150503d806000811461024f576040519150601f19603f3d011682016040523d82523d6000602084013e610254565b606091505b50915091507f2106b16c04ed7c28102e8f5bae2a81f8f969346efa3d397f8dd488794385d414828260405161028a929190610473565b60405180910390a18180156102a157815160208301f35b815160208301fd5b505050565b60016102a982848361056d565b6000602082840312156102cd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102f157600080fd5b9392505050565b60006020828403121561030a57600080fd5b813580151581146102f157600080fd5b6000806020838503121561032d57600080fd5b823567ffffffffffffffff8082111561034557600080fd5b818501915085601f83011261035957600080fd5b81358181111561036857600080fd5b86602082850101111561037a57600080fd5b60209290920196919550909350505050565b600181811c908216806103a057607f821691505b6020821081036103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008083546103ed8161038c565b60018281168015610405576001811461043857610467565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450610467565b8760005260208060002060005b8581101561045e5781548a820152908401908201610445565b50505082870194505b50929695505050505050565b821515815260006020604081840152835180604085015260005b818110156104a95785810183015185820160600152820161048d565b818111156104bb576000606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201606001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156102a957600081815260208120601f850160051c810160208610156105465750805b601f850160051c820191505b8181101561056557828155600101610552565b505050505050565b67ffffffffffffffff831115610585576105856104f0565b61059983610593835461038c565b8361051f565b6000601f8411600181146105eb57600085156105b55750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610681565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561063a578685013582556020948501946001909201910161061a565b5086821015610675577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea164736f6c634300080f000a","sourceMap":"992:1409:310:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:8;;;;2318:75;;;2346:36;;;;;216:2:350;2346:36:310;;;198:21:350;255:2;235:18;;;228:30;294:28;274:18;;;267:56;340:18;;2346:36:310;;;;;;;;2318:75;992:1409;1231:491;;;:::i;1935:78::-;;;;;;:::i;:::-;1990:6;:16;;;;;;;;;;;;;;;;;;1935:78;1786:83;;;;;;:::i;:::-;1842:8;:20;;;;;;;;;;;;;1786:83;2080:89;;;;;;:::i;:::-;;:::i;1231:491::-;1270:8;;;;1266:450;;;1294:36;;;;;216:2:350;1294:36:310;;;198:21:350;255:2;235:18;;;228:30;294:28;274:18;;;267:56;340:18;;1294:36:310;14:350:350;1266:450:310;1362:12;1411:6;;1403:29;;1362:12;;1411:6;;;;;;1403:29;;1411:6;;1403:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1361:71;;;;1451:33;1464:7;1473:10;1451:33;;;;;;;:::i;:::-;;;;;;;;1532:7;1556:59;;;;1678:10;1672:17;1665:4;1653:10;1649:21;1642:48;1556:59;1601:10;1595:17;1588:4;1576:10;1572:21;1565:48;1525:167;;1507:199;;1231:491::o;2080:89::-;2144:7;:18;2154:8;;2144:7;:18;:::i;369:309:350:-;428:6;481:2;469:9;460:7;456:23;452:32;449:52;;;497:1;494;487:12;449:52;536:9;523:23;586:42;579:5;575:54;568:5;565:65;555:93;;644:1;641;634:12;555:93;667:5;369:309;-1:-1:-1;;;369:309:350:o;683:273::-;739:6;792:2;780:9;771:7;767:23;763:32;760:52;;;808:1;805;798:12;760:52;847:9;834:23;900:5;893:13;886:21;879:5;876:32;866:60;;922:1;919;912:12;961:591;1031:6;1039;1092:2;1080:9;1071:7;1067:23;1063:32;1060:52;;;1108:1;1105;1098:12;1060:52;1148:9;1135:23;1177:18;1218:2;1210:6;1207:14;1204:34;;;1234:1;1231;1224:12;1204:34;1272:6;1261:9;1257:22;1247:32;;1317:7;1310:4;1306:2;1302:13;1298:27;1288:55;;1339:1;1336;1329:12;1288:55;1379:2;1366:16;1405:2;1397:6;1394:14;1391:34;;;1421:1;1418;1411:12;1391:34;1466:7;1461:2;1452:6;1448:2;1444:15;1440:24;1437:37;1434:57;;;1487:1;1484;1477:12;1434:57;1518:2;1510:11;;;;;1540:6;;-1:-1:-1;961:591:350;;-1:-1:-1;;;;961:591:350:o;1557:437::-;1636:1;1632:12;;;;1679;;;1700:61;;1754:4;1746:6;1742:17;1732:27;;1700:61;1807:2;1799:6;1796:14;1776:18;1773:38;1770:218;;1844:77;1841:1;1834:88;1945:4;1942:1;1935:15;1973:4;1970:1;1963:15;1770:218;;1557:437;;;:::o;2124:898::-;2250:3;2279:1;2312:6;2306:13;2342:36;2368:9;2342:36;:::i;:::-;2397:1;2414:18;;;2441:191;;;;2646:1;2641:356;;;;2407:590;;2441:191;2489:66;2478:9;2474:82;2469:3;2462:95;2612:6;2605:14;2598:22;2590:6;2586:35;2581:3;2577:45;2570:52;;2441:191;;2641:356;2672:6;2669:1;2662:17;2702:4;2747:2;2744:1;2734:16;2772:1;2786:165;2800:6;2797:1;2794:13;2786:165;;;2878:14;;2865:11;;;2858:35;2921:16;;;;2815:10;;2786:165;;;2790:3;;;2980:6;2975:3;2971:16;2964:23;;2407:590;-1:-1:-1;3013:3:350;;2124:898;-1:-1:-1;;;;;;2124:898:350:o;3027:735::-;3210:6;3203:14;3196:22;3185:9;3178:41;3159:4;3238:2;3276;3271;3260:9;3256:18;3249:30;3308:6;3302:13;3351:6;3346:2;3335:9;3331:18;3324:34;3376:1;3386:140;3400:6;3397:1;3394:13;3386:140;;;3495:14;;;3491:23;;3485:30;3461:17;;;3480:2;3457:26;3450:66;3415:10;;3386:140;;;3544:6;3541:1;3538:13;3535:91;;;3614:1;3609:2;3600:6;3589:9;3585:22;3581:31;3574:42;3535:91;-1:-1:-1;3678:2:350;3666:15;3683:66;3662:88;3647:104;;;;3753:2;3643:113;;3027:735;-1:-1:-1;;;;3027:735:350:o;3767:184::-;3819:77;3816:1;3809:88;3916:4;3913:1;3906:15;3940:4;3937:1;3930:15;3956:544;4057:2;4052:3;4049:11;4046:448;;;4093:1;4118:5;4114:2;4107:17;4163:4;4159:2;4149:19;4233:2;4221:10;4217:19;4214:1;4210:27;4204:4;4200:38;4269:4;4257:10;4254:20;4251:47;;;-1:-1:-1;4292:4:350;4251:47;4347:2;4342:3;4338:12;4335:1;4331:20;4325:4;4321:31;4311:41;;4402:82;4420:2;4413:5;4410:13;4402:82;;;4465:17;;;4446:1;4435:13;4402:82;;;4406:3;;;3956:544;;;:::o;4736:1321::-;4858:18;4853:3;4850:27;4847:53;;;4880:18;;:::i;:::-;4909:93;4998:3;4958:38;4990:4;4984:11;4958:38;:::i;:::-;4952:4;4909:93;:::i;:::-;5028:1;5053:2;5048:3;5045:11;5070:1;5065:734;;;;5843:1;5860:3;5857:93;;;-1:-1:-1;5916:19:350;;;5903:33;5857:93;4642:66;4633:1;4629:11;;;4625:84;4621:89;4611:100;4717:1;4713:11;;;4608:117;5963:78;;5038:1013;;5065:734;2071:1;2064:14;;;2108:4;2095:18;;5110:66;5101:76;;;5260:9;5282:229;5296:7;5293:1;5290:14;5282:229;;;5385:19;;;5372:33;5357:49;;5492:4;5477:20;;;;5445:1;5433:14;;;;5312:12;5282:229;;;5286:3;5539;5530:7;5527:16;5524:219;;;5659:66;5653:3;5647;5644:1;5640:11;5636:21;5632:94;5628:99;5615:9;5610:3;5606:19;5593:33;5589:139;5581:6;5574:155;5524:219;;;5786:1;5780:3;5777:1;5773:11;5769:19;5763:4;5756:33;5038:1013;;;4736:1321;;;:::o","linkReferences":{}},"methodIdentifiers":{"call()":"28b5e32b","setDoRevert(bool)":"781dd750","setPayload(bytes)":"deb3cdf2","setTarget(address)":"776d1a01"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returndata\",\"type\":\"bytes\"}],\"name\":\"WhatHappened\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_doRevert\",\"type\":\"bool\"}],\"name\":\"setDoRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"setPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Used for testing the `CrossDomainMessenger`'s per-message reentrancy guard.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"call()\":{\"notice\":\"Call the configured target with the configured payload OR revert.\"},\"setDoRevert(bool)\":{\"notice\":\"Set whether or not to have `call` revert.\"},\"setPayload(bytes)\":{\"notice\":\"Set the payload for the call made in `call`.\"},\"setTarget(address)\":{\"notice\":\"Set the target for the call made in `call`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/Callers.sol\":\"ConfigurableCaller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"test/mocks/Callers.sol\":{\"keccak256\":\"0x844c8fc5f94fd3c7372b2d64d19655b9624ae1799b963055c7329ec720070f9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9240cfd20be3f973ee0319cda59beaad2b9a33ac2ac08e73251bff35fc45a2b\",\"dweb:/ipfs/QmdKQFqucQvGKJ2jxr96PMLrZoFYLHzKmFCV4iSu7dNMCL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool","indexed":false},{"internalType":"bytes","name":"returndata","type":"bytes","indexed":false}],"type":"event","name":"WhatHappened","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"call"},{"inputs":[{"internalType":"bool","name":"_doRevert","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setDoRevert"},{"inputs":[{"internalType":"bytes","name":"_payload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setPayload"},{"inputs":[{"internalType":"address","name":"_target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setTarget"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"call()":{"notice":"Call the configured target with the configured payload OR revert."},"setDoRevert(bool)":{"notice":"Set whether or not to have `call` revert."},"setPayload(bytes)":{"notice":"Set the payload for the call made in `call`."},"setTarget(address)":{"notice":"Set the target for the call made in `call`."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"test/mocks/Callers.sol":"ConfigurableCaller"},"evmVersion":"london","libraries":{}},"sources":{"test/mocks/Callers.sol":{"keccak256":"0x844c8fc5f94fd3c7372b2d64d19655b9624ae1799b963055c7329ec720070f9c","urls":["bzz-raw://d9240cfd20be3f973ee0319cda59beaad2b9a33ac2ac08e73251bff35fc45a2b","dweb:/ipfs/QmdKQFqucQvGKJ2jxr96PMLrZoFYLHzKmFCV4iSu7dNMCL"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":191378,"contract":"test/mocks/Callers.sol:ConfigurableCaller","label":"doRevert","offset":0,"slot":"0","type":"t_bool"},{"astId":191380,"contract":"test/mocks/Callers.sol:ConfigurableCaller","label":"target","offset":1,"slot":"0","type":"t_address"},{"astId":191382,"contract":"test/mocks/Callers.sol:ConfigurableCaller","label":"payload","offset":0,"slot":"1","type":"t_bytes_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"}}},"userdoc":{"version":1,"kind":"user","methods":{"call()":{"notice":"Call the configured target with the configured payload OR revert."},"setDoRevert(bool)":{"notice":"Set whether or not to have `call` revert."},"setPayload(bytes)":{"notice":"Set the payload for the call made in `call`."},"setTarget(address)":{"notice":"Set the target for the call made in `call`."}}},"devdoc":{"version":1,"kind":"dev","details":"Used for testing the `CrossDomainMessenger`'s per-message reentrancy guard."},"id":310}